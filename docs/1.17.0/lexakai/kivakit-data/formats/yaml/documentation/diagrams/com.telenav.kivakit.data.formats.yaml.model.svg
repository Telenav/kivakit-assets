<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1128.125px" preserveAspectRatio="none" style="width:1190px;height:1128px;background:#333333;" version="1.1" viewBox="0 0 1190 1128" width="1190.625px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="472.9167" x="351.5625" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="450" x="363.0208" y="30.5583">com.telenav.kivakit.data.formats.yaml.model</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="7" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="559.375" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="559.375" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="559.375" y="79.8828"/><rect codeLine="7" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="559.375" y="56.8278"/><ellipse cx="573.9583" cy="72.522" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M571.3623,69.6838 L571.3623,68.0969 L576.7883,68.0969 L576.7883,69.6838 L574.9756,69.6838 L574.9756,75.6226 L576.7883,75.6226 L576.7883,77.2095 L571.3623,77.2095 L571.3623,75.6226 L573.175,75.6226 L573.175,69.6838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="590.625" y="77.2461">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="560.4167" x2="640.625" y1="88.2161" y2="88.2161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="560.4167" x2="640.625" y1="96.5495" y2="96.5495"/><!--MD5=[41412054e4dc34b651f1c126e1fca3c0]
class YamlNodeContainer--><rect codeLine="77" fill="#282828" height="131.2012" id="YamlNodeContainer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="267.7083" x="116.6667" y="260.4736"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="267.7083" x="116.6667" y="260.4736"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="267.7083" x="116.6667" y="283.5286"/><rect codeLine="77" fill="none" height="131.2012" id="YamlNodeContainer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="267.7083" x="116.6667" y="260.4736"/><ellipse cx="178.6458" cy="276.1678" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M176.0498,273.3297 L176.0498,271.7428 L181.4758,271.7428 L181.4758,273.3297 L179.6631,273.3297 L179.6631,279.2684 L181.4758,279.2684 L181.4758,280.8553 L176.0498,280.8553 L176.0498,279.2684 L177.8625,279.2684 L177.8625,273.3297 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="129.1667" x="201.5625" y="280.8919">YamlNodeContainer</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="117.7083" x2="383.3333" y1="291.862" y2="291.862"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="117.7083" x2="383.3333" y1="300.1953" y2="300.1953"/><ellipse cx="128.125" cy="311.6536" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="139.5833" y="318.5649">YamlNode prepending(YamlNode element)</text><ellipse cx="128.125" cy="355.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="139.5833" y="362.2213">ObjectList&lt;YamlNode&gt; elements()</text><ellipse cx="128.125" cy="375.0549" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="139.5833" y="381.9661">int size()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="117.7083" x2="216.1458" y1="338.146" y2="338.146"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="219.2708" y="341.9556">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="284.8958" x2="383.3333" y1="338.146" y2="338.146"/><!--MD5=[c7b9874db900c11613f4491a9cd3e758]
class YamlNode--><rect codeLine="57" fill="#282828" height="317.2384" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="500.5208" y="167.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="500.5208" y="167.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="500.5208" y="190.2995"/><rect codeLine="57" fill="none" height="317.2384" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="500.5208" y="167.2445"/><ellipse cx="560.4167" cy="182.9386" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M560.0098,179.6407 L559.1614,183.37 L560.8643,183.37 Z M558.9111,177.9928 L561.1145,177.9928 L563.5742,187.1053 L561.7737,187.1053 L561.2122,184.8531 L558.8013,184.8531 L558.252,187.1053 L556.4514,187.1053 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="583.3333" y="187.6628">YamlNode</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="501.5625" x2="699.4792" y1="198.6328" y2="198.6328"/><polygon fill="#FFFF44" points="511.9792,228.7944,516.1458,232.961,511.9792,237.1277,507.8125,232.961" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="523.4375" y="240.9139">YamlNode(String)</text><polygon fill="#FFFF44" points="511.9792,248.5392,516.1458,252.7059,511.9792,256.8726,507.8125,252.7059" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="523.4375" y="260.6588">YamlNode(YamlNode)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="556.7708" y1="216.8386" y2="216.8386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="559.8958" y="220.6482">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="644.2708" x2="699.4792" y1="216.8386" y2="216.8386"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="699.4792" y1="270.3674" y2="270.3674"/><ellipse cx="511.9792" cy="281.8258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="523.4375" y="288.737">void parent(YamlNode parent)</text><ellipse cx="511.9792" cy="301.5706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="523.4375" y="308.4819">YamlNode parent()</text><ellipse cx="511.9792" cy="345.2271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="523.4375" y="352.1383">boolean isNamed()</text><ellipse cx="511.9792" cy="364.9719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="523.4375" y="371.8831">boolean isUnnamed()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="573.9583" y1="328.0629" y2="328.0629"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="577.0833" y="331.8726">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="627.0833" x2="699.4792" y1="328.0629" y2="328.0629"/><ellipse cx="511.9792" cy="408.6283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="113.5417" x="523.4375" y="415.5396">YamlArray asArray()</text><ellipse cx="511.9792" cy="428.3732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="523.4375" y="435.2844">YamlBlock asBlock()</text><ellipse cx="511.9792" cy="448.1181" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="523.4375" y="455.0293">YamlLiteral asLiteral()</text><ellipse cx="511.9792" cy="467.863" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="523.4375" y="474.7742">YamlScalar asScalar()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="561.9792" y1="391.4642" y2="391.4642"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="565.1042" y="395.2738">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="639.0625" x2="699.4792" y1="391.4642" y2="391.4642"/><!--MD5=[b6458320635909f60e208a8315da07f3]
class YamlArray--><rect codeLine="12" fill="#282828" height="210.1807" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="7.2917" y="729.2236"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="7.2917" y="729.2236"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="7.2917" y="752.2786"/><rect codeLine="12" fill="none" height="210.1807" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="7.2917" y="729.2236"/><ellipse cx="79.6875" cy="744.9178" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M81.5979,749.3429 Q81.1707,749.5626 80.7007,749.6724 Q80.2307,749.7823 79.7119,749.7823 Q77.8687,749.7823 76.8982,748.5677 Q75.9277,747.3531 75.9277,745.0582 Q75.9277,742.7572 76.8982,741.5426 Q77.8687,740.328 79.7119,740.328 Q80.2307,740.328 80.7068,740.4378 Q81.1829,740.5477 81.5979,740.7674 L81.5979,742.7694 Q81.134,742.3421 80.6976,742.1438 Q80.2612,741.9454 79.7974,741.9454 Q78.8086,741.9454 78.3051,742.7297 Q77.8015,743.514 77.8015,745.0582 Q77.8015,746.5963 78.3051,747.3806 Q78.8086,748.1649 79.7974,748.1649 Q80.2612,748.1649 80.6976,747.9665 Q81.134,747.7681 81.5979,747.3409 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="102.6042" y="749.6419">YamlArray</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="232.2917" y1="760.612" y2="760.612"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="232.2917" y1="768.9453" y2="768.9453"/><ellipse cx="18.75" cy="780.4036" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="30.2083" y="787.3149">YamlNode get(int index)</text><ellipse cx="18.75" cy="824.0601" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="30.2083" y="830.9713">YamlArray copy()</text><ellipse cx="18.75" cy="843.8049" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="30.2083" y="850.7161">Count count()</text><ellipse cx="18.75" cy="863.5498" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="30.2083" y="870.461">boolean isEmpty()</text><ellipse cx="18.75" cy="883.2947" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="30.2083" y="890.2059">YamlArray with(YamlNode)</text><ellipse cx="18.75" cy="903.0396" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="30.2083" y="909.9508">YamlArray yamlArray()</text><ellipse cx="18.75" cy="922.7844" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="30.2083" y="929.6956">YamlArray yamlArray(String name)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="85.9375" y1="806.896" y2="806.896"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="89.0625" y="810.7056">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="154.6875" x2="232.2917" y1="806.896" y2="806.896"/><!--MD5=[66a25c763ed576eb2bc685155ff31bb7]
class YamlBlock--><rect codeLine="27" fill="#282828" height="313.0717" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="221.875" x="269.7917" y="677.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="221.875" x="269.7917" y="677.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="221.875" x="269.7917" y="700.7161"/><rect codeLine="27" fill="none" height="313.0717" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="221.875" x="269.7917" y="677.6611"/><ellipse cx="339.5833" cy="693.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M341.4937,697.7804 Q341.0665,698.0001 340.5965,698.1099 Q340.1265,698.2198 339.6077,698.2198 Q337.7645,698.2198 336.794,697.0052 Q335.8236,695.7906 335.8236,693.4957 Q335.8236,691.1947 336.794,689.9801 Q337.7645,688.7655 339.6077,688.7655 Q340.1265,688.7655 340.6026,688.8753 Q341.0787,688.9852 341.4937,689.2049 L341.4937,691.2069 Q341.0299,690.7796 340.5935,690.5813 Q340.1571,690.3829 339.6932,690.3829 Q338.7044,690.3829 338.2009,691.1672 Q337.6973,691.9515 337.6973,693.4957 Q337.6973,695.0338 338.2009,695.8181 Q338.7044,696.6024 339.6932,696.6024 Q340.1571,696.6024 340.5935,696.404 Q341.0299,696.2056 341.4937,695.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="67.7083" x="362.5" y="698.0794">YamlBlock</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="270.8333" x2="490.625" y1="709.0495" y2="709.0495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="270.8333" x2="490.625" y1="717.3828" y2="717.3828"/><ellipse cx="281.25" cy="728.8411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="292.7083" y="735.7524">YamlBlock block(String name)</text><ellipse cx="281.25" cy="748.586" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="292.7083" y="755.4972">YamlNode get(String name)</text><ellipse cx="281.25" cy="768.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="292.7083" y="775.2421">boolean has(String name)</text><ellipse cx="281.25" cy="788.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="292.7083" y="794.987">YamlLiteral literal(String name)</text><ellipse cx="281.25" cy="807.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="292.7083" y="814.7319">YamlScalar scalar(String name)</text><ellipse cx="281.25" cy="827.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="292.7083" y="834.4767">YamlBlock with(YamlNode)</text><ellipse cx="281.25" cy="847.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="292.7083" y="854.2216">YamlBlock yamlBlock()</text><ellipse cx="281.25" cy="867.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="292.7083" y="873.9665">YamlBlock yamlBlock(String name)</text><ellipse cx="281.25" cy="910.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="292.7083" y="917.6229">void addReference(String type)</text><ellipse cx="281.25" cy="930.4565" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="292.7083" y="937.3678">YamlArray array(String name)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="270.8333" x2="346.3542" y1="893.5476" y2="893.5476"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="349.4792" y="897.3572">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="415.1042" x2="490.625" y1="893.5476" y2="893.5476"/><ellipse cx="281.25" cy="974.113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="292.7083" y="981.0242">YamlBlock copy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="270.8333" x2="345.3125" y1="956.9489" y2="956.9489"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="348.4375" y="960.7585">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="416.1458" x2="490.625" y1="956.9489" y2="956.9489"/><!--MD5=[f1b95bf9207b3eab74dd96efa6f5af2f]
class YamlLiteral--><rect codeLine="46" fill="#282828" height="155.1127" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="304.1667" x="528.6458" y="756.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="304.1667" x="528.6458" y="756.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="304.1667" x="528.6458" y="779.8828"/><rect codeLine="46" fill="none" height="155.1127" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="304.1667" x="528.6458" y="756.8278"/><ellipse cx="636.9792" cy="772.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M638.8896,776.947 Q638.4623,777.1667 637.9924,777.2766 Q637.5224,777.3865 637.0036,777.3865 Q635.1603,777.3865 634.1899,776.1719 Q633.2194,774.9573 633.2194,772.6624 Q633.2194,770.3613 634.1899,769.1467 Q635.1603,767.9321 637.0036,767.9321 Q637.5224,767.9321 637.9985,768.042 Q638.4745,768.1519 638.8896,768.3716 L638.8896,770.3735 Q638.4257,769.9463 637.9893,769.7479 Q637.5529,769.5496 637.089,769.5496 Q636.1003,769.5496 635.5967,770.3339 Q635.0932,771.1182 635.0932,772.6624 Q635.0932,774.2004 635.5967,774.9847 Q636.1003,775.769 637.089,775.769 Q637.5529,775.769 637.9893,775.5707 Q638.4257,775.3723 638.8896,774.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="72.9167" x="659.8958" y="777.2461">YamlLiteral</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="529.6875" x2="831.7708" y1="788.2161" y2="788.2161"/><polygon fill="#FFFF44" points="540.1042,818.3777,544.2708,822.5444,540.1042,826.711,535.9375,822.5444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="551.5625" y="830.4972">YamlLiteral(String, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="636.9792" y1="806.4219" y2="806.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="640.1042" y="810.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="724.4792" x2="831.7708" y1="806.4219" y2="806.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="831.7708" y1="840.2059" y2="840.2059"/><ellipse cx="540.1042" cy="851.6642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="551.5625" y="858.5754">YamlLiteral yamlLiteral(String name, String value)</text><ellipse cx="540.1042" cy="895.3206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="551.5625" y="902.2319">String value()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="646.3542" y1="878.1565" y2="878.1565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="649.4792" y="881.9661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="715.1042" x2="831.7708" y1="878.1565" y2="878.1565"/><!--MD5=[47de47a8b5f06cbc5e036fae0a9149b7]
class Iterable--><rect codeLine="75" fill="#282828" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="162.5" x="169.2708" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="162.5" x="169.2708" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="162.5" x="169.2708" y="79.8828"/><rect codeLine="75" fill="none" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="162.5" x="169.2708" y="56.8278"/><ellipse cx="183.8542" cy="72.522" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M181.2581,69.6838 L181.2581,68.0969 L186.6842,68.0969 L186.6842,69.6838 L184.8714,69.6838 L184.8714,75.6226 L186.6842,75.6226 L186.6842,77.2095 L181.2581,77.2095 L181.2581,75.6226 L183.0709,75.6226 L183.0709,69.6838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="200.5208" y="77.2461">Iterable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="73.9583" x="260.9375" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="265.1042" y="69.9544">YamlNode</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="170.3125" x2="330.7292" y1="88.2161" y2="88.2161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="170.3125" x2="330.7292" y1="96.5495" y2="96.5495"/><!--MD5=[0af342a0315717a4a2eee0dd5076e71f]
class YamlScalar--><rect codeLine="87" fill="#282828" height="573.9217" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="313.5417" x="869.7917" y="547.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="313.5417" x="869.7917" y="547.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="313.5417" x="869.7917" y="570.5078"/><rect codeLine="87" fill="none" height="573.9217" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="313.5417" x="869.7917" y="547.4528"/><ellipse cx="984.375" cy="563.147" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M986.2854,567.572 Q985.8582,567.7917 985.3882,567.9016 Q984.9182,568.0115 984.3994,568.0115 Q982.5562,568.0115 981.5857,566.7969 Q980.6152,565.5823 980.6152,563.2874 Q980.6152,560.9863 981.5857,559.7717 Q982.5562,558.5571 984.3994,558.5571 Q984.9182,558.5571 985.3943,558.667 Q985.8704,558.7769 986.2854,558.9966 L986.2854,560.9985 Q985.8215,560.5713 985.3851,560.3729 Q984.9487,560.1746 984.4849,560.1746 Q983.4961,560.1746 982.9926,560.9589 Q982.489,561.7432 982.489,563.2874 Q982.489,564.8254 982.9926,565.6097 Q983.4961,566.394 984.4849,566.394 Q984.9487,566.394 985.3851,566.1957 Q985.8215,565.9973 986.2854,565.5701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="69.7917" x="1007.2917" y="567.8711">YamlScalar</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="870.8333" x2="1182.2917" y1="578.8411" y2="578.8411"/><polygon fill="#FFFF44" points="881.25,609.0027,885.4167,613.1694,881.25,617.336,877.0833,613.1694" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="892.7083" y="621.1222">YamlScalar(String)</text><polygon fill="#FFFF44" points="881.25,628.7476,885.4167,632.9142,881.25,637.0809,877.0833,632.9142" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="892.7083" y="640.8671">YamlScalar(String, Boolean)</text><polygon fill="#FFFF44" points="881.25,648.4924,885.4167,652.6591,881.25,656.8258,877.0833,652.6591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="892.7083" y="660.612">YamlScalar(String, Number)</text><polygon fill="#FFFF44" points="881.25,668.2373,885.4167,672.404,881.25,676.5706,877.0833,672.404" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="892.7083" y="680.3569">YamlScalar(String, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="870.8333" x2="982.8125" y1="597.0469" y2="597.0469"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="985.9375" y="600.8565">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1070.3125" x2="1182.2917" y1="597.0469" y2="597.0469"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="870.8333" x2="1182.2917" y1="690.0655" y2="690.0655"/><ellipse cx="881.25" cy="701.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="892.7083" y="708.4351">Number number()</text><ellipse cx="881.25" cy="721.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="892.7083" y="728.1799">String string()</text><ellipse cx="881.25" cy="741.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="892.7083" y="747.9248">boolean truth()</text><ellipse cx="881.25" cy="760.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="892.7083" y="767.6697">YamlScalar yamlEnumValue(String name)</text><ellipse cx="881.25" cy="780.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="892.7083" y="787.4146">YamlScalar yamlScalar(String value)</text><ellipse cx="881.25" cy="800.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="892.7083" y="807.1594">YamlScalar yamlScalar(String name, Number value)</text><ellipse cx="881.25" cy="819.9931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="892.7083" y="826.9043">YamlScalar yamlScalar(String name, Boolean value)</text><ellipse cx="881.25" cy="839.738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="892.7083" y="846.6492">YamlScalar yamlScalar(String name, String value)</text><ellipse cx="881.25" cy="883.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="892.7083" y="890.3056">boolean isBoolean()</text><ellipse cx="881.25" cy="903.1392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="892.7083" y="910.0505">boolean isEnum()</text><ellipse cx="881.25" cy="922.8841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="892.7083" y="929.7953">boolean isNumber()</text><ellipse cx="881.25" cy="942.629" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="892.7083" y="949.5402">boolean isString()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="870.8333" x2="1000" y1="866.2303" y2="866.2303"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1003.125" y="870.0399">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1053.125" x2="1182.2917" y1="866.2303" y2="866.2303"/><ellipse cx="881.25" cy="986.2854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="82.2917" x="892.7083" y="993.1966">Bytes asBytes()</text><ellipse cx="881.25" cy="1006.0303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="892.7083" y="1012.9415">int asInt()</text><ellipse cx="881.25" cy="1025.7751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="892.7083" y="1032.6864">LocalTime asLocalFilesystemTime()</text><ellipse cx="881.25" cy="1045.52" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="892.7083" y="1052.4312">LocalTime asLocalTime()</text><ellipse cx="881.25" cy="1065.2649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="892.7083" y="1072.1761">long asLong()</text><ellipse cx="881.25" cy="1085.0098" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="892.7083" y="1091.921">T asObject(StringConverter&lt;T&gt;)</text><ellipse cx="881.25" cy="1104.7546" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="892.7083" y="1111.6659">T asObject(Function&lt;String,T&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="870.8333" x2="988.0208" y1="969.1213" y2="969.1213"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="991.1458" y="972.9309">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1065.1042" x2="1182.2917" y1="969.1213" y2="969.1213"/><!--MD5=[db743fea5dab9d20fcb78988eea025c0]
reverse link YamlNode to YamlArray--><path codeLine="10" d="M482.9063,429.6924 C457.3646,449.4215 429.8229,468.9007 402.6042,484.9528 C340.0208,521.8486 303.8958,497.0674 251.5625,547.4528 C200.6042,596.5153 167.6146,669.109 147.4583,728.8695 " fill="none" id="YamlNode-backto-YamlArray" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="478.125,424.182,499,417.0153,487.1458,435.6403,478.125,424.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[24b023c19b71bb9181d005c72e0a8a69]
reverse link YamlNodeContainer to YamlArray--><path codeLine="11" d="M228.3229,413.432 C205.8646,500.7757 171.1042,635.9007 147.1146,729.1715 " fill="none" id="YamlNodeContainer-backto-YamlArray" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="221.25,411.6611,233.5,393.2965,235.375,415.2861,221.25,411.6611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[045de639329415ff06ee9d76e86ea190]
reverse link YamlNode to YamlBlock--><path codeLine="25" d="M523.0313,505.609 C498.7083,561.6299 472.0625,623.0153 448.4688,677.359 " fill="none" id="YamlNode-backto-YamlBlock" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="516.2708,502.8903,531.25,486.682,529.6458,508.7028,516.2708,502.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0818a8b1b6a84f4d12ed42ea5a7be298]
reverse link YamlNodeContainer to YamlBlock--><path codeLine="26" d="M272.625,413.0674 C291.1875,485.2653 318.2083,590.2965 340.5833,677.307 " fill="none" id="YamlNodeContainer-backto-YamlBlock" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="265.6667,415.2861,267.5417,393.2965,279.7917,411.6611,265.6667,415.2861" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfb97e969cafb16af26be83e042869b9]
reverse link YamlNode to YamlLiteral--><path codeLine="45" d="M629.0625,507.2861 C642.625,592.8695 658.1146,690.6299 668.5625,756.609 " fill="none" id="YamlNode-backto-YamlLiteral" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="621.875,508.5153,625.8125,486.7965,636.2813,506.234,621.875,508.5153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7a32146df0f83c0cea3910c19cc3c22a]
reverse link Named to YamlNode--><path codeLine="56" d="M600.5208,127.4945 C600.5208,139.307 600.5208,152.7132 600.5208,166.8486 " fill="none" id="Named-backto-YamlNode" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="593.2292,127.557,600.5208,106.7236,607.8125,127.557,593.2292,127.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[a9d7fe5f24f0e9fc3a82d921b07f1bab]
reverse link Iterable to YamlNodeContainer--><path codeLine="76" d="M250.5208,127.359 C250.5208,164.7236 250.5208,218.0986 250.5208,259.9736 " fill="none" id="Iterable-backto-YamlNodeContainer" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="243.2292,127.557,250.5208,106.7236,257.8125,127.557,243.2292,127.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[37cb950b669d7cd1f5c0a21138fddc5e]
reverse link YamlNode to YamlScalar--><path codeLine="86" d="M717.9271,417.5153 C762.5938,455.0049 812.1563,500.6507 851.5625,547.4528 C857.5625,554.5778 863.4896,561.9215 869.3438,569.4424 " fill="none" id="YamlNode-backto-YamlScalar" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="713.375,423.2028,701.9792,404.2965,722.6771,411.9736,713.375,423.2028" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[175fe10dba0a1c743b224f1fe2681885]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.data.formats.yaml.model"
    
    interface Named
    interface YamlNodeContainer
    
    YamlNode <|- - YamlArray
    YamlNodeContainer <|- - YamlArray
    class YamlArray
    {
        - -
        +YamlNode get(int index)
        - -(collection)- -
        +YamlArray copy()
        +Count count()
        +boolean isEmpty()
        +YamlArray with(YamlNode)
        +YamlArray yamlArray()
        +YamlArray yamlArray(String name)
    }
    
    YamlNode <|- - YamlBlock
    YamlNodeContainer <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlLiteral literal(String name)
        +YamlScalar scalar(String name)
        +YamlBlock with(YamlNode)
        +YamlBlock yamlBlock()
        +YamlBlock yamlBlock(String name)
        - -(collection)- -
        +void addReference(String type)
        +YamlArray array(String name)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -(constructors)- -
        #YamlLiteral(String, String)
        - -
        +YamlLiteral yamlLiteral(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        #YamlNode(String)
        #YamlNode(YamlNode)
        - -
        +void parent(YamlNode parent)
        +YamlNode parent()
        - -(checks)- -
        +boolean isNamed()
        +boolean isUnnamed()
        - -(conversion)- -
        +YamlArray asArray()
        +YamlBlock asBlock()
        +YamlLiteral asLiteral()
        +YamlScalar asScalar()
    }
    
    interface Iterable<YamlNode>
    Iterable <|- - YamlNodeContainer
    interface YamlNodeContainer
    {
        - -
        +YamlNode prepending(YamlNode element)
        - -(collection)- -
        +ObjectList<YamlNode> elements()
        +int size()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -(constructors)- -
        #YamlScalar(String)
        #YamlScalar(String, Boolean)
        #YamlScalar(String, Number)
        #YamlScalar(String, String)
        - -
        +Number number()
        +String string()
        +boolean truth()
        +YamlScalar yamlEnumValue(String name)
        +YamlScalar yamlScalar(String value)
        +YamlScalar yamlScalar(String name, Number value)
        +YamlScalar yamlScalar(String name, Boolean value)
        +YamlScalar yamlScalar(String name, String value)
        - -(checks)- -
        +boolean isBoolean()
        +boolean isEnum()
        +boolean isNumber()
        +boolean isString()
        - -(conversion)- -
        +Bytes asBytes()
        +int asInt()
        +LocalTime asLocalFilesystemTime()
        +LocalTime asLocalTime()
        +long asLong()
        +T asObject(StringConverter<T>)
        +T asObject(Function<String,T>)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.data.formats.yaml.model"
    
    interface Named
    interface YamlNodeContainer
    
    YamlNode <|- - YamlArray
    YamlNodeContainer <|- - YamlArray
    class YamlArray
    {
        - -
        +YamlNode get(int index)
        - -(collection)- -
        +YamlArray copy()
        +Count count()
        +boolean isEmpty()
        +YamlArray with(YamlNode)
        +YamlArray yamlArray()
        +YamlArray yamlArray(String name)
    }
    
    YamlNode <|- - YamlBlock
    YamlNodeContainer <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlLiteral literal(String name)
        +YamlScalar scalar(String name)
        +YamlBlock with(YamlNode)
        +YamlBlock yamlBlock()
        +YamlBlock yamlBlock(String name)
        - -(collection)- -
        +void addReference(String type)
        +YamlArray array(String name)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -(constructors)- -
        #YamlLiteral(String, String)
        - -
        +YamlLiteral yamlLiteral(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        #YamlNode(String)
        #YamlNode(YamlNode)
        - -
        +void parent(YamlNode parent)
        +YamlNode parent()
        - -(checks)- -
        +boolean isNamed()
        +boolean isUnnamed()
        - -(conversion)- -
        +YamlArray asArray()
        +YamlBlock asBlock()
        +YamlLiteral asLiteral()
        +YamlScalar asScalar()
    }
    
    interface Iterable<YamlNode>
    Iterable <|- - YamlNodeContainer
    interface YamlNodeContainer
    {
        - -
        +YamlNode prepending(YamlNode element)
        - -(collection)- -
        +ObjectList<YamlNode> elements()
        +int size()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -(constructors)- -
        #YamlScalar(String)
        #YamlScalar(String, Boolean)
        #YamlScalar(String, Number)
        #YamlScalar(String, String)
        - -
        +Number number()
        +String string()
        +boolean truth()
        +YamlScalar yamlEnumValue(String name)
        +YamlScalar yamlScalar(String value)
        +YamlScalar yamlScalar(String name, Number value)
        +YamlScalar yamlScalar(String name, Boolean value)
        +YamlScalar yamlScalar(String name, String value)
        - -(checks)- -
        +boolean isBoolean()
        +boolean isEnum()
        +boolean isNumber()
        +boolean isString()
        - -(conversion)- -
        +Bytes asBytes()
        +int asInt()
        +LocalTime asLocalFilesystemTime()
        +LocalTime asLocalTime()
        +long asLong()
        +T asObject(StringConverter<T>)
        +T asObject(Function<String,T>)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>