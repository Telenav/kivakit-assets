@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.collections.set"
    
    abstract BaseSet
    abstract AbstractSet
    
    interface Countable
    interface Instantiable
    interface Serializable
    interface Set
    interface Addable
    interface Stringable
    
    Set <|-- BaseSet
    Instantiable <|-- BaseSet
    Countable <|-- BaseSet
    Addable <|-- BaseSet
    Stringable <|-- BaseSet
    abstract class BaseSet<Element>
    {
        --(constructors)--
        #BaseSet()
        +BaseSet(Maximum)
        +BaseSet(Maximum, Set<Element>)
        +BaseSet(Set<Element>)
        --
        +BaseSet<Element> matching(Matcher<Element>)
        +BaseSet<Element> with(Collection<Element> that)
        --(collection)--
        +void addAll(Element[] objects)
        +void addAllMatching(Collection<Element> values, Matcher<Element>)
        +Element first()
        +Iterable<Element> matchingAsIterable(Matcher<Element>)
        +Count maximumSize()
        #boolean checkSize(int increase)
        --(filesystem)--
        +BaseSet<Element> copy()
    }
    
    Set <|-- ConcurrentHashSet
    Serializable <|-- ConcurrentHashSet
    class ConcurrentHashSet<Element>
    {
        --(constructors)--
        +ConcurrentHashSet()
        +ConcurrentHashSet(int, float)
        --
        +Element get(Element prototype)
        +Element take(Element prototype)
        --(collection)--
        +boolean containsAdd(Element object)
    }
    
    AbstractSet <|-- IdentitySet
    class IdentitySet<Element>
    {
    }
    
    BaseSet <|-- ObjectSet
    class ObjectSet<T>
    {
        --(constructors)--
        +ObjectSet()
        +ObjectSet(Maximum)
        +ObjectSet(Maximum, Set<T>)
        +ObjectSet(Set<T>)
        --
        +ObjectSet<T> objectSet(T... objects)
        +ObjectSet<T> objectSet(Collection<T> objects)
        --(collection)--
        +boolean addIfNotNull(T object)
        +ObjectSet<T> emptyObjectSet()
    }
    
@enduml

