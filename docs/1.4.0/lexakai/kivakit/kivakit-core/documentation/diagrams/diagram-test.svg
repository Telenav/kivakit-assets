<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3154.1667px" preserveAspectRatio="none" style="width:1445px;height:3154px;background:#333333;" version="1.1" viewBox="0 0 1445 3154" width="1445.8333px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="155.2083" x="638.0208" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="132.2917" x="649.4792" y="30.5583">diagram-test</text><!--MD5=[0543f1fea1dfbc84657cf745773c4fab]
class RepeaterMixin--><rect codeLine="6" fill="#282828" height="48.055" id="RepeaterMixin" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="7.2917" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="7.2917" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="7.2917" y="205.9245"/><rect codeLine="6" fill="none" height="48.055" id="RepeaterMixin" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="7.2917" y="182.8695"/><ellipse cx="21.875" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M19.279,195.7255 L19.279,194.1386 L24.705,194.1386 L24.705,195.7255 L22.8923,195.7255 L22.8923,201.6642 L24.705,201.6642 L24.705,203.2511 L19.279,203.2511 L19.279,201.6642 L21.0917,201.6642 L21.0917,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="91.6667" x="38.5417" y="203.2878">RepeaterMixin</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="135.4167" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="135.4167" y1="222.5911" y2="222.5911"/><!--MD5=[2b2bf73242cbb5b08f9d09de1d05fde0]
class FailureReporter--><rect codeLine="7" fill="#282828" height="48.055" id="FailureReporter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="136.4583" x="1048.4375" y="1270.8903"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="136.4583" x="1048.4375" y="1270.8903"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="136.4583" x="1048.4375" y="1293.9453"/><rect codeLine="7" fill="none" height="48.055" id="FailureReporter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="136.4583" x="1048.4375" y="1270.8903"/><ellipse cx="1063.0208" cy="1286.5845" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1060.4248,1283.7463 L1060.4248,1282.1594 L1065.8508,1282.1594 L1065.8508,1283.7463 L1064.0381,1283.7463 L1064.0381,1289.6851 L1065.8508,1289.6851 L1065.8508,1291.272 L1060.4248,1291.272 L1060.4248,1289.6851 L1062.2375,1289.6851 L1062.2375,1283.7463 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="98.9583" x="1079.6875" y="1291.3086">FailureReporter</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1049.4792" x2="1183.8542" y1="1302.2786" y2="1302.2786"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1049.4792" x2="1183.8542" y1="1310.612" y2="1310.612"/><!--MD5=[2d01ac37af1bea71bcd947d45699fea9]
class ProjectTrait--><rect codeLine="8" fill="#282828" height="48.055" id="ProjectTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="173.4375" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="173.4375" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="173.4375" y="205.9245"/><rect codeLine="8" fill="none" height="48.055" id="ProjectTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="173.4375" y="182.8695"/><ellipse cx="188.0208" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M185.4248,195.7255 L185.4248,194.1386 L190.8508,194.1386 L190.8508,195.7255 L189.0381,195.7255 L189.0381,201.6642 L190.8508,201.6642 L190.8508,203.2511 L185.4248,203.2511 L185.4248,201.6642 L187.2375,201.6642 L187.2375,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="204.6875" y="203.2878">ProjectTrait</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="174.4792" x2="283.8542" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="174.4792" x2="283.8542" y1="222.5911" y2="222.5911"/><!--MD5=[c20ec3b23c5cd026e431ec936aacf9ea]
class JavaTrait--><rect codeLine="9" fill="#282828" height="48.055" id="JavaTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="94.7917" x="321.3542" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="94.7917" x="321.3542" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="94.7917" x="321.3542" y="205.9245"/><rect codeLine="9" fill="none" height="48.055" id="JavaTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="94.7917" x="321.3542" y="182.8695"/><ellipse cx="335.9375" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M333.3415,195.7255 L333.3415,194.1386 L338.7675,194.1386 L338.7675,195.7255 L336.9548,195.7255 L336.9548,201.6642 L338.7675,201.6642 L338.7675,203.2511 L333.3415,203.2511 L333.3415,201.6642 L335.1542,201.6642 L335.1542,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="57.2917" x="352.6042" y="203.2878">JavaTrait</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="322.3958" x2="415.1042" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="322.3958" x2="415.1042" y1="222.5911" y2="222.5911"/><!--MD5=[5cc06ecdd9480702b567e3f11ad511a4]
class NamedObject--><rect codeLine="10" fill="#282828" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="452.6042" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="452.6042" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="452.6042" y="205.9245"/><rect codeLine="10" fill="none" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="452.6042" y="182.8695"/><ellipse cx="467.1875" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M464.5915,195.7255 L464.5915,194.1386 L470.0175,194.1386 L470.0175,195.7255 L468.2048,195.7255 L468.2048,201.6642 L470.0175,201.6642 L470.0175,203.2511 L464.5915,203.2511 L464.5915,201.6642 L466.4042,201.6642 L466.4042,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="483.8542" y="203.2878">NamedObject</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="453.6458" x2="575.5208" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="453.6458" x2="575.5208" y1="222.5911" y2="222.5911"/><!--MD5=[1bb08537fe391ebad579912cc56c6d97]
class LanguageTrait--><rect codeLine="11" fill="#282828" height="48.055" id="LanguageTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="613.0208" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="613.0208" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="613.0208" y="205.9245"/><rect codeLine="11" fill="none" height="48.055" id="LanguageTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="613.0208" y="182.8695"/><ellipse cx="627.6042" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M625.0081,195.7255 L625.0081,194.1386 L630.4342,194.1386 L630.4342,195.7255 L628.6214,195.7255 L628.6214,201.6642 L630.4342,201.6642 L630.4342,203.2511 L625.0081,203.2511 L625.0081,201.6642 L626.8209,201.6642 L626.8209,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="644.2708" y="203.2878">LanguageTrait</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="614.0625" x2="742.1875" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="614.0625" x2="742.1875" y1="222.5911" y2="222.5911"/><!--MD5=[5ec8c00c13391aeaac8c08bdf7a77295]
class Repeater--><rect codeLine="12" fill="#282828" height="48.055" id="Repeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="93.75" x="780.2083" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="93.75" x="780.2083" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="93.75" x="780.2083" y="205.9245"/><rect codeLine="12" fill="none" height="48.055" id="Repeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="93.75" x="780.2083" y="182.8695"/><ellipse cx="794.7917" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M792.1956,195.7255 L792.1956,194.1386 L797.6217,194.1386 L797.6217,195.7255 L795.8089,195.7255 L795.8089,201.6642 L797.6217,201.6642 L797.6217,203.2511 L792.1956,203.2511 L792.1956,201.6642 L794.0084,201.6642 L794.0084,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="56.25" x="811.4583" y="203.2878">Repeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="781.25" x2="872.9167" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="781.25" x2="872.9167" y1="222.5911" y2="222.5911"/><!--MD5=[34eb2c3cd1bd084029c026d450c2586e]
class RegistryTrait--><rect codeLine="13" fill="#282828" height="48.055" id="RegistryTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="120.8333" x="910.4167" y="182.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="120.8333" x="910.4167" y="182.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="120.8333" x="910.4167" y="205.9245"/><rect codeLine="13" fill="none" height="48.055" id="RegistryTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="120.8333" x="910.4167" y="182.8695"/><ellipse cx="925" cy="198.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M922.404,195.7255 L922.404,194.1386 L927.83,194.1386 L927.83,195.7255 L926.0173,195.7255 L926.0173,201.6642 L927.83,201.6642 L927.83,203.2511 L922.404,203.2511 L922.404,201.6642 L924.2167,201.6642 L924.2167,195.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="941.6667" y="203.2878">RegistryTrait</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="911.4583" x2="1030.2083" y1="214.2578" y2="214.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="911.4583" x2="1030.2083" y1="222.5911" y2="222.5911"/><!--MD5=[9a622fad8a13b5b20e3ac43fd2b84d0a]
class JUnitFailureReporter--><rect codeLine="16" fill="#282828" height="48.055" id="JUnitFailureReporter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="984.375" y="2720.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="984.375" y="2720.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="984.375" y="2743.4245"/><rect codeLine="16" fill="none" height="48.055" id="JUnitFailureReporter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="984.375" y="2720.3695"/><ellipse cx="998.9583" cy="2736.0636" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1000.8687,2740.4887 Q1000.4415,2740.7084 999.9715,2740.8183 Q999.5015,2740.9281 998.9827,2740.9281 Q997.1395,2740.9281 996.169,2739.7135 Q995.1986,2738.4989 995.1986,2736.204 Q995.1986,2733.903 996.169,2732.6884 Q997.1395,2731.4738 998.9827,2731.4738 Q999.5015,2731.4738 999.9776,2731.5837 Q1000.4537,2731.6935 1000.8687,2731.9132 L1000.8687,2733.9152 Q1000.4049,2733.488 999.9685,2733.2896 Q999.5321,2733.0912 999.0682,2733.0912 Q998.0794,2733.0912 997.5759,2733.8755 Q997.0723,2734.6598 997.0723,2736.204 Q997.0723,2737.7421 997.5759,2738.5264 Q998.0794,2739.3107 999.0682,2739.3107 Q999.5321,2739.3107 999.9685,2739.1123 Q1000.4049,2738.914 1000.8687,2738.4867 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="131.25" x="1015.625" y="2740.7878">JUnitFailureReporter</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="985.4167" x2="1152.0833" y1="2751.7578" y2="2751.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="985.4167" x2="1152.0833" y1="2760.0911" y2="2760.0911"/><!--MD5=[62f328183bb9b00bef89409b6a87900b]
class QuickTest--><rect codeLine="20" fill="#282828" height="48.055" id="QuickTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="1202.6042" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="1202.6042" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="1202.6042" y="76.7578"/><rect codeLine="20" fill="none" height="48.055" id="QuickTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="1202.6042" y="53.7028"/><ellipse cx="1217.1875" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1214.5915,66.5588 L1214.5915,64.9719 L1220.0175,64.9719 L1220.0175,66.5588 L1218.2048,66.5588 L1218.2048,72.4976 L1220.0175,72.4976 L1220.0175,74.0845 L1214.5915,74.0845 L1214.5915,72.4976 L1216.4042,72.4976 L1216.4042,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="1233.8542" y="74.1211">QuickTest</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1203.6458" x2="1304.6875" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1203.6458" x2="1304.6875" y1="93.4245" y2="93.4245"/><!--MD5=[48199313adf418ae9233b27dfacc45fd]
class RandomValueFactory--><rect codeLine="24" fill="#282828" height="806.6935" id="RandomValueFactory" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="441.6667" x="457.2917" y="2341.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="441.6667" x="457.2917" y="2341.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="441.6667" x="457.2917" y="2364.2578"/><rect codeLine="24" fill="none" height="806.6935" id="RandomValueFactory" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="441.6667" x="457.2917" y="2341.2028"/><ellipse cx="603.125" cy="2356.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M605.0354,2361.322 Q604.6082,2361.5417 604.1382,2361.6516 Q603.6682,2361.7615 603.1494,2361.7615 Q601.3062,2361.7615 600.3357,2360.5469 Q599.3652,2359.3323 599.3652,2357.0374 Q599.3652,2354.7363 600.3357,2353.5217 Q601.3062,2352.3071 603.1494,2352.3071 Q603.6682,2352.3071 604.1443,2352.417 Q604.6204,2352.5269 605.0354,2352.7466 L605.0354,2354.7485 Q604.5715,2354.3213 604.1351,2354.1229 Q603.6987,2353.9246 603.2349,2353.9246 Q602.2461,2353.9246 601.7426,2354.7089 Q601.239,2355.4932 601.239,2357.0374 Q601.239,2358.5754 601.7426,2359.3597 Q602.2461,2360.144 603.2349,2360.144 Q603.6987,2360.144 604.1351,2359.9457 Q604.5715,2359.7473 605.0354,2359.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="135.4167" x="626.0417" y="2361.6211">RandomValueFactory</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="458.3333" x2="897.9167" y1="2372.5911" y2="2372.5911"/><ellipse cx="468.75" cy="2407.961" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="480.2083" y="2414.8722">RandomValueFactory()</text><ellipse cx="468.75" cy="2427.7059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="480.2083" y="2434.6171">RandomValueFactory(long)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="634.375" y1="2390.7969" y2="2390.7969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="637.5" y="2394.6065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="721.875" x2="897.9167" y1="2390.7969" y2="2390.7969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="897.9167" y1="2444.3258" y2="2444.3258"/><ellipse cx="468.75" cy="2455.7841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="480.2083" y="2462.6953">long seed()</text><ellipse cx="468.75" cy="2475.529" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="480.2083" y="2482.4402">void seed(long seed)</text><ellipse cx="468.75" cy="2519.1854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="480.2083" y="2526.0966">char newAsciiChar()</text><ellipse cx="468.75" cy="2538.9303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="480.2083" y="2545.8415">String newAsciiString()</text><ellipse cx="468.75" cy="2558.6751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="290.625" x="480.2083" y="2565.5863">String newAsciiString(int minLength, int maxLength)</text><ellipse cx="468.75" cy="2578.42" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="480.2083" y="2585.3312">boolean newBoolean()</text><ellipse cx="468.75" cy="2598.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="480.2083" y="2605.0761">byte newByte()</text><ellipse cx="468.75" cy="2617.9097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="480.2083" y="2624.821">byte newByte(byte minimum, byte maximum)</text><ellipse cx="468.75" cy="2637.6546" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="376.0417" x="480.2083" y="2644.5658">byte newByte(byte minimum, byte maximum, Predicate&lt;Byte&gt; filter)</text><ellipse cx="468.75" cy="2657.3995" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="480.2083" y="2664.3107">char newChar()</text><ellipse cx="468.75" cy="2677.1444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="480.2083" y="2684.0556">Confidence newConfidence()</text><ellipse cx="468.75" cy="2696.8892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="480.2083" y="2703.8005">int newCount(int minimum, int maximum)</text><ellipse cx="468.75" cy="2716.6341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="308.3333" x="480.2083" y="2723.5453">double newDouble(double minimum, double maximum)</text><ellipse cx="468.75" cy="2736.379" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="480.2083" y="2743.2902">double newDouble()</text><ellipse cx="468.75" cy="2756.1239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="480.2083" y="2763.0351">double newDoubleZeroToOne()</text><ellipse cx="468.75" cy="2775.8687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="480.2083" y="2782.7799">T newFrom(Collection&lt;T&gt; values)</text><ellipse cx="468.75" cy="2795.6136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="480.2083" y="2802.5248">T newFrom(T[] values)</text><ellipse cx="468.75" cy="2815.3585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="216.6667" x="480.2083" y="2822.2697">Identifier newIdentifier(long maximum)</text><ellipse cx="468.75" cy="2835.1034" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="480.2083" y="2842.0146">int newIndex(int maximum)</text><ellipse cx="468.75" cy="2854.8482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="356.25" x="480.2083" y="2861.7594">int newInt(int minimum, int maximum, Predicate&lt;Integer&gt; filter)</text><ellipse cx="468.75" cy="2874.5931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="480.2083" y="2881.5043">int newInt()</text><ellipse cx="468.75" cy="2894.338" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="480.2083" y="2901.2492">int newInt(int minimum, int maximum)</text><ellipse cx="468.75" cy="2914.0828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="256.25" x="480.2083" y="2920.9941">long newLong(long minimum, long maximum)</text><ellipse cx="468.75" cy="2933.8277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="389.5833" x="480.2083" y="2940.7389">long newLong(long minimum, long maximum, Predicate&lt;Long&gt; filter)</text><ellipse cx="468.75" cy="2953.5726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="480.2083" y="2960.4838">long newLong()</text><ellipse cx="468.75" cy="2973.3175" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="273.9583" x="480.2083" y="2980.2287">short newShort(short minimum, short maximum)</text><ellipse cx="468.75" cy="2993.0623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="480.2083" y="2999.9736">short newShort()</text><ellipse cx="468.75" cy="3012.8072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="409.375" x="480.2083" y="3019.7184">short newShort(short minimum, short maximum, Predicate&lt;Short&gt; filter)</text><ellipse cx="468.75" cy="3032.5521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="480.2083" y="3039.4633">String newString()</text><ellipse cx="468.75" cy="3052.297" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="263.5417" x="480.2083" y="3059.2082">String newString(int minLength, int maxLength)</text><ellipse cx="468.75" cy="3072.0418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="480.2083" y="3078.953">double newUnsignedDouble(double maximum)</text><ellipse cx="468.75" cy="3091.7867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="480.2083" y="3098.6979">double newUnsignedDouble()</text><ellipse cx="468.75" cy="3111.5316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="480.2083" y="3118.4428">int newUnsignedInt()</text><ellipse cx="468.75" cy="3131.2764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="480.2083" y="3138.1877">long newUnsignedLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="651.0417" y1="2502.0213" y2="2502.0213"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="654.1667" y="2505.8309">(factory)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="705.2083" x2="897.9167" y1="2502.0213" y2="2502.0213"/><!--MD5=[cb8f0b6788a830a97fe80d81659cc458]
class SlowTest--><rect codeLine="67" fill="#282828" height="48.055" id="SlowTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="95.8333" x="1342.7083" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="95.8333" x="1342.7083" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="95.8333" x="1342.7083" y="76.7578"/><rect codeLine="67" fill="none" height="48.055" id="SlowTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="95.8333" x="1342.7083" y="53.7028"/><ellipse cx="1357.2917" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1354.6956,66.5588 L1354.6956,64.9719 L1360.1217,64.9719 L1360.1217,66.5588 L1358.3089,66.5588 L1358.3089,72.4976 L1360.1217,72.4976 L1360.1217,74.0845 L1354.6956,74.0845 L1354.6956,72.4976 L1356.5084,72.4976 L1356.5084,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="58.3333" x="1373.9583" y="74.1211">SlowTest</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1343.75" x2="1437.5" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1343.75" x2="1437.5" y1="93.4245" y2="93.4245"/><!--MD5=[b5200ea67374d4881b46d20c0bf2076b]
class TestWatcher--><rect fill="#282828" height="48.055" id="TestWatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="116.6667" x="1048.9583" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="116.6667" x="1048.9583" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="116.6667" x="1048.9583" y="76.7578"/><rect fill="none" height="48.055" id="TestWatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="116.6667" x="1048.9583" y="53.7028"/><ellipse cx="1063.5417" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1065.4521,73.822 Q1065.0248,74.0417 1064.5549,74.1516 Q1064.0849,74.2615 1063.5661,74.2615 Q1061.7228,74.2615 1060.7524,73.0469 Q1059.7819,71.8323 1059.7819,69.5374 Q1059.7819,67.2363 1060.7524,66.0217 Q1061.7228,64.8071 1063.5661,64.8071 Q1064.0849,64.8071 1064.561,64.917 Q1065.037,65.0269 1065.4521,65.2466 L1065.4521,67.2485 Q1064.9882,66.8213 1064.5518,66.6229 Q1064.1154,66.4246 1063.6515,66.4246 Q1062.6628,66.4246 1062.1592,67.2089 Q1061.6557,67.9932 1061.6557,69.5374 Q1061.6557,71.0754 1062.1592,71.8597 Q1062.6628,72.644 1063.6515,72.644 Q1064.1154,72.644 1064.5518,72.4457 Q1064.9882,72.2473 1065.4521,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="1080.2083" y="74.1211">TestWatcher</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1050" x2="1164.5833" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1050" x2="1164.5833" y1="93.4245" y2="93.4245"/><!--MD5=[1c1e497a52719d36c77368d67b52be7b]
class UnitTest--><rect codeLine="81" fill="#282828" height="1921.8282" id="UnitTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="667.7083" x="344.2708" y="333.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="667.7083" x="344.2708" y="333.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="667.7083" x="344.2708" y="356.9661"/><rect codeLine="81" fill="none" height="1921.8282" id="UnitTest" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="667.7083" x="344.2708" y="333.9111"/><ellipse cx="643.2292" cy="349.6053" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M642.8223,346.3074 L641.9739,350.0366 L643.6768,350.0366 Z M641.7236,344.6594 L643.927,344.6594 L646.3867,353.772 L644.5862,353.772 L644.0247,351.5198 L641.6138,351.5198 L641.0645,353.772 L639.2639,353.772 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="55.2083" x="666.1458" y="354.3294">UnitTest</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="345.3125" x2="1010.9375" y1="365.2995" y2="365.2995"/><ellipse cx="355.7292" cy="400.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="367.1875" y="407.5806">UnitTest()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="634.375" y1="383.5052" y2="383.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="637.5" y="387.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="721.875" x2="1010.9375" y1="383.5052" y2="383.5052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="1010.9375" y1="417.2892" y2="417.2892"/><ellipse cx="355.7292" cy="428.7476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="367.1875" y="435.6588">void testBeforeUnitTest()</text><ellipse cx="355.7292" cy="448.4924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="87.5" x="367.1875" y="455.4036">void testSetup()</text><polygon fill="#FFFF44" points="355.7292,463.029,359.8958,467.1956,355.7292,471.3623,351.5625,467.1956" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="367.1875" y="475.1485">boolean ensure(boolean condition)</text><polygon fill="#FFFF44" points="355.7292,482.7738,359.8958,486.9405,355.7292,491.1072,351.5625,486.9405" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="382.2917" x="367.1875" y="494.8934">void ensure(boolean condition, String message, Object... arguments)</text><polygon fill="#FFFF44" points="355.7292,502.5187,359.8958,506.6854,355.7292,510.8521,351.5625,506.6854" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="333.3333" x="367.1875" y="514.6383">void ensureBetween(double actual, double low, double high)</text><polygon fill="#FFFF44" points="355.7292,522.2636,359.8958,526.4303,355.7292,530.5969,351.5625,526.4303" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="212.5" x="367.1875" y="534.3831">void ensureEqual(T given, T expected)</text><polygon fill="#FFFF44" points="355.7292,542.0085,359.8958,546.1751,355.7292,550.3418,351.5625,546.1751" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="419.7917" x="367.1875" y="554.128">void ensureEqual(T given, T expected, String message, Object... arguments)</text><polygon fill="#FFFF44" points="355.7292,561.7533,359.8958,565.92,355.7292,570.0867,351.5625,565.92" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="367.1875" y="573.8729">void ensureFalse(boolean condition)</text><polygon fill="#FFFF44" points="355.7292,581.4982,359.8958,585.6649,355.7292,589.8315,351.5625,585.6649" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="410.4167" x="367.1875" y="593.6178">void ensureFalse(boolean condition, String message, Object... arguments)</text><polygon fill="#FFFF44" points="355.7292,601.2431,359.8958,605.4097,355.7292,609.5764,351.5625,605.4097" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="367.1875" y="613.3626">void ensureNotEqual(T a, T b)</text><polygon fill="#FFFF44" points="355.7292,620.988,359.8958,625.1546,355.7292,629.3213,351.5625,625.1546" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="367.1875" y="633.1075">void ensureNull(Object)</text><polygon fill="#FFFF44" points="355.7292,640.7328,359.8958,644.8995,355.7292,649.0662,351.5625,644.8995" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="367.1875" y="652.8524">void ensureThrows(Runnable code)</text><polygon fill="#FFFF44" points="355.7292,660.4777,359.8958,664.6444,355.7292,668.811,351.5625,664.6444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="442.7083" x="367.1875" y="672.5972">void ensureWithin(double expected, double actual, double maximumDifference)</text><polygon fill="#FFFF44" points="355.7292,680.2226,359.8958,684.3892,355.7292,688.5559,351.5625,684.3892" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="367.1875" y="692.3421">void ensureZero(Number value)</text><polygon fill="#FFFF44" points="355.7292,699.9674,359.8958,704.1341,355.7292,708.3008,351.5625,704.1341" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="367.1875" y="712.087">void iterateIndexes(Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,719.7123,359.8958,723.879,355.7292,728.0457,351.5625,723.879" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="367.1875" y="731.8319">void iterations(Count iterations)</text><polygon fill="#FFFF44" points="355.7292,739.4572,359.8958,743.6239,355.7292,747.7905,351.5625,743.6239" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="367.1875" y="751.5767">void iterations(int iterations)</text><polygon fill="#FFFF44" points="355.7292,759.2021,359.8958,763.3687,355.7292,767.5354,351.5625,763.3687" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="367.1875" y="771.3216">String randomAsciiString(int minimum, int maximum)</text><polygon fill="#FFFF44" points="355.7292,778.9469,359.8958,783.1136,355.7292,787.2803,351.5625,783.1136" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="367.1875" y="791.0665">String randomAsciiString()</text><polygon fill="#FFFF44" points="355.7292,798.6918,359.8958,802.8585,355.7292,807.0251,351.5625,802.8585" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="330.2083" x="367.1875" y="810.8114">void randomIndexes(Repeats, Count, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,818.4367,359.8958,822.6034,355.7292,826.77,351.5625,822.6034" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="367.1875" y="830.5562">void randomIndexes(Repeats, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,838.1816,359.8958,842.3482,355.7292,846.5149,351.5625,842.3482" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="409.375" x="367.1875" y="850.3011">void randomIndexes(Repeats, Count, int maximum, Consumer&lt;Integer&gt;)</text><ellipse cx="355.7292" cy="887.0463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="367.1875" y="893.9575">boolean isRandomTest()</text><polygon fill="#FFFF44" points="355.7292,901.5828,359.8958,905.7495,355.7292,909.9162,351.5625,905.7495" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="317.7083" x="367.1875" y="913.7024">boolean ensureClose(Duration given, Duration expected)</text><polygon fill="#FFFF44" points="355.7292,921.3277,359.8958,925.4944,355.7292,929.6611,351.5625,925.4944" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="367.1875" y="933.4473">T ensureNotNull(T object)</text><polygon fill="#FFFF44" points="355.7292,941.0726,359.8958,945.2393,355.7292,949.4059,351.5625,945.2393" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="367.1875" y="953.1921">boolean isQuickTest()</text><polygon fill="#FFFF44" points="355.7292,960.8175,359.8958,964.9841,355.7292,969.1508,351.5625,964.9841" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="367.1875" y="972.937">boolean isWindows()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="651.5625" y1="869.8822" y2="869.8822"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="654.6875" y="873.6918">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="704.6875" x2="1010.9375" y1="869.8822" y2="869.8822"/><polygon fill="#FFFF44" points="355.7292,1004.4739,359.8958,1008.6405,355.7292,1012.8072,351.5625,1008.6405" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="367.1875" y="1016.5934">void ensureEqualArray(T[] a, T[] b)</text><polygon fill="#FFFF44" points="355.7292,1024.2188,359.8958,1028.3854,355.7292,1032.5521,351.5625,1028.3854" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="367.1875" y="1036.3383">void ensureEqualArray(byte[] a, byte[])</text><polygon fill="#FFFF44" points="355.7292,1043.9636,359.8958,1048.1303,355.7292,1052.297,351.5625,1048.1303" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="367.1875" y="1056.0832">int index()</text><polygon fill="#FFFF44" points="355.7292,1063.7085,359.8958,1067.8752,355.7292,1072.0418,351.5625,1067.8752" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="367.1875" y="1075.828">Count iterations()</text><polygon fill="#FFFF44" points="355.7292,1083.4534,359.8958,1087.62,355.7292,1091.7867,351.5625,1087.62" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="367.1875" y="1095.5729">int randomIndex()</text><polygon fill="#FFFF44" points="355.7292,1103.1982,359.8958,1107.3649,355.7292,1111.5316,351.5625,1107.3649" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="367.1875" y="1115.3178">void resetIndex()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="643.75" y1="992.5181" y2="992.5181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="646.875" y="996.3277">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="712.5" x2="1010.9375" y1="992.5181" y2="992.5181"/><polygon fill="#FFFF44" points="355.7292,1146.8547,359.8958,1151.0213,355.7292,1155.188,351.5625,1151.0213" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="265.625" x="367.1875" y="1158.9742">T newRandomValueFactory(Source&lt;T&gt; factory)</text><polygon fill="#FFFF44" points="355.7292,1166.5995,359.8958,1170.7662,355.7292,1174.9329,351.5625,1170.7662" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="244.7917" x="367.1875" y="1178.7191">RandomValueFactory randomValueFactory()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="651.0417" y1="1134.8989" y2="1134.8989"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="654.1667" y="1138.7085">(factory)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="705.2083" x2="1010.9375" y1="1134.8989" y2="1134.8989"/><polygon fill="#FFFF44" points="355.7292,1210.2559,359.8958,1214.4226,355.7292,1218.5893,351.5625,1214.4226" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="470.8333" x="367.1875" y="1222.3755">void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="665.625" y1="1198.3002" y2="1198.3002"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="668.75" y="1202.1098">(io)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="690.625" x2="1010.9375" y1="1198.3002" y2="1198.3002"/><polygon fill="#FFFF44" points="355.7292,1253.9124,359.8958,1258.079,355.7292,1262.2457,351.5625,1258.079" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="367.1875" y="1266.0319">void loop(Loopable code)</text><polygon fill="#FFFF44" points="355.7292,1273.6572,359.8958,1277.8239,355.7292,1281.9906,351.5625,1277.8239" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="367.1875" y="1285.7768">void loop(int times, Runnable code)</text><polygon fill="#FFFF44" points="355.7292,1293.4021,359.8958,1297.5688,355.7292,1301.7354,351.5625,1297.5688" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="296.875" x="367.1875" y="1305.5216">void loop(int minimum, int maximum, Loopable code)</text><polygon fill="#FFFF44" points="355.7292,1313.147,359.8958,1317.3136,355.7292,1321.4803,351.5625,1317.3136" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="367.1875" y="1325.2665">void loop(int minimum, int maximum, Runnable code)</text><polygon fill="#FFFF44" points="355.7292,1332.8918,359.8958,1337.0585,355.7292,1341.2252,351.5625,1337.0585" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="367.1875" y="1345.0114">void loop(Runnable code)</text><polygon fill="#FFFF44" points="355.7292,1352.6367,359.8958,1356.8034,355.7292,1360.9701,351.5625,1356.8034" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="367.1875" y="1364.7563">void loop(int times, Loopable code)</text><polygon fill="#FFFF44" points="355.7292,1372.3816,359.8958,1376.5483,355.7292,1380.7149,351.5625,1376.5483" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="82.2917" x="367.1875" y="1384.5011">int nextIndex()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="647.3958" y1="1241.9566" y2="1241.9566"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="650.5208" y="1245.7662">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="708.8542" x2="1010.9375" y1="1241.9566" y2="1241.9566"/><polygon fill="#FFFF44" points="355.7292,1416.038,359.8958,1420.2047,355.7292,1424.3713,351.5625,1420.2047" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="395.8333" x="367.1875" y="1428.1576">void ensureBroadcastsNoProblem(T broadcaster, Consumer&lt;T&gt; code)</text><polygon fill="#FFFF44" points="355.7292,1435.7829,359.8958,1439.9495,355.7292,1444.1162,351.5625,1439.9495" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="380.2083" x="367.1875" y="1447.9024">void ensureBroadcastsProblem(T broadcaster, Consumer&lt;T&gt; code)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="640.625" y1="1404.0822" y2="1404.0822"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="643.75" y="1407.8918">(messaging)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="715.625" x2="1010.9375" y1="1404.0822" y2="1404.0822"/><polygon fill="#FFFF44" points="355.7292,1479.4393,359.8958,1483.606,355.7292,1487.7726,351.5625,1483.606" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="367.1875" y="1491.5588">void iterateBytes(Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1499.1842,359.8958,1503.3508,355.7292,1507.5175,351.5625,1503.3508" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="233.3333" x="367.1875" y="1511.3037">void iterateIntegers(Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1518.929,359.8958,1523.0957,355.7292,1527.2624,351.5625,1523.0957" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="367.1875" y="1531.0486">void iterateLongs(Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,1538.6739,359.8958,1542.8406,355.7292,1547.0072,351.5625,1542.8406" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="367.1875" y="1550.7935">void iterateShorts(Consumer&lt;Short&gt;)</text><polygon fill="#FFFF44" points="355.7292,1558.4188,359.8958,1562.5854,355.7292,1566.7521,351.5625,1562.5854" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="367.1875" y="1570.5383">char randomAsciiChar()</text><polygon fill="#FFFF44" points="355.7292,1578.1637,359.8958,1582.3303,355.7292,1586.497,351.5625,1582.3303" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="367.1875" y="1590.2832">List&lt;Byte&gt; randomByteList(Repeats, byte minimum, byte maximum)</text><polygon fill="#FFFF44" points="355.7292,1597.9085,359.8958,1602.0752,355.7292,1606.2419,351.5625,1602.0752" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="367.1875" y="1610.0281">List&lt;Byte&gt; randomByteList(Repeats)</text><polygon fill="#FFFF44" points="355.7292,1617.6534,359.8958,1621.8201,355.7292,1625.9867,351.5625,1621.8201" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="601.0417" x="367.1875" y="1629.7729">void randomBytes(Repeats, Count, byte minimum, byte maximum, Predicate&lt;Byte&gt; filter, Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1637.3983,359.8958,1641.5649,355.7292,1645.7316,351.5625,1641.5649" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="367.1875" y="1649.5178">void randomBytes(Repeats, Count, Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1657.1431,359.8958,1661.3098,355.7292,1665.4765,351.5625,1661.3098" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="367.1875" y="1669.2627">void randomBytes(Repeats, Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1676.888,359.8958,1681.0547,355.7292,1685.2214,351.5625,1681.0547" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="560.4167" x="367.1875" y="1689.0076">void randomBytes(Repeats, byte minimum, byte maximum, Predicate&lt;Byte&gt; filter, Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1696.6329,359.8958,1700.7996,355.7292,1704.9662,351.5625,1700.7996" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="386.4583" x="367.1875" y="1708.7524">void randomBytes(Repeats, Predicate&lt;Byte&gt; filter, Consumer&lt;Byte&gt;)</text><polygon fill="#FFFF44" points="355.7292,1716.3778,359.8958,1720.5444,355.7292,1724.7111,351.5625,1720.5444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="378.125" x="367.1875" y="1728.4973">int randomInt(int minimum, int maximum, Predicate&lt;Integer&gt; filter)</text><polygon fill="#FFFF44" points="355.7292,1736.1226,359.8958,1740.2893,355.7292,1744.456,351.5625,1740.2893" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="233.3333" x="367.1875" y="1748.2422">int randomInt(int minimum, int maximum)</text><polygon fill="#FFFF44" points="355.7292,1755.8675,359.8958,1760.0342,355.7292,1764.2008,351.5625,1760.0342" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="367.1875" y="1767.9871">int randomInt()</text><polygon fill="#FFFF44" points="355.7292,1775.6124,359.8958,1779.7791,355.7292,1783.9457,351.5625,1779.7791" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="366.6667" x="367.1875" y="1787.7319">List&lt;Integer&gt; randomIntList(Repeats, int minimum, int maximum)</text><polygon fill="#FFFF44" points="355.7292,1795.3573,359.8958,1799.5239,355.7292,1803.6906,351.5625,1799.5239" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="367.1875" y="1807.4768">List&lt;Integer&gt; randomIntList(Repeats)</text><polygon fill="#FFFF44" points="355.7292,1815.1021,359.8958,1819.2688,355.7292,1823.4355,351.5625,1819.2688" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="407.2917" x="367.1875" y="1827.2217">List&lt;Integer&gt; randomIntList(Repeats, Count, int minimum, int maximum)</text><polygon fill="#FFFF44" points="355.7292,1834.847,359.8958,1839.0137,355.7292,1843.1803,351.5625,1839.0137" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="566.6667" x="367.1875" y="1846.9666">void randomInts(Repeats, int minimum, int maximum, Predicate&lt;Integer&gt; filter, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1854.5919,359.8958,1858.7585,355.7292,1862.9252,351.5625,1858.7585" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="367.1875" y="1866.7114">void randomInts(Repeats, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1874.3368,359.8958,1878.5034,355.7292,1882.6701,351.5625,1878.5034" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="307.2917" x="367.1875" y="1886.4563">void randomInts(Repeats, Count, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1894.0816,359.8958,1898.2483,355.7292,1902.415,351.5625,1898.2483" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="607.2917" x="367.1875" y="1906.2012">void randomInts(Repeats, Count, int minimum, int maximum, Predicate&lt;Integer&gt; filter, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1913.8265,359.8958,1917.9932,355.7292,1922.1598,351.5625,1917.9932" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="411.4583" x="367.1875" y="1925.946">void randomInts(Repeats, Predicate&lt;Integer&gt; filter, Consumer&lt;Integer&gt;)</text><polygon fill="#FFFF44" points="355.7292,1933.5714,359.8958,1937.738,355.7292,1941.9047,351.5625,1937.738" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="367.1875" y="1945.6909">List&lt;Long&gt; randomLongList(Repeats)</text><polygon fill="#FFFF44" points="355.7292,1953.3162,359.8958,1957.4829,355.7292,1961.6496,351.5625,1957.4829" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="389.5833" x="367.1875" y="1965.4358">List&lt;Long&gt; randomLongList(Repeats, long minimum, long maximum)</text><polygon fill="#FFFF44" points="355.7292,1973.0611,359.8958,1977.2278,355.7292,1981.3944,351.5625,1977.2278" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="367.1875" y="1985.1807">void randomLongs(Repeats, Count, Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,1992.806,359.8958,1996.9727,355.7292,2001.1393,351.5625,1996.9727" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="578.125" x="367.1875" y="2004.9255">void randomLongs(Repeats, long minimum, long maximum, Predicate&lt;Long&gt; filter, Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,2012.5509,359.8958,2016.7175,355.7292,2020.8842,351.5625,2016.7175" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="367.1875" y="2024.6704">void randomLongs(Repeats, Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,2032.2957,359.8958,2036.4624,355.7292,2040.6291,351.5625,2036.4624" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="618.75" x="367.1875" y="2044.4153">void randomLongs(Repeats, Count, long minimum, long maximum, Predicate&lt;Long&gt; filter, Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,2052.0406,359.8958,2056.2073,355.7292,2060.3739,351.5625,2056.2073" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="402.0833" x="367.1875" y="2064.1602">void randomLongs(Repeats, Predicate&lt;Long&gt; filter, Consumer&lt;Long&gt;)</text><polygon fill="#FFFF44" points="355.7292,2071.7855,359.8958,2075.9521,355.7292,2080.1188,351.5625,2075.9521" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="367.1875" y="2083.905">List&lt;Short&gt; randomShortList(Repeats)</text><polygon fill="#FFFF44" points="355.7292,2091.5304,359.8958,2095.697,355.7292,2099.8637,351.5625,2095.697" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="404.1667" x="367.1875" y="2103.6499">List&lt;Short&gt; randomShortList(Repeats, short minimum, short maximum)</text><polygon fill="#FFFF44" points="355.7292,2111.2752,359.8958,2115.4419,355.7292,2119.6086,351.5625,2115.4419" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="272.9167" x="367.1875" y="2123.3948">void randomShorts(Repeats, Consumer&lt;Short&gt;)</text><polygon fill="#FFFF44" points="355.7292,2131.0201,359.8958,2135.1868,355.7292,2139.3534,351.5625,2135.1868" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="313.5417" x="367.1875" y="2143.1396">void randomShorts(Repeats, Count, Consumer&lt;Short&gt;)</text><polygon fill="#FFFF44" points="355.7292,2150.765,359.8958,2154.9316,355.7292,2159.0983,351.5625,2154.9316" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="635.4167" x="367.1875" y="2162.8845">void randomShorts(Repeats, Count, short minimum, short maximum, Predicate&lt;Short&gt; filter, Consumer&lt;Short&gt;)</text><polygon fill="#FFFF44" points="355.7292,2170.5098,359.8958,2174.6765,355.7292,2178.8432,351.5625,2174.6765" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="408.3333" x="367.1875" y="2182.6294">void randomShorts(Repeats, Predicate&lt;Short&gt; filter, Consumer&lt;Short&gt;)</text><polygon fill="#FFFF44" points="355.7292,2190.2547,359.8958,2194.4214,355.7292,2198.5881,351.5625,2194.4214" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="594.7917" x="367.1875" y="2202.3743">void randomShorts(Repeats, short minimum, short maximum, Predicate&lt;Short&gt; filter, Consumer&lt;Short&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="646.3542" y1="1467.4835" y2="1467.4835"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="649.4792" y="1471.2931">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="709.8958" x2="1010.9375" y1="1467.4835" y2="1467.4835"/><polygon fill="#FFFF44" points="355.7292,2233.9111,359.8958,2238.0778,355.7292,2242.2445,351.5625,2238.0778" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="367.1875" y="2246.0307">void fail(String message, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="345.3125" x2="653.6458" y1="2221.9554" y2="2221.9554"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="656.7708" y="2225.765">(status)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="702.6042" x2="1010.9375" y1="2221.9554" y2="2221.9554"/><!--MD5=[0a1b7af288e15ace6ac643bcac805833]
class UnitTestWatcher--><rect codeLine="181" fill="#282828" height="83.3781" id="UnitTestWatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="179.1667" x="1141.6667" y="165.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="179.1667" x="1141.6667" y="165.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="179.1667" x="1141.6667" y="188.2161"/><rect codeLine="181" fill="none" height="83.3781" id="UnitTestWatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="179.1667" x="1141.6667" y="165.1611"/><ellipse cx="1172.1875" cy="180.8553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1174.0979,185.2804 Q1173.6707,185.5001 1173.2007,185.6099 Q1172.7307,185.7198 1172.2119,185.7198 Q1170.3687,185.7198 1169.3982,184.5052 Q1168.4277,183.2906 1168.4277,180.9957 Q1168.4277,178.6947 1169.3982,177.4801 Q1170.3687,176.2655 1172.2119,176.2655 Q1172.7307,176.2655 1173.2068,176.3753 Q1173.6829,176.4852 1174.0979,176.7049 L1174.0979,178.7069 Q1173.634,178.2796 1173.1976,178.0813 Q1172.7612,177.8829 1172.2974,177.8829 Q1171.3086,177.8829 1170.8051,178.6672 Q1170.3015,179.4515 1170.3015,180.9957 Q1170.3015,182.5338 1170.8051,183.3181 Q1171.3086,184.1024 1172.2974,184.1024 Q1172.7612,184.1024 1173.1976,183.904 Q1173.634,183.7056 1174.0979,183.2784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="106.25" x="1192.3958" y="185.5794">UnitTestWatcher</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1142.7083" x2="1319.7917" y1="196.5495" y2="196.5495"/><ellipse cx="1153.125" cy="231.9194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="1164.5833" y="238.8306">UnitTestWatcher(UnitTest)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1142.7083" x2="1187.5" y1="214.7552" y2="214.7552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1190.625" y="218.5649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1275" x2="1319.7917" y1="214.7552" y2="214.7552"/><!--MD5=[13a212549d7870a0b527aca84f53fa3f]
reverse link FailureReporter to JUnitFailureReporter--><path codeLine="15" d="M1115.2188,1339.7653 C1107.8646,1561.6715 1074.9375,2556.3382 1069.5104,2720.359 " fill="none" id="FailureReporter-backto-JUnitFailureReporter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1107.9271,1339.4945,1115.9063,1318.9215,1122.5,1339.984,1107.9271,1339.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d6b3a6e0532d2fae8e8d79d7367f1965]
reverse link TestWatcher to UnitTest--><path codeLine="71" d="M1092.8854,122.0257 C1081.4167,156.3799 1064.875,205.5778 1050,248.4945 C1037.5833,284.3278 1024.875,320.8278 1012,357.682 " fill="none" id="TestWatcher-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1086.125,119.2757,1099.625,101.8174,1099.9583,123.8799,1086.125,119.2757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e63acc8e51634795e4c479e9109ae35f]
reverse link RepeaterMixin to UnitTest--><path codeLine="72" d="M95.2188,249.6715 C139.1458,328.3695 239.1979,507.5778 344.2188,695.7132 " fill="none" id="RepeaterMixin-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="88.6042,252.7965,84.8229,231.057,101.3438,245.6924,88.6042,252.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8a12ed603751c65440cd6a100d588474]
reverse link JavaTrait to UnitTest--><path codeLine="73" d="M381.0833,251.1611 C387.1042,272.2965 395.1146,300.4007 404.625,333.807 " fill="none" id="JavaTrait-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="374.0521,253.0882,375.3542,231.057,388.0729,249.0882,374.0521,253.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4186999a472a08820ddab293294436ac]
reverse link ProjectTrait to UnitTest--><path codeLine="74" d="M246.8229,250.5674 C266.7917,298.8903 302.0833,384.2445 344.1771,486.057 " fill="none" id="ProjectTrait-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="239.9688,253.0882,238.75,231.057,253.4479,247.5153,239.9688,253.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2e9ece7aad34f713b96373d5bea35269]
reverse link RegistryTrait to UnitTest--><path codeLine="75" d="M959.0729,251.4945 C953.3854,272.5882 945.8438,300.5778 936.8854,333.807 " fill="none" id="RegistryTrait-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="952.125,249.2757,964.5833,231.057,966.1979,253.0674,952.125,249.2757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ac05bfe39779d5b145eac2eb2745f161]
reverse link LanguageTrait to UnitTest--><path codeLine="76" d="M678.125,252.182 C678.125,273.1924 678.125,300.9424 678.125,333.807 " fill="none" id="LanguageTrait-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="670.8333,251.8903,678.125,231.057,685.4167,251.8903,670.8333,251.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4743356d65ed6ff058c8350deab3d2ff]
reverse link Repeater to UnitTest--><path codeLine="77" d="M821.0521,251.8382 C818.1667,272.8903 814.3438,300.7549 809.8125,333.807 " fill="none" id="Repeater-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="813.8438,250.7028,823.9063,231.057,828.2917,252.682,813.8438,250.7028" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[20bbc3d88315d2ca1dfc41898eb2cbd1]
reverse link NamedObject to UnitTest--><path codeLine="78" d="M521.2083,251.8382 C524.375,272.8903 528.5729,300.7549 533.5521,333.807 " fill="none" id="NamedObject-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="513.9688,252.7445,518.0729,231.057,528.3854,250.5674,513.9688,252.7445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[99270df24ca43f779150328e3699accb]
link UnitTest to JUnitFailureReporter--><path codeLine="79" d="M831.6042,2255.807 C842.25,2274.3486 853.5833,2292.432 865.625,2309.9528 C880.6875,2331.8695 899.7083,2320.7132 916.6667,2341.2028 C1013.8438,2458.5778 1052.75,2644.5049 1064.5208,2714.9632 " fill="none" id="UnitTest-to-JUnitFailureReporter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1065.3854,2720.2236,1067.9962,2710.3022,1064.5509,2715.0826,1059.7705,2711.6373,1065.3854,2720.2236" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="201.0417" x="869.7917" y="2303.2878">reports validation failures with</text><!--MD5=[6e51e05319cfef764cb163df1beb41b3]
link UnitTest to RandomValueFactory--><path codeLine="80" d="M678.125,2256.2861 C678.125,2283.2653 678.125,2309.7549 678.125,2335.5674 " fill="none" id="UnitTest-to-RandomValueFactory" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="678.125,2341.0674,682.2917,2331.6924,678.125,2335.859,673.9583,2331.6924,678.125,2341.0674" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="30.2083" x="682.2917" y="2303.2878">uses</text><!--MD5=[e61d0cd2b87cd82b1ebef6380084820f]
reverse link TestWatcher to UnitTestWatcher--><path codeLine="179" d="M1144.6875,117.0361 C1159.4479,132.1715 1176.4271,149.5882 1191.4167,164.9528 " fill="none" id="TestWatcher-backto-UnitTestWatcher" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1139.0625,121.7236,1129.7396,101.7132,1149.5104,111.5361,1139.0625,121.7236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[652a750b4ee846095a9b28266edb574e]
reverse link UnitTestWatcher to UnitTest--><path codeLine="180" d="M1177.0208,257.557 C1157.9063,273.3903 1135.6458,290.0465 1113.5417,302.6611 C1079.1875,322.2549 1058.0729,305.8382 1030.2083,333.9111 C1024.1146,340.057 1018.1146,346.307 1012.2292,352.6715 " fill="none" id="UnitTestWatcher-backto-UnitTest" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#333333" points="1187.5938,248.6195,1180.1304,249.4691,1178.0441,256.6851,1185.5075,255.8355,1187.5938,248.6195" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="144.7917" x="1152.0833" y="295.9961">watches for failures in</text><!--MD5=[55170f82379ea3ec2da6d4bb0c296151]
@startuml

    !include lexakai.theme
    
    title "diagram-test"
    
    interface RepeaterMixin
    interface FailureReporter
    interface ProjectTrait
    interface JavaTrait
    interface NamedObject
    interface LanguageTrait
    interface Repeater
    interface RegistryTrait
    
    FailureReporter <|- - JUnitFailureReporter
    class JUnitFailureReporter
    {
    }
    
    interface QuickTest
    {
    }
    
    class RandomValueFactory
    {
        - -(constructors)- -
        +RandomValueFactory()
        +RandomValueFactory(long)
        - -
        +long seed()
        +void seed(long seed)
        - -(factory)- -
        +char newAsciiChar()
        +String newAsciiString()
        +String newAsciiString(int minLength, int maxLength)
        +boolean newBoolean()
        +byte newByte()
        +byte newByte(byte minimum, byte maximum)
        +byte newByte(byte minimum, byte maximum, Predicate<Byte> filter)
        +char newChar()
        +Confidence newConfidence()
        +int newCount(int minimum, int maximum)
        +double newDouble(double minimum, double maximum)
        +double newDouble()
        +double newDoubleZeroToOne()
        +T newFrom(Collection<T> values)
        +T newFrom(T[] values)
        +Identifier newIdentifier(long maximum)
        +int newIndex(int maximum)
        +int newInt(int minimum, int maximum, Predicate<Integer> filter)
        +int newInt()
        +int newInt(int minimum, int maximum)
        +long newLong(long minimum, long maximum)
        +long newLong(long minimum, long maximum, Predicate<Long> filter)
        +long newLong()
        +short newShort(short minimum, short maximum)
        +short newShort()
        +short newShort(short minimum, short maximum, Predicate<Short> filter)
        +String newString()
        +String newString(int minLength, int maxLength)
        +double newUnsignedDouble(double maximum)
        +double newUnsignedDouble()
        +int newUnsignedInt()
        +long newUnsignedLong()
    }
    
    interface SlowTest
    {
    }
    
    TestWatcher <|- - UnitTest
    RepeaterMixin <|- - UnitTest
    JavaTrait <|- - UnitTest
    ProjectTrait <|- - UnitTest
    RegistryTrait <|- - UnitTest
    LanguageTrait <|- - UnitTest
    Repeater <|- - UnitTest
    NamedObject <|- - UnitTest
    UnitTest - -> JUnitFailureReporter : "reports validation failures with"
    UnitTest - -> RandomValueFactory : "uses"
    abstract class UnitTest
    {
        - -(constructors)- -
        +UnitTest()
        - -
        +void testBeforeUnitTest()
        +void testSetup()
        #boolean ensure(boolean condition)
        #void ensure(boolean condition, String message, Object... arguments)
        #void ensureBetween(double actual, double low, double high)
        #void ensureEqual(T given, T expected)
        #void ensureEqual(T given, T expected, String message, Object... arguments)
        #void ensureFalse(boolean condition)
        #void ensureFalse(boolean condition, String message, Object... arguments)
        #void ensureNotEqual(T a, T b)
        #void ensureNull(Object)
        #void ensureThrows(Runnable code)
        #void ensureWithin(double expected, double actual, double maximumDifference)
        #void ensureZero(Number value)
        #void iterateIndexes(Consumer<Integer>)
        #void iterations(Count iterations)
        #void iterations(int iterations)
        #String randomAsciiString(int minimum, int maximum)
        #String randomAsciiString()
        #void randomIndexes(Repeats, Count, Consumer<Integer>)
        #void randomIndexes(Repeats, Consumer<Integer>)
        #void randomIndexes(Repeats, Count, int maximum, Consumer<Integer>)
        - -(checks)- -
        +boolean isRandomTest()
        #boolean ensureClose(Duration given, Duration expected)
        #T ensureNotNull(T object)
        #boolean isQuickTest()
        #boolean isWindows()
        - -(collection)- -
        #void ensureEqualArray(T[] a, T[] b)
        #void ensureEqualArray(byte[] a, byte[])
        #int index()
        #Count iterations()
        #int randomIndex()
        #void resetIndex()
        - -(factory)- -
        #T newRandomValueFactory(Source<T> factory)
        #RandomValueFactory randomValueFactory()
        - -(io)- -
        #void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)
        - -(iteration)- -
        #void loop(Loopable code)
        #void loop(int times, Runnable code)
        #void loop(int minimum, int maximum, Loopable code)
        #void loop(int minimum, int maximum, Runnable code)
        #void loop(Runnable code)
        #void loop(int times, Loopable code)
        #int nextIndex()
        - -(messaging)- -
        #void ensureBroadcastsNoProblem(T broadcaster, Consumer<T> code)
        #void ensureBroadcastsProblem(T broadcaster, Consumer<T> code)
        - -(primitive)- -
        #void iterateBytes(Consumer<Byte>)
        #void iterateIntegers(Consumer<Integer>)
        #void iterateLongs(Consumer<Long>)
        #void iterateShorts(Consumer<Short>)
        #char randomAsciiChar()
        #List<Byte> randomByteList(Repeats, byte minimum, byte maximum)
        #List<Byte> randomByteList(Repeats)
        #void randomBytes(Repeats, Count, byte minimum, byte maximum, Predicate<Byte> filter, Consumer<Byte>)
        #void randomBytes(Repeats, Count, Consumer<Byte>)
        #void randomBytes(Repeats, Consumer<Byte>)
        #void randomBytes(Repeats, byte minimum, byte maximum, Predicate<Byte> filter, Consumer<Byte>)
        #void randomBytes(Repeats, Predicate<Byte> filter, Consumer<Byte>)
        #int randomInt(int minimum, int maximum, Predicate<Integer> filter)
        #int randomInt(int minimum, int maximum)
        #int randomInt()
        #List<Integer> randomIntList(Repeats, int minimum, int maximum)
        #List<Integer> randomIntList(Repeats)
        #List<Integer> randomIntList(Repeats, Count, int minimum, int maximum)
        #void randomInts(Repeats, int minimum, int maximum, Predicate<Integer> filter, Consumer<Integer>)
        #void randomInts(Repeats, Consumer<Integer>)
        #void randomInts(Repeats, Count, Consumer<Integer>)
        #void randomInts(Repeats, Count, int minimum, int maximum, Predicate<Integer> filter, Consumer<Integer>)
        #void randomInts(Repeats, Predicate<Integer> filter, Consumer<Integer>)
        #List<Long> randomLongList(Repeats)
        #List<Long> randomLongList(Repeats, long minimum, long maximum)
        #void randomLongs(Repeats, Count, Consumer<Long>)
        #void randomLongs(Repeats, long minimum, long maximum, Predicate<Long> filter, Consumer<Long>)
        #void randomLongs(Repeats, Consumer<Long>)
        #void randomLongs(Repeats, Count, long minimum, long maximum, Predicate<Long> filter, Consumer<Long>)
        #void randomLongs(Repeats, Predicate<Long> filter, Consumer<Long>)
        #List<Short> randomShortList(Repeats)
        #List<Short> randomShortList(Repeats, short minimum, short maximum)
        #void randomShorts(Repeats, Consumer<Short>)
        #void randomShorts(Repeats, Count, Consumer<Short>)
        #void randomShorts(Repeats, Count, short minimum, short maximum, Predicate<Short> filter, Consumer<Short>)
        #void randomShorts(Repeats, Predicate<Short> filter, Consumer<Short>)
        #void randomShorts(Repeats, short minimum, short maximum, Predicate<Short> filter, Consumer<Short>)
        - -(status)- -
        #void fail(String message, Object... arguments)
    }
    
    TestWatcher <|- - UnitTestWatcher
    UnitTestWatcher o- - UnitTest : "watches for failures in"
    class UnitTestWatcher
    {
        - -(constructors)- -
        +UnitTestWatcher(UnitTest)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "diagram-test"
    
    interface RepeaterMixin
    interface FailureReporter
    interface ProjectTrait
    interface JavaTrait
    interface NamedObject
    interface LanguageTrait
    interface Repeater
    interface RegistryTrait
    
    FailureReporter <|- - JUnitFailureReporter
    class JUnitFailureReporter
    {
    }
    
    interface QuickTest
    {
    }
    
    class RandomValueFactory
    {
        - -(constructors)- -
        +RandomValueFactory()
        +RandomValueFactory(long)
        - -
        +long seed()
        +void seed(long seed)
        - -(factory)- -
        +char newAsciiChar()
        +String newAsciiString()
        +String newAsciiString(int minLength, int maxLength)
        +boolean newBoolean()
        +byte newByte()
        +byte newByte(byte minimum, byte maximum)
        +byte newByte(byte minimum, byte maximum, Predicate<Byte> filter)
        +char newChar()
        +Confidence newConfidence()
        +int newCount(int minimum, int maximum)
        +double newDouble(double minimum, double maximum)
        +double newDouble()
        +double newDoubleZeroToOne()
        +T newFrom(Collection<T> values)
        +T newFrom(T[] values)
        +Identifier newIdentifier(long maximum)
        +int newIndex(int maximum)
        +int newInt(int minimum, int maximum, Predicate<Integer> filter)
        +int newInt()
        +int newInt(int minimum, int maximum)
        +long newLong(long minimum, long maximum)
        +long newLong(long minimum, long maximum, Predicate<Long> filter)
        +long newLong()
        +short newShort(short minimum, short maximum)
        +short newShort()
        +short newShort(short minimum, short maximum, Predicate<Short> filter)
        +String newString()
        +String newString(int minLength, int maxLength)
        +double newUnsignedDouble(double maximum)
        +double newUnsignedDouble()
        +int newUnsignedInt()
        +long newUnsignedLong()
    }
    
    interface SlowTest
    {
    }
    
    TestWatcher <|- - UnitTest
    RepeaterMixin <|- - UnitTest
    JavaTrait <|- - UnitTest
    ProjectTrait <|- - UnitTest
    RegistryTrait <|- - UnitTest
    LanguageTrait <|- - UnitTest
    Repeater <|- - UnitTest
    NamedObject <|- - UnitTest
    UnitTest - -> JUnitFailureReporter : "reports validation failures with"
    UnitTest - -> RandomValueFactory : "uses"
    abstract class UnitTest
    {
        - -(constructors)- -
        +UnitTest()
        - -
        +void testBeforeUnitTest()
        +void testSetup()
        #boolean ensure(boolean condition)
        #void ensure(boolean condition, String message, Object... arguments)
        #void ensureBetween(double actual, double low, double high)
        #void ensureEqual(T given, T expected)
        #void ensureEqual(T given, T expected, String message, Object... arguments)
        #void ensureFalse(boolean condition)
        #void ensureFalse(boolean condition, String message, Object... arguments)
        #void ensureNotEqual(T a, T b)
        #void ensureNull(Object)
        #void ensureThrows(Runnable code)
        #void ensureWithin(double expected, double actual, double maximumDifference)
        #void ensureZero(Number value)
        #void iterateIndexes(Consumer<Integer>)
        #void iterations(Count iterations)
        #void iterations(int iterations)
        #String randomAsciiString(int minimum, int maximum)
        #String randomAsciiString()
        #void randomIndexes(Repeats, Count, Consumer<Integer>)
        #void randomIndexes(Repeats, Consumer<Integer>)
        #void randomIndexes(Repeats, Count, int maximum, Consumer<Integer>)
        - -(checks)- -
        +boolean isRandomTest()
        #boolean ensureClose(Duration given, Duration expected)
        #T ensureNotNull(T object)
        #boolean isQuickTest()
        #boolean isWindows()
        - -(collection)- -
        #void ensureEqualArray(T[] a, T[] b)
        #void ensureEqualArray(byte[] a, byte[])
        #int index()
        #Count iterations()
        #int randomIndex()
        #void resetIndex()
        - -(factory)- -
        #T newRandomValueFactory(Source<T> factory)
        #RandomValueFactory randomValueFactory()
        - -(io)- -
        #void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)
        - -(iteration)- -
        #void loop(Loopable code)
        #void loop(int times, Runnable code)
        #void loop(int minimum, int maximum, Loopable code)
        #void loop(int minimum, int maximum, Runnable code)
        #void loop(Runnable code)
        #void loop(int times, Loopable code)
        #int nextIndex()
        - -(messaging)- -
        #void ensureBroadcastsNoProblem(T broadcaster, Consumer<T> code)
        #void ensureBroadcastsProblem(T broadcaster, Consumer<T> code)
        - -(primitive)- -
        #void iterateBytes(Consumer<Byte>)
        #void iterateIntegers(Consumer<Integer>)
        #void iterateLongs(Consumer<Long>)
        #void iterateShorts(Consumer<Short>)
        #char randomAsciiChar()
        #List<Byte> randomByteList(Repeats, byte minimum, byte maximum)
        #List<Byte> randomByteList(Repeats)
        #void randomBytes(Repeats, Count, byte minimum, byte maximum, Predicate<Byte> filter, Consumer<Byte>)
        #void randomBytes(Repeats, Count, Consumer<Byte>)
        #void randomBytes(Repeats, Consumer<Byte>)
        #void randomBytes(Repeats, byte minimum, byte maximum, Predicate<Byte> filter, Consumer<Byte>)
        #void randomBytes(Repeats, Predicate<Byte> filter, Consumer<Byte>)
        #int randomInt(int minimum, int maximum, Predicate<Integer> filter)
        #int randomInt(int minimum, int maximum)
        #int randomInt()
        #List<Integer> randomIntList(Repeats, int minimum, int maximum)
        #List<Integer> randomIntList(Repeats)
        #List<Integer> randomIntList(Repeats, Count, int minimum, int maximum)
        #void randomInts(Repeats, int minimum, int maximum, Predicate<Integer> filter, Consumer<Integer>)
        #void randomInts(Repeats, Consumer<Integer>)
        #void randomInts(Repeats, Count, Consumer<Integer>)
        #void randomInts(Repeats, Count, int minimum, int maximum, Predicate<Integer> filter, Consumer<Integer>)
        #void randomInts(Repeats, Predicate<Integer> filter, Consumer<Integer>)
        #List<Long> randomLongList(Repeats)
        #List<Long> randomLongList(Repeats, long minimum, long maximum)
        #void randomLongs(Repeats, Count, Consumer<Long>)
        #void randomLongs(Repeats, long minimum, long maximum, Predicate<Long> filter, Consumer<Long>)
        #void randomLongs(Repeats, Consumer<Long>)
        #void randomLongs(Repeats, Count, long minimum, long maximum, Predicate<Long> filter, Consumer<Long>)
        #void randomLongs(Repeats, Predicate<Long> filter, Consumer<Long>)
        #List<Short> randomShortList(Repeats)
        #List<Short> randomShortList(Repeats, short minimum, short maximum)
        #void randomShorts(Repeats, Consumer<Short>)
        #void randomShorts(Repeats, Count, Consumer<Short>)
        #void randomShorts(Repeats, Count, short minimum, short maximum, Predicate<Short> filter, Consumer<Short>)
        #void randomShorts(Repeats, Predicate<Short> filter, Consumer<Short>)
        #void randomShorts(Repeats, short minimum, short maximum, Predicate<Short> filter, Consumer<Short>)
        - -(status)- -
        #void fail(String message, Object... arguments)
    }
    
    TestWatcher <|- - UnitTestWatcher
    UnitTestWatcher o- - UnitTest : "watches for failures in"
    class UnitTestWatcher
    {
        - -(constructors)- -
        +UnitTestWatcher(UnitTest)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>