<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2266.6667px" preserveAspectRatio="none" style="width:3404px;height:2266px;background:#333333;" version="1.1" viewBox="0 0 3404 2266" width="3404.1667px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="227.0833" x="1581.3958" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="204.1667" x="1592.8542" y="30.5583">Primitive Collections</text><!--MD5=[334491fe3395b7e97ffac59bc72f8221]
class Countable--><rect codeLine="6" fill="#282828" height="48.055" id="Countable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="815.1042" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="815.1042" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="815.1042" y="140.2995"/><rect codeLine="6" fill="none" height="48.055" id="Countable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="815.1042" y="117.2445"/><ellipse cx="829.6875" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M827.0915,130.1005 L827.0915,128.5136 L832.5175,128.5136 L832.5175,130.1005 L830.7048,130.1005 L830.7048,136.0392 L832.5175,136.0392 L832.5175,137.6261 L827.0915,137.6261 L827.0915,136.0392 L828.9042,136.0392 L828.9042,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="846.3542" y="137.6628">Countable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="816.1458" x2="918.2292" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="816.1458" x2="918.2292" y1="156.9661" y2="156.9661"/><!--MD5=[c6dd7699ff04048cb9365e543f81bf42]
class Initializable--><rect codeLine="7" fill="#282828" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="140.2995"/><rect codeLine="7" fill="none" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><ellipse cx="21.875" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M19.279,130.1005 L19.279,128.5136 L24.705,128.5136 L24.705,130.1005 L22.8923,130.1005 L22.8923,136.0392 L24.705,136.0392 L24.705,137.6261 L19.279,137.6261 L19.279,136.0392 L21.0917,136.0392 L21.0917,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="38.5417" y="137.6628">Initializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="156.9661" y2="156.9661"/><!--MD5=[5cc06ecdd9480702b567e3f11ad511a4]
class NamedObject--><rect codeLine="304" fill="#282828" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="1541.6667" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="1541.6667" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="1541.6667" y="140.2995"/><rect codeLine="304" fill="none" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="1541.6667" y="117.2445"/><ellipse cx="1556.25" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1553.654,130.1005 L1553.654,128.5136 L1559.08,128.5136 L1559.08,130.1005 L1557.2673,130.1005 L1557.2673,136.0392 L1559.08,136.0392 L1559.08,137.6261 L1553.654,137.6261 L1553.654,136.0392 L1555.4667,136.0392 L1555.4667,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="1572.9167" y="137.6628">NamedObject</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1542.7083" x2="1664.5833" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1542.7083" x2="1664.5833" y1="156.9661" y2="156.9661"/><!--MD5=[093b953be813e764de2c1810942591fd]
class CompressibleCollection--><rect codeLine="94" fill="#282828" height="174.8576" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="442.7083" x="157.2917" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="442.7083" x="157.2917" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="442.7083" x="157.2917" y="76.7578"/><rect codeLine="94" fill="none" height="174.8576" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="442.7083" x="157.2917" y="53.7028"/><ellipse cx="293.75" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M291.154,66.5588 L291.154,64.9719 L296.58,64.9719 L296.58,66.5588 L294.7673,66.5588 L294.7673,72.4976 L296.58,72.4976 L296.58,74.0845 L291.154,74.0845 L291.154,72.4976 L292.9667,72.4976 L292.9667,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="316.6667" y="74.1211">CompressibleCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="158.3333" x2="598.9583" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.3333" x2="598.9583" y1="93.4245" y2="93.4245"/><ellipse cx="168.75" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="180.2083" y="111.794">Method compress(Method)</text><ellipse cx="168.75" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="180.2083" y="131.5389">Method compressionMethod()</text><ellipse cx="168.75" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="180.2083" y="175.1953">boolean isCompressed()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.3333" x2="352.0833" y1="151.12" y2="151.12"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="355.2083" y="154.9296">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="405.2083" x2="598.9583" y1="151.12" y2="151.12"/><ellipse cx="168.75" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="410.4167" x="180.2083" y="218.8517">Bytes compressReachableObjects(Listener, Object root, Method, Receiver)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.3333" x2="346.875" y1="194.7764" y2="194.7764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="350" y="198.586">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="410.4167" x2="598.9583" y1="194.7764" y2="194.7764"/><!--MD5=[69ad8e2c3e1a3785241f5b510ee951fe]
class KryoSerializable--><rect codeLine="10" fill="#282828" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="636.9792" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="636.9792" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="636.9792" y="140.2995"/><rect codeLine="10" fill="none" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="636.9792" y="117.2445"/><ellipse cx="651.5625" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M648.9665,130.1005 L648.9665,128.5136 L654.3925,128.5136 L654.3925,130.1005 L652.5798,130.1005 L652.5798,136.0392 L654.3925,136.0392 L654.3925,137.6261 L648.9665,137.6261 L648.9665,136.0392 L650.7792,136.0392 L650.7792,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="104.1667" x="668.2292" y="137.6628">KryoSerializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="638.0208" x2="777.6042" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="638.0208" x2="777.6042" y1="156.9661" y2="156.9661"/><!--MD5=[defbfbd02922b24a7c69036d97fbed67]
class ByteIterable--><rect codeLine="37" fill="#282828" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="1019.2708" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="1019.2708" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="1019.2708" y="122.5911"/><rect codeLine="37" fill="none" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="1019.2708" y="99.5361"/><ellipse cx="1049.7917" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1047.1956,112.3922 L1047.1956,110.8053 L1052.6217,110.8053 L1052.6217,112.3922 L1050.8089,112.3922 L1050.8089,118.3309 L1052.6217,118.3309 L1052.6217,119.9178 L1047.1956,119.9178 L1047.1956,118.3309 L1049.0084,118.3309 L1049.0084,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="77.0833" x="1070" y="119.9544">ByteIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1020.3125" x2="1168.2292" y1="130.9245" y2="130.9245"/><ellipse cx="1030.7292" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="1042.1875" y="173.2056">ByteIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1020.3125" x2="1062.5" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1065.625" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1126.0417" x2="1168.2292" y1="149.1302" y2="149.1302"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="306" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1881.25" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1881.25" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1881.25" y="140.2995"/><rect codeLine="306" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1881.25" y="117.2445"/><ellipse cx="1895.8333" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1893.2373,130.1005 L1893.2373,128.5136 L1898.6633,128.5136 L1898.6633,130.1005 L1896.8506,130.1005 L1896.8506,136.0392 L1898.6633,136.0392 L1898.6633,137.6261 L1893.2373,137.6261 L1893.2373,136.0392 L1895.05,136.0392 L1895.05,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="1912.5" y="137.6628">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1882.2917" x2="1952.0833" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1882.2917" x2="1952.0833" y1="156.9661" y2="156.9661"/><!--MD5=[b1794f41f4624988d1ba30c3e8a4e5b9]
class ByteCollection--><rect codeLine="18" fill="#282828" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="942.7083" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="942.7083" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="942.7083" y="1124.6745"/><rect codeLine="18" fill="none" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="942.7083" y="1101.6195"/><ellipse cx="1040.1042" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1037.5081,1114.4755 L1037.5081,1112.8886 L1042.9342,1112.8886 L1042.9342,1114.4755 L1041.1214,1114.4755 L1041.1214,1120.4142 L1042.9342,1120.4142 L1042.9342,1122.0011 L1037.5081,1122.0011 L1037.5081,1120.4142 L1039.3209,1120.4142 L1039.3209,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="93.75" x="1063.0208" y="1122.0378">ByteCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="943.75" x2="1244.7917" y1="1133.0078" y2="1133.0078"/><ellipse cx="954.1667" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="965.625" y="1175.2889">boolean isNull(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="943.75" x2="1067.7083" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1070.8333" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1120.8333" x2="1244.7917" y1="1151.2136" y2="1151.2136"/><ellipse cx="954.1667" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="965.625" y="1218.9453">boolean add(byte value)</text><ellipse cx="954.1667" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="965.625" y="1238.6902">boolean addAll(byte[] that)</text><ellipse cx="954.1667" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="965.625" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="954.1667" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="965.625" y="1278.1799">boolean addAll(ByteIterable that)</text><ellipse cx="954.1667" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="965.625" y="1297.9248">void clear()</text><ellipse cx="954.1667" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="965.625" y="1317.6697">boolean contains(byte value)</text><ellipse cx="954.1667" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="965.625" y="1337.4146">boolean containsAll(ByteCollection that)</text><ellipse cx="954.1667" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="965.625" y="1357.1594">boolean remove(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="943.75" x2="1059.8958" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1063.0208" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1128.6458" x2="1244.7917" y1="1194.87" y2="1194.87"/><ellipse cx="954.1667" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="965.625" y="1400.8158">boolean hasNullByte()</text><ellipse cx="954.1667" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="965.625" y="1420.5607">PrimitiveCollection hasNullByte(boolean has)</text><ellipse cx="954.1667" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="965.625" y="1440.3056">byte nullByte()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="943.75" x2="1062.5" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1065.625" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1126.0417" x2="1244.7917" y1="1376.7405" y2="1376.7405"/><!--MD5=[cb2f9fc1b931489ec7fc16118c2bc03d]
class PrimitiveIterator--><rect codeLine="335" fill="#282828" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2869.2708" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2869.2708" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2869.2708" y="76.7578"/><rect codeLine="335" fill="none" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2869.2708" y="53.7028"/><ellipse cx="2934.375" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2931.779,66.5588 L2931.779,64.9719 L2937.205,64.9719 L2937.205,66.5588 L2935.3923,66.5588 L2935.3923,72.4976 L2937.205,72.4976 L2937.205,74.0845 L2931.779,74.0845 L2931.779,72.4976 L2933.5917,72.4976 L2933.5917,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="105.2083" x="2957.2917" y="74.1211">PrimitiveIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2870.3125" x2="3118.2292" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2870.3125" x2="3118.2292" y1="93.4245" y2="93.4245"/><ellipse cx="2880.7292" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="2892.1875" y="111.794">boolean identical(PrimitiveIterator that)</text><ellipse cx="2880.7292" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="2892.1875" y="155.4504">int hashValue()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2870.3125" x2="2959.8958" y1="131.3751" y2="131.3751"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2963.0208" y="135.1847">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3028.6458" x2="3118.2292" y1="131.3751" y2="131.3751"/><ellipse cx="2880.7292" cy="192.1956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="2892.1875" y="199.1069">boolean hasNext()</text><ellipse cx="2880.7292" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="2892.1875" y="218.8517">long nextLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2870.3125" x2="2963.5417" y1="175.0315" y2="175.0315"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2966.6667" y="178.8411">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3025" x2="3118.2292" y1="175.0315" y2="175.0315"/><!--MD5=[3d10e76dd90eb216316d7348e2c4f1d1]
class ByteIterator--><rect codeLine="45" fill="#282828" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2640.625" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2640.625" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2640.625" y="1235.0911"/><rect codeLine="45" fill="none" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2640.625" y="1212.0361"/><ellipse cx="2655.2083" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2652.6123,1224.8922 L2652.6123,1223.3053 L2658.0383,1223.3053 L2658.0383,1224.8922 L2656.2256,1224.8922 L2656.2256,1230.8309 L2658.0383,1230.8309 L2658.0383,1232.4178 L2652.6123,1232.4178 L2652.6123,1230.8309 L2654.425,1230.8309 L2654.425,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="2671.875" y="1232.4544">ByteIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2641.6667" x2="2753.125" y1="1243.4245" y2="1243.4245"/><ellipse cx="2652.0833" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2663.5417" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2641.6667" x2="2663.0208" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2666.1458" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2731.7708" x2="2753.125" y1="1261.6302" y2="1261.6302"/><ellipse cx="2652.0833" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2663.5417" y="1329.362">byte next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2641.6667" x2="2666.6667" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2669.7917" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2728.125" x2="2753.125" y1="1305.2867" y2="1305.2867"/><!--MD5=[97fcd86f5bb143a13e7ca16679ef42d5]
class CharIterable--><rect codeLine="78" fill="#282828" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="1350.5208" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="1350.5208" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="1350.5208" y="122.5911"/><rect codeLine="78" fill="none" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="1350.5208" y="99.5361"/><ellipse cx="1381.9792" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1379.3831,112.3922 L1379.3831,110.8053 L1384.8092,110.8053 L1384.8092,112.3922 L1382.9964,112.3922 L1382.9964,118.3309 L1384.8092,118.3309 L1384.8092,119.9178 L1379.3831,119.9178 L1379.3831,118.3309 L1381.1959,118.3309 L1381.1959,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="1402.3958" y="119.9544">CharIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1351.5625" x2="1503.6458" y1="130.9245" y2="130.9245"/><ellipse cx="1361.9792" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1373.4375" y="173.2056">CharIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1351.5625" x2="1395.8333" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1398.9583" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1459.375" x2="1503.6458" y1="149.1302" y2="149.1302"/><!--MD5=[90165500f4d7fb9198b276c528488d69]
class CharCollection--><rect codeLine="59" fill="#282828" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1282.2917" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1282.2917" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1282.2917" y="1124.6745"/><rect codeLine="59" fill="none" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1282.2917" y="1101.6195"/><ellipse cx="1378.6458" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1376.0498,1114.4755 L1376.0498,1112.8886 L1381.4758,1112.8886 L1381.4758,1114.4755 L1379.6631,1114.4755 L1379.6631,1120.4142 L1381.4758,1120.4142 L1381.4758,1122.0011 L1376.0498,1122.0011 L1376.0498,1120.4142 L1377.8625,1120.4142 L1377.8625,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="1401.5625" y="1122.0378">CharCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1283.3333" x2="1584.375" y1="1133.0078" y2="1133.0078"/><ellipse cx="1293.75" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1305.2083" y="1175.2889">boolean isNull(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1283.3333" x2="1407.2917" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1410.4167" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1460.4167" x2="1584.375" y1="1151.2136" y2="1151.2136"/><ellipse cx="1293.75" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1305.2083" y="1218.9453">boolean add(char value)</text><ellipse cx="1293.75" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1305.2083" y="1238.6902">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1293.75" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1305.2083" y="1258.4351">boolean addAll(char[] that)</text><ellipse cx="1293.75" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="1305.2083" y="1278.1799">boolean addAll(CharCollection that)</text><ellipse cx="1293.75" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1305.2083" y="1297.9248">void clear()</text><ellipse cx="1293.75" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="1305.2083" y="1317.6697">boolean contains(char value)</text><ellipse cx="1293.75" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="1305.2083" y="1337.4146">boolean containsAll(CharCollection that)</text><ellipse cx="1293.75" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="1305.2083" y="1357.1594">boolean remove(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1283.3333" x2="1399.4792" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1402.6042" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1468.2292" x2="1584.375" y1="1194.87" y2="1194.87"/><ellipse cx="1293.75" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="1305.2083" y="1400.8158">boolean hasNullChar()</text><ellipse cx="1293.75" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="1305.2083" y="1420.5607">PrimitiveCollection hasNullChar(boolean has)</text><ellipse cx="1293.75" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="1305.2083" y="1440.3056">char nullChar()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1283.3333" x2="1402.0833" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1405.2083" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1465.625" x2="1584.375" y1="1376.7405" y2="1376.7405"/><!--MD5=[b246b0e8213485807b10907ccd9a8538]
class CharIterator--><rect codeLine="86" fill="#282828" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2790.625" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2790.625" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2790.625" y="1235.0911"/><rect codeLine="86" fill="none" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2790.625" y="1212.0361"/><ellipse cx="2805.2083" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2802.6123,1224.8922 L2802.6123,1223.3053 L2808.0383,1223.3053 L2808.0383,1224.8922 L2806.2256,1224.8922 L2806.2256,1230.8309 L2808.0383,1230.8309 L2808.0383,1232.4178 L2802.6123,1232.4178 L2802.6123,1230.8309 L2804.425,1230.8309 L2804.425,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="2821.875" y="1232.4544">CharIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2791.6667" x2="2905.2083" y1="1243.4245" y2="1243.4245"/><ellipse cx="2802.0833" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2813.5417" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2791.6667" x2="2814.0625" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2817.1875" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2882.8125" x2="2905.2083" y1="1261.6302" y2="1261.6302"/><ellipse cx="2802.0833" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="2813.5417" y="1329.362">char next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2791.6667" x2="2817.7083" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2820.8333" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2879.1667" x2="2905.2083" y1="1305.2867" y2="1305.2867"/><!--MD5=[60470e774238cb47ff78e96b9f7be05d]
class IntIterable--><rect codeLine="130" fill="#282828" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="1702.6042" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="1702.6042" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="1702.6042" y="122.5911"/><rect codeLine="130" fill="none" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="1702.6042" y="99.5361"/><ellipse cx="1734.0625" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1731.4665,112.3922 L1731.4665,110.8053 L1736.8925,110.8053 L1736.8925,112.3922 L1735.0798,112.3922 L1735.0798,118.3309 L1736.8925,118.3309 L1736.8925,119.9178 L1731.4665,119.9178 L1731.4665,118.3309 L1733.2792,118.3309 L1733.2792,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="1754.4792" y="119.9544">IntIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1703.6458" x2="1843.2292" y1="130.9245" y2="130.9245"/><ellipse cx="1714.0625" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="1725.5208" y="173.2056">IntIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1703.6458" x2="1741.6667" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1744.7917" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1805.2083" x2="1843.2292" y1="149.1302" y2="149.1302"/><!--MD5=[f434602f8daadf1a8b6ba6711a4e54de]
class IntCollection--><rect codeLine="111" fill="#282828" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1621.875" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1621.875" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1621.875" y="1124.6745"/><rect codeLine="111" fill="none" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1621.875" y="1101.6195"/><ellipse cx="1724.4792" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1721.8831,1114.4755 L1721.8831,1112.8886 L1727.3092,1112.8886 L1727.3092,1114.4755 L1725.4964,1114.4755 L1725.4964,1120.4142 L1727.3092,1120.4142 L1727.3092,1122.0011 L1721.8831,1122.0011 L1721.8831,1120.4142 L1723.6959,1120.4142 L1723.6959,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="1747.3958" y="1122.0378">IntCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1622.9167" x2="1923.9583" y1="1133.0078" y2="1133.0078"/><ellipse cx="1633.3333" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1644.7917" y="1175.2889">boolean isNull(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1622.9167" x2="1746.875" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1750" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1800" x2="1923.9583" y1="1151.2136" y2="1151.2136"/><ellipse cx="1633.3333" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="1644.7917" y="1218.9453">boolean add(int value)</text><ellipse cx="1633.3333" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1644.7917" y="1238.6902">boolean addAll(int[] that)</text><ellipse cx="1633.3333" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1644.7917" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1633.3333" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1644.7917" y="1278.1799">boolean addAll(IntCollection that)</text><ellipse cx="1633.3333" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1644.7917" y="1297.9248">void clear()</text><ellipse cx="1633.3333" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="1644.7917" y="1317.6697">boolean contains(int value)</text><ellipse cx="1633.3333" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="1644.7917" y="1337.4146">boolean containsAll(IntCollection that)</text><ellipse cx="1633.3333" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1644.7917" y="1357.1594">boolean remove(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1622.9167" x2="1739.0625" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1742.1875" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1807.8125" x2="1923.9583" y1="1194.87" y2="1194.87"/><ellipse cx="1633.3333" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1644.7917" y="1400.8158">boolean hasNullInt()</text><ellipse cx="1633.3333" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="1644.7917" y="1420.5607">PrimitiveCollection hasNullInt(boolean has)</text><ellipse cx="1633.3333" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="1644.7917" y="1440.3056">int nullInt()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1622.9167" x2="1741.6667" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1744.7917" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1805.2083" x2="1923.9583" y1="1376.7405" y2="1376.7405"/><!--MD5=[2e4772073d6003ed1f976207db7f3a78]
class IntIterator--><rect codeLine="138" fill="#282828" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2942.7083" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2942.7083" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2942.7083" y="1235.0911"/><rect codeLine="138" fill="none" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2942.7083" y="1212.0361"/><ellipse cx="2957.2917" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2954.6956,1224.8922 L2954.6956,1223.3053 L2960.1217,1223.3053 L2960.1217,1224.8922 L2958.3089,1224.8922 L2958.3089,1230.8309 L2960.1217,1230.8309 L2960.1217,1232.4178 L2954.6956,1232.4178 L2954.6956,1230.8309 L2956.5084,1230.8309 L2956.5084,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="2973.9583" y="1232.4544">IntIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2943.75" x2="3044.7917" y1="1243.4245" y2="1243.4245"/><ellipse cx="2954.1667" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2965.625" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2943.75" x2="2959.8958" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2963.0208" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3028.6458" x2="3044.7917" y1="1261.6302" y2="1261.6302"/><ellipse cx="2954.1667" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2965.625" y="1329.362">int next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2943.75" x2="2963.5417" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2966.6667" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3025" x2="3044.7917" y1="1305.2867" y2="1305.2867"/><!--MD5=[d1e6d361dbd83c672e797f2e9d24b3ed]
class LongIterable--><rect codeLine="171" fill="#282828" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="2035.4167" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="2035.4167" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="2035.4167" y="122.5911"/><rect codeLine="171" fill="none" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="2035.4167" y="99.5361"/><ellipse cx="2066.4063" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2063.8102,112.3922 L2063.8102,110.8053 L2069.2362,110.8053 L2069.2362,112.3922 L2067.4235,112.3922 L2067.4235,118.3309 L2069.2362,118.3309 L2069.2362,119.9178 L2063.8102,119.9178 L2063.8102,118.3309 L2065.623,118.3309 L2065.623,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="81.25" x="2086.7188" y="119.9544">LongIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2036.4583" x2="2189.5833" y1="130.9245" y2="130.9245"/><ellipse cx="2046.875" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="2058.3333" y="173.2056">LongIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2036.4583" x2="2081.25" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2084.375" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2144.7917" x2="2189.5833" y1="149.1302" y2="149.1302"/><!--MD5=[9b97eef0aee9769adba47eada2538075]
class LongCollection--><rect codeLine="152" fill="#282828" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1961.4583" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1961.4583" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1961.4583" y="1124.6745"/><rect codeLine="152" fill="none" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1961.4583" y="1101.6195"/><ellipse cx="2056.7708" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2054.1748,1114.4755 L2054.1748,1112.8886 L2059.6008,1112.8886 L2059.6008,1114.4755 L2057.7881,1114.4755 L2057.7881,1120.4142 L2059.6008,1120.4142 L2059.6008,1122.0011 L2054.1748,1122.0011 L2054.1748,1120.4142 L2055.9875,1120.4142 L2055.9875,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="97.9167" x="2079.6875" y="1122.0378">LongCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1962.5" x2="2263.5417" y1="1133.0078" y2="1133.0078"/><ellipse cx="1972.9167" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1984.375" y="1175.2889">boolean isNull(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1962.5" x2="2086.4583" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="2089.5833" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2139.5833" x2="2263.5417" y1="1151.2136" y2="1151.2136"/><ellipse cx="1972.9167" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1984.375" y="1218.9453">boolean add(long value)</text><ellipse cx="1972.9167" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1984.375" y="1238.6902">boolean addAll(long[] that)</text><ellipse cx="1972.9167" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1984.375" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1972.9167" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="1984.375" y="1278.1799">boolean addAll(LongCollection that)</text><ellipse cx="1972.9167" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1984.375" y="1297.9248">void clear()</text><ellipse cx="1972.9167" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="1984.375" y="1317.6697">boolean contains(long value)</text><ellipse cx="1972.9167" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="1984.375" y="1337.4146">boolean containsAll(LongCollection that)</text><ellipse cx="1972.9167" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="1984.375" y="1357.1594">boolean remove(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1962.5" x2="2078.6458" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2081.7708" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2147.3958" x2="2263.5417" y1="1194.87" y2="1194.87"/><ellipse cx="1972.9167" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="1984.375" y="1400.8158">PrimitiveCollection hasNullLong(boolean has)</text><ellipse cx="1972.9167" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="1984.375" y="1420.5607">boolean hasNullLong()</text><ellipse cx="1972.9167" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="1984.375" y="1440.3056">long nullLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1962.5" x2="2081.25" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2084.375" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2144.7917" x2="2263.5417" y1="1376.7405" y2="1376.7405"/><!--MD5=[7ab282b7e48474d6778a4f3de3e62e41]
class LongIterator--><rect codeLine="179" fill="#282828" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="3082.2917" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="3082.2917" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="3082.2917" y="1235.0911"/><rect codeLine="179" fill="none" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="3082.2917" y="1212.0361"/><ellipse cx="3096.875" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M3094.279,1224.8922 L3094.279,1223.3053 L3099.705,1223.3053 L3099.705,1224.8922 L3097.8923,1224.8922 L3097.8923,1230.8309 L3099.705,1230.8309 L3099.705,1232.4178 L3094.279,1232.4178 L3094.279,1230.8309 L3096.0917,1230.8309 L3096.0917,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="80.2083" x="3113.5417" y="1232.4544">LongIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="3083.3333" x2="3198.9583" y1="1243.4245" y2="1243.4245"/><ellipse cx="3093.75" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="3105.2083" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3083.3333" x2="3106.7708" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3109.8958" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3175.5208" x2="3198.9583" y1="1261.6302" y2="1261.6302"/><ellipse cx="3093.75" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="3105.2083" y="1329.362">long next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3083.3333" x2="3110.4167" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="3113.5417" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3171.875" x2="3198.9583" y1="1305.2867" y2="1305.2867"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect codeLine="192" fill="#282828" height="1968.5628" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="380.2083" y="291.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="380.2083" y="291.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="380.2083" y="314.2578"/><rect codeLine="192" fill="none" height="1968.5628" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="380.2083" y="291.2028"/><ellipse cx="574.4792" cy="306.897" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M574.0723,303.599 L573.2239,307.3283 L574.9268,307.3283 Z M572.9736,301.9511 L575.177,301.9511 L577.6367,311.0636 L575.8362,311.0636 L575.2747,308.8114 L572.8638,308.8114 L572.3145,311.0636 L570.5139,311.0636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="597.3958" y="311.6211">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="381.25" x2="905.2083" y1="322.5911" y2="322.5911"/><polygon fill="#FFFF44" points="391.6667,352.7527,395.8333,356.9194,391.6667,361.086,387.5,356.9194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="403.125" y="364.8722">PrimitiveCollection()</text><polygon fill="#FFFF44" points="391.6667,372.4976,395.8333,376.6642,391.6667,380.8309,387.5,376.6642" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="403.125" y="384.6171">PrimitiveCollection(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="599.4792" y1="340.7969" y2="340.7969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="602.6042" y="344.6065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="686.9792" x2="905.2083" y1="340.7969" y2="340.7969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="905.2083" y1="394.3258" y2="394.3258"/><ellipse cx="391.6667" cy="405.7841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="403.125" y="412.6953">int increasedCapacity(int size)</text><polygon fill="#FFFF44" points="391.6667,420.3206,395.8333,424.4873,391.6667,428.654,387.5,424.4873" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="403.125" y="432.4402">Method onCompress(Method)</text><ellipse cx="391.6667" cy="469.1854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="403.125" y="476.0966">boolean isInitialized()</text><ellipse cx="391.6667" cy="488.9303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="403.125" y="495.8415">boolean isNull(byte value)</text><ellipse cx="391.6667" cy="508.6751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="403.125" y="515.5863">boolean isNull(char value)</text><ellipse cx="391.6667" cy="528.42" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="403.125" y="535.3312">boolean isNull(long value)</text><ellipse cx="391.6667" cy="548.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="403.125" y="555.0761">boolean isNull(short value)</text><ellipse cx="391.6667" cy="567.9097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="403.125" y="574.821">boolean isNull(int value)</text><polygon fill="#FFFF44" points="391.6667,582.4463,395.8333,586.613,391.6667,590.7796,387.5,586.613" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="403.125" y="594.5658">boolean ensureHasRoomFor(int increase)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="616.6667" y1="452.0213" y2="452.0213"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="619.7917" y="455.8309">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="669.7917" x2="905.2083" y1="452.0213" y2="452.0213"/><ellipse cx="391.6667" cy="631.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="403.125" y="638.2222">Count capacity()</text><ellipse cx="391.6667" cy="651.0559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="403.125" y="657.9671">void clear()</text><ellipse cx="391.6667" cy="670.8008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="403.125" y="677.712">void copyNullValues(PrimitiveCollection that)</text><ellipse cx="391.6667" cy="690.5457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="403.125" y="697.4569">Estimate initialChildCount()</text><ellipse cx="391.6667" cy="710.2905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="403.125" y="717.2017">int initialChildCountAsInt()</text><ellipse cx="391.6667" cy="730.0354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="403.125" y="736.9466">Estimate initialChildSize()</text><ellipse cx="391.6667" cy="749.7803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="403.125" y="756.6915">PrimitiveCollection initialChildSize(Count childSize)</text><ellipse cx="391.6667" cy="769.5251" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="263.5417" x="403.125" y="776.4364">PrimitiveCollection initialChildSize(int childSize)</text><ellipse cx="391.6667" cy="789.27" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="403.125" y="796.1812">int initialChildSizeAsInt()</text><ellipse cx="391.6667" cy="809.0149" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="403.125" y="815.9261">PrimitiveCollection initialSize(Estimate initialSize)</text><ellipse cx="391.6667" cy="828.7598" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="403.125" y="835.671">Estimate initialSize()</text><ellipse cx="391.6667" cy="848.5046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="403.125" y="855.4159">PrimitiveCollection initialSize(int initialSize)</text><ellipse cx="391.6667" cy="868.2495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="403.125" y="875.1607">int initialSizeAsInt()</text><ellipse cx="391.6667" cy="887.9944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="385.4167" x="403.125" y="894.9056">PrimitiveCollection maximumChildSize(Maximum maximumChildSize)</text><ellipse cx="391.6667" cy="907.7393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="403.125" y="914.6505">Maximum maximumChildSize()</text><ellipse cx="391.6667" cy="927.4841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="345.8333" x="403.125" y="934.3953">PrimitiveCollection maximumChildSize(int maximumChildSize)</text><ellipse cx="391.6667" cy="947.229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="403.125" y="954.1402">int maximumChildSizeAsInt()</text><ellipse cx="391.6667" cy="966.9739" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="327.0833" x="403.125" y="973.8851">PrimitiveCollection maximumSize(Maximum maximumSize)</text><ellipse cx="391.6667" cy="986.7188" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="403.125" y="993.63">PrimitiveCollection maximumSize(int maximumSize)</text><ellipse cx="391.6667" cy="1006.4636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="403.125" y="1013.3748">Maximum maximumSize()</text><ellipse cx="391.6667" cy="1026.2085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="403.125" y="1033.1197">int maximumSizeAsInt()</text><ellipse cx="391.6667" cy="1045.9534" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="403.125" y="1052.8646">int nullIndex()</text><polygon fill="#FFFF44" points="391.6667,1060.4899,395.8333,1064.6566,391.6667,1068.8232,387.5,1064.6566" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="403.125" y="1072.6095">void clear(char[] values)</text><polygon fill="#FFFF44" points="391.6667,1080.2348,395.8333,1084.4014,391.6667,1088.5681,387.5,1084.4014" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="403.125" y="1092.3543">void clear(int[] values)</text><polygon fill="#FFFF44" points="391.6667,1099.9797,395.8333,1104.1463,391.6667,1108.313,387.5,1104.1463" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="403.125" y="1112.0992">void clear(long[] values)</text><polygon fill="#FFFF44" points="391.6667,1119.7245,395.8333,1123.8912,391.6667,1128.0579,387.5,1123.8912" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="403.125" y="1131.8441">void clear(byte[] values)</text><polygon fill="#FFFF44" points="391.6667,1139.4694,395.8333,1143.6361,391.6667,1147.8027,387.5,1143.6361" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="403.125" y="1151.5889">void clear(short[] values)</text><polygon fill="#FFFF44" points="391.6667,1159.2143,395.8333,1163.3809,391.6667,1167.5476,387.5,1163.3809" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="403.125" y="1171.3338">void clear(String[] values)</text><polygon fill="#FFFF44" points="391.6667,1178.9591,395.8333,1183.1258,391.6667,1187.2925,387.5,1183.1258" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="403.125" y="1191.0787">void clear(Object[] values)</text><polygon fill="#FFFF44" points="391.6667,1198.704,395.8333,1202.8707,391.6667,1207.0374,387.5,1202.8707" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="403.125" y="1210.8236">void decreaseSize(int count)</text><polygon fill="#FFFF44" points="391.6667,1218.4489,395.8333,1222.6156,391.6667,1226.7822,387.5,1222.6156" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="403.125" y="1230.5684">void ensureIndexInRange(int index)</text><polygon fill="#FFFF44" points="391.6667,1238.1938,395.8333,1242.3604,391.6667,1246.5271,387.5,1242.3604" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="403.125" y="1250.3133">int increaseSize(int count)</text><polygon fill="#FFFF44" points="391.6667,1257.9386,395.8333,1262.1053,391.6667,1266.272,387.5,1262.1053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="403.125" y="1270.0582">int incrementSize()</text><polygon fill="#FFFF44" points="391.6667,1277.6835,395.8333,1281.8502,391.6667,1286.0168,387.5,1281.8502" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="403.125" y="1289.8031">byte[] newByteArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1297.4284,395.8333,1301.5951,391.6667,1305.7617,387.5,1301.5951" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="403.125" y="1309.5479">byte[] newByteArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1317.1733,395.8333,1321.3399,391.6667,1325.5066,387.5,1321.3399" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="403.125" y="1329.2928">byte[] newByteArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1336.9181,395.8333,1341.0848,391.6667,1345.2515,387.5,1341.0848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="403.125" y="1349.0377">char[] newCharArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1356.663,395.8333,1360.8297,391.6667,1364.9963,387.5,1360.8297" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="403.125" y="1368.7826">char[] newCharArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1376.4079,395.8333,1380.5745,391.6667,1384.7412,387.5,1380.5745" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="317.7083" x="403.125" y="1388.5274">char[] newCharArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1396.1528,395.8333,1400.3194,391.6667,1404.4861,387.5,1400.3194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="403.125" y="1408.2723">int[] newIntArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1415.8976,395.8333,1420.0643,391.6667,1424.231,387.5,1420.0643" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="294.7917" x="403.125" y="1428.0172">int[] newIntArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1435.6425,395.8333,1439.8092,391.6667,1443.9758,387.5,1439.8092" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="275" x="403.125" y="1447.762">int[] newIntArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1455.3874,395.8333,1459.554,391.6667,1463.7207,387.5,1459.554" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="403.125" y="1467.5069">long[] newLongArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1475.1322,395.8333,1479.2989,391.6667,1483.4656,387.5,1479.2989" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="318.75" x="403.125" y="1487.2518">long[] newLongArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1494.8771,395.8333,1499.0438,391.6667,1503.2104,387.5,1499.0438" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="403.125" y="1506.9967">long[] newLongArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1514.622,395.8333,1518.7887,391.6667,1522.9553,387.5,1518.7887" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="403.125" y="1526.7415">T[] newObjectArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1534.3669,395.8333,1538.5335,391.6667,1542.7002,387.5,1538.5335" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="403.125" y="1546.4864">T[] newObjectArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1554.1117,395.8333,1558.2784,391.6667,1562.4451,387.5,1558.2784" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="403.125" y="1566.2313">T[] newObjectArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1573.8566,395.8333,1578.0233,391.6667,1582.1899,387.5,1578.0233" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="260.4167" x="403.125" y="1585.9762">short[] newShortArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1593.6015,395.8333,1597.7681,391.6667,1601.9348,387.5,1597.7681" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="403.125" y="1605.721">short[] newShortArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1613.3464,395.8333,1617.513,391.6667,1621.6797,387.5,1617.513" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="403.125" y="1625.4659">short[] newShortArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1633.0912,395.8333,1637.2579,391.6667,1641.4246,387.5,1637.2579" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="403.125" y="1645.2108">String[] newStringArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="391.6667,1652.8361,395.8333,1657.0028,391.6667,1661.1694,387.5,1657.0028" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="403.125" y="1664.9556">String[] newStringArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="391.6667,1672.581,395.8333,1676.7476,391.6667,1680.9143,387.5,1676.7476" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="403.125" y="1684.7005">String[] newStringArray(Object who, String why)</text><polygon fill="#FFFF44" points="391.6667,1692.3258,395.8333,1696.4925,391.6667,1700.6592,387.5,1696.4925" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="403.125" y="1704.4454">void size(int size)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="608.8542" y1="614.1469" y2="614.1469"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="611.9792" y="617.9565">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="677.6042" x2="905.2083" y1="614.1469" y2="614.1469"/><ellipse cx="391.6667" cy="1741.1906" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="403.125" y="1748.1018">void copyConfiguration(PrimitiveCollection that)</text><polygon fill="#FFFF44" points="391.6667,1755.7271,395.8333,1759.8938,391.6667,1764.0605,387.5,1759.8938" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="403.125" y="1767.8467">void copy(PrimitiveCollection that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="607.8125" y1="1724.0265" y2="1724.0265"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="610.9375" y="1727.8361">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="678.6458" x2="905.2083" y1="1724.0265" y2="1724.0265"/><polygon fill="#FFFF44" points="391.6667,1799.3835,395.8333,1803.5502,391.6667,1807.7169,387.5,1803.5502" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="493.75" x="403.125" y="1811.5031">T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)</text><polygon fill="#FFFF44" points="391.6667,1819.1284,395.8333,1823.2951,391.6667,1827.4618,387.5,1823.2951" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="314.5833" x="403.125" y="1831.248">T allocated(Object who, String why, T what, int initialSize)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="607.8125" y1="1787.4278" y2="1787.4278"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="610.9375" y="1791.2374">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="678.6458" x2="905.2083" y1="1787.4278" y2="1787.4278"/><ellipse cx="391.6667" cy="1867.9932" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="403.125" y="1874.9044">PrimitiveCollection hasNullByte(boolean value)</text><ellipse cx="391.6667" cy="1887.738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="403.125" y="1894.6493">boolean hasNullByte()</text><ellipse cx="391.6667" cy="1907.4829" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="403.125" y="1914.3941">PrimitiveCollection hasNullChar(boolean value)</text><ellipse cx="391.6667" cy="1927.2278" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="403.125" y="1934.139">boolean hasNullChar()</text><ellipse cx="391.6667" cy="1946.9727" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="403.125" y="1953.8839">PrimitiveCollection hasNullInt(boolean value)</text><ellipse cx="391.6667" cy="1966.7175" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="403.125" y="1973.6287">boolean hasNullInt()</text><ellipse cx="391.6667" cy="1986.4624" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="403.125" y="1993.3736">boolean hasNullLong()</text><ellipse cx="391.6667" cy="2006.2073" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="403.125" y="2013.1185">PrimitiveCollection hasNullLong(boolean value)</text><ellipse cx="391.6667" cy="2025.9521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="403.125" y="2032.8634">PrimitiveCollection hasNullShort(boolean value)</text><ellipse cx="391.6667" cy="2045.697" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="403.125" y="2052.6082">boolean hasNullShort()</text><ellipse cx="391.6667" cy="2065.4419" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="403.125" y="2072.3531">byte nullByte()</text><ellipse cx="391.6667" cy="2085.1868" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="403.125" y="2092.098">PrimitiveCollection nullByte(byte value)</text><ellipse cx="391.6667" cy="2104.9316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="403.125" y="2111.8429">char nullChar()</text><ellipse cx="391.6667" cy="2124.6765" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="403.125" y="2131.5877">PrimitiveCollection nullChar(char value)</text><ellipse cx="391.6667" cy="2144.4214" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="403.125" y="2151.3326">PrimitiveCollection nullInt(int value)</text><ellipse cx="391.6667" cy="2164.1663" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="403.125" y="2171.0775">int nullInt()</text><ellipse cx="391.6667" cy="2183.9111" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="403.125" y="2190.8223">PrimitiveCollection nullLong(long value)</text><ellipse cx="391.6667" cy="2203.656" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="403.125" y="2210.5672">long nullLong()</text><ellipse cx="391.6667" cy="2223.4009" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="403.125" y="2230.3121">short nullShort()</text><ellipse cx="391.6667" cy="2243.1458" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="403.125" y="2250.057">PrimitiveCollection nullShort(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="611.4583" y1="1850.8291" y2="1850.8291"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="614.5833" y="1854.6387">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="675" x2="905.2083" y1="1850.8291" y2="1850.8291"/><!--MD5=[203f237c31b1e3d74befd77fa38733d5]
class ShortIterable--><rect codeLine="329" fill="#282828" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="2373.9583" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="2373.9583" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="2373.9583" y="122.5911"/><rect codeLine="329" fill="none" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="2373.9583" y="99.5361"/><ellipse cx="2404.9479" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2402.3519,112.3922 L2402.3519,110.8053 L2407.7779,110.8053 L2407.7779,112.3922 L2405.9652,112.3922 L2405.9652,118.3309 L2407.7779,118.3309 L2407.7779,119.9178 L2402.3519,119.9178 L2402.3519,118.3309 L2404.1646,118.3309 L2404.1646,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="2425.2604" y="119.9544">ShortIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2375" x2="2530.2083" y1="130.9245" y2="130.9245"/><ellipse cx="2385.4167" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2396.875" y="173.2056">ShortIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2375" x2="2420.8333" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2423.9583" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2484.375" x2="2530.2083" y1="149.1302" y2="149.1302"/><!--MD5=[84759b6a4a0e7dc54ddbdfd6c5cbe16d]
class ShortCollection--><rect codeLine="310" fill="#282828" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="2301.0417" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="2301.0417" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="2301.0417" y="1124.6745"/><rect codeLine="310" fill="none" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="2301.0417" y="1101.6195"/><ellipse cx="2395.3125" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2392.7165,1114.4755 L2392.7165,1112.8886 L2398.1425,1112.8886 L2398.1425,1114.4755 L2396.3298,1114.4755 L2396.3298,1120.4142 L2398.1425,1120.4142 L2398.1425,1122.0011 L2392.7165,1122.0011 L2392.7165,1120.4142 L2394.5292,1120.4142 L2394.5292,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="100" x="2418.2292" y="1122.0378">ShortCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2302.0833" x2="2603.125" y1="1133.0078" y2="1133.0078"/><ellipse cx="2312.5" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="2323.9583" y="1175.2889">boolean isNull(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2302.0833" x2="2426.0417" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="2429.1667" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2479.1667" x2="2603.125" y1="1151.2136" y2="1151.2136"/><ellipse cx="2312.5" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="2323.9583" y="1218.9453">boolean add(short value)</text><ellipse cx="2312.5" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="2323.9583" y="1238.6902">void addAll(short[] that)</text><ellipse cx="2312.5" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="2323.9583" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="2312.5" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="2323.9583" y="1278.1799">boolean addAll(ShortCollection that)</text><ellipse cx="2312.5" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2323.9583" y="1297.9248">void clear()</text><ellipse cx="2312.5" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="2323.9583" y="1317.6697">boolean contains(short value)</text><ellipse cx="2312.5" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="2323.9583" y="1337.4146">boolean containsAll(ShortCollection that)</text><ellipse cx="2312.5" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2323.9583" y="1357.1594">boolean remove(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2302.0833" x2="2418.2292" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2421.3542" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2486.9792" x2="2603.125" y1="1194.87" y2="1194.87"/><ellipse cx="2312.5" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="2323.9583" y="1400.8158">boolean hasNullShort()</text><ellipse cx="2312.5" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="2323.9583" y="1420.5607">PrimitiveCollection hasNullShort(boolean has)</text><ellipse cx="2312.5" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2323.9583" y="1440.3056">short nullShort()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2302.0833" x2="2420.8333" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2423.9583" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2484.375" x2="2603.125" y1="1376.7405" y2="1376.7405"/><!--MD5=[0957e5949c955b260f994d31968b564f]
class ShortIterator--><rect codeLine="337" fill="#282828" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="3236.4583" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="3236.4583" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="3236.4583" y="1235.0911"/><rect codeLine="337" fill="none" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="3236.4583" y="1212.0361"/><ellipse cx="3251.0417" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M3248.4456,1224.8922 L3248.4456,1223.3053 L3253.8717,1223.3053 L3253.8717,1224.8922 L3252.0589,1224.8922 L3252.0589,1230.8309 L3253.8717,1230.8309 L3253.8717,1232.4178 L3248.4456,1232.4178 L3248.4456,1230.8309 L3250.2584,1230.8309 L3250.2584,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="82.2917" x="3267.7083" y="1232.4544">ShortIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="3237.5" x2="3355.2083" y1="1243.4245" y2="1243.4245"/><ellipse cx="3247.9167" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="3259.375" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3237.5" x2="3261.9792" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3265.1042" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3330.7292" x2="3355.2083" y1="1261.6302" y2="1261.6302"/><ellipse cx="3247.9167" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="3259.375" y="1329.362">short next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3237.5" x2="3265.625" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="3268.75" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3327.0833" x2="3355.2083" y1="1305.2867" y2="1305.2867"/><!--MD5=[56714951d1b791fb1e80b2485bae57e8]
reverse link ByteIterable to ByteCollection--><path codeLine="15" d="M1094.2708,204.1403 C1094.2708,372.6611 1094.2708,844.2132 1094.2708,1101.5882 " fill="none" id="ByteIterable-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1086.9792,203.7132,1094.2708,182.8799,1101.5625,203.7132,1086.9792,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0b7051d71ad7322712cc3c94ab7c5c23]
reverse link Sized to ByteCollection--><path codeLine="16" d="M1900.2604,184.1299 C1891.3646,200.7445 1878.7708,218.3278 1861.9792,228.7028 C1748.3229,298.9111 1361.6354,199.9424 1264.0625,291.2028 C1043.4271,497.557 1044.5938,879.0361 1067.7604,1101.3174 " fill="none" id="Sized-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1893.6875,180.9632,1909.1563,165.2236,1906.875,187.182,1893.6875,180.9632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c668582fb0bbd8bfbfd832d87dba6557]
reverse link NamedObject to ByteCollection--><path codeLine="17" d="M1574.9479,181.8382 C1560.8854,198.5986 1542.6146,216.9424 1522.3958,228.7028 C1420.2917,288.109 1344.7708,204.9528 1264.0625,291.2028 C1058.9896,510.3695 1053.7188,883.2549 1071.7396,1101.4215 " fill="none" id="NamedObject-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1569.375,177.1299,1588,165.2757,1580.8333,186.1507,1569.375,177.1299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[be4189bee555086dfd22186048cd9c64]
reverse link PrimitiveIterator to ByteIterator--><path codeLine="44" d="M2851.3229,210.5153 C2820.3646,232.0153 2791.2813,258.807 2772.3958,291.2028 C2594.6458,596.0882 2654.5104,1047.5049 2684.5833,1211.8278 " fill="none" id="PrimitiveIterator-backto-ByteIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2847.7604,204.1403,2869.1771,198.7965,2855.7604,216.3278,2847.7604,204.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[69a102e4ef76bdbb51c82ee5130226e8]
reverse link CharIterable to CharCollection--><path codeLine="56" d="M1427.9479,204.1403 C1428.875,372.6611 1431.4792,844.2132 1432.8958,1101.5882 " fill="none" id="CharIterable-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1420.6563,203.7549,1427.8333,182.8799,1435.2396,203.6715,1420.6563,203.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8d8b2c0f025d7e2fcfe553841a78cff5]
reverse link Sized to CharCollection--><path codeLine="57" d="M1899.0521,183.9736 C1890.0833,200.1507 1877.75,217.4528 1861.9792,228.7028 C1765.8333,297.3382 1684.3542,204.9528 1603.6458,291.2028 C1398.5729,510.3695 1393.3021,883.2549 1411.3229,1101.4215 " fill="none" id="Sized-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1892.5417,180.6924,1908.3333,165.2861,1905.6042,187.182,1892.5417,180.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[65ca880327180770198811fba8734651]
reverse link NamedObject to CharCollection--><path codeLine="58" d="M1597.0833,185.9945 C1574.6042,335.8903 1499.875,834.2965 1459.7813,1101.609 " fill="none" id="NamedObject-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1589.875,184.9007,1600.1771,165.3799,1604.3021,187.057,1589.875,184.9007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[930b0297c020590ece31bb036f841438]
reverse link PrimitiveIterator to CharIterator--><path codeLine="85" d="M2938.9271,248.4632 C2933.2604,262.557 2928.2188,277.0361 2924.4792,291.2028 C2835.3021,629.5986 2840.0521,1054.4111 2845.5833,1211.984 " fill="none" id="PrimitiveIterator-backto-CharIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2932.4063,245.1715,2947.3021,228.8799,2945.8229,250.9007,2932.4063,245.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ecd9d493b55dc9e5254f2d7cb3c7b715]
reverse link IntIterable to IntCollection--><path codeLine="108" d="M1773.4375,204.1403 C1773.4375,372.6611 1773.4375,844.2132 1773.4375,1101.5882 " fill="none" id="IntIterable-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1766.1458,203.7132,1773.4375,182.8799,1780.7292,203.7132,1766.1458,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[05f6d8be8d7cc255aa1c170fd3779bde]
reverse link Sized to IntCollection--><path codeLine="109" d="M1911.5729,186.4528 C1892.4688,336.9215 1829.2917,834.5674 1795.3958,1101.609 " fill="none" id="Sized-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1904.3958,185.1195,1914.25,165.3799,1918.8646,186.9632,1904.3958,185.1195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6aa7991f9933f8a141fab83286f1d9bb]
reverse link NamedObject to IntCollection--><path codeLine="110" d="M1610.2083,185.9945 C1632.6875,335.8903 1707.4167,834.2965 1747.5104,1101.609 " fill="none" id="NamedObject-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1602.9896,187.057,1607.1146,165.3799,1617.4167,184.9007,1602.9896,187.057" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5d7c1f092975cdaccc08f11aacd6c3ff]
reverse link PrimitiveIterator to IntIterator--><path codeLine="137" d="M2994.2708,249.609 C2994.2708,482.307 2994.2708,1027.057 2994.2708,1211.9007 " fill="none" id="PrimitiveIterator-backto-IntIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2986.9792,249.5778,2994.2708,228.7445,3001.5625,249.5778,2986.9792,249.5778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[99a1a794a2faca24057deee7c3059b9b]
reverse link LongIterable to LongCollection--><path codeLine="149" d="M2113.0208,204.1403 C2113.0208,372.6611 2113.0208,844.2132 2113.0208,1101.5882 " fill="none" id="LongIterable-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2105.7292,203.7132,2113.0208,182.8799,2120.3125,203.7132,2105.7292,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2cef2c4491ed4d71f4d2be7dacead71f]
reverse link Sized to LongCollection--><path codeLine="150" d="M1924.9167,186.307 C1930.1146,215.9528 1937.1042,255.9215 1943.2292,291.2028 C1992.5313,574.9736 2049.4063,904.8799 2083.2292,1101.3278 " fill="none" id="Sized-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1917.6771,187.2445,1921.2604,165.4632,1932.0417,184.7236,1917.6771,187.2445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[72024a859d858f3d72e33fd452c82eed]
reverse link NamedObject to LongCollection--><path codeLine="151" d="M1631.875,181.8486 C1645.7396,198.6195 1663.7917,216.9528 1683.8542,228.7028 C1786.1875,288.609 1862.1667,204.6611 1943.2292,291.2028 C2148.4063,510.2653 2153.6354,883.1924 2135.5833,1101.3903 " fill="none" id="NamedObject-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1626.0313,186.2132,1619.0208,165.2861,1637.5521,177.2757,1626.0313,186.2132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fb85c158faf951dd092a7714ff948653]
reverse link PrimitiveIterator to LongIterator--><path codeLine="178" d="M3049.5938,248.4736 C3055.2708,262.557 3060.3229,277.0361 3064.0625,291.2028 C3153.4271,629.5778 3149.2292,1054.4007 3143.9063,1211.984 " fill="none" id="PrimitiveIterator-backto-LongIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="3042.7083,250.9111,3041.2188,228.8799,3056.1146,245.1715,3042.7083,250.9111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4348354899bfe3c9c2442766c3939315]
reverse link KryoSerializable to PrimitiveCollection--><path codeLine="187" d="M705.2917,186.4424 C703.8229,212.1507 701.7813,248.0049 699.3229,291.109 " fill="none" id="KryoSerializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="698.0313,185.7549,706.4896,165.3799,712.5833,186.5882,698.0313,185.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6964b292329025343416a63b44e8dd4a]
reverse link NamedObject to PrimitiveCollection--><path codeLine="188" d="M1576.4063,182.1715 C1562.375,199.4528 1543.7396,218.1195 1522.3958,228.7028 C1402.7083,288.0465 1026.8125,205.3278 924.4792,291.2028 C918.3542,296.3382 912.3646,301.5986 906.5,306.9736 " fill="none" id="NamedObject-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1570.6875,177.6403,1589.0417,165.3799,1582.3438,186.4111,1570.6875,177.6403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[249a95afcf3fd0db8d938c1a937e0917]
reverse link Initializable to PrimitiveCollection--><path codeLine="189" d="M85.4271,184.0049 C134.5,279.9528 260.3021,525.9007 380.0417,759.984 " fill="none" id="Initializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="78.8854,187.2445,75.8958,165.3799,91.875,180.5986,78.8854,187.2445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[f844b69b72e9c528a60c8b32a0e3fca7]
reverse link Countable to PrimitiveCollection--><path codeLine="190" d="M858.5208,186.0465 C853.4375,211.7861 846.3125,247.7757 837.7396,291.109 " fill="none" id="Countable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="851.4167,184.4007,862.6146,165.3799,865.7188,187.2236,851.4167,184.4007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[00d9a0d278cb11797a10028af9812eab]
reverse link CompressibleCollection to PrimitiveCollection--><path codeLine="191" d="M403.6979,249.4736 C406.7083,262.3382 409.9375,276.1611 413.3646,290.8174 " fill="none" id="CompressibleCollection-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="396.5,250.6924,398.8542,228.7445,410.6979,247.3695,396.5,250.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[07d984cac69f335b5438c3d2f446f672]
reverse link ShortIterable to ShortCollection--><path codeLine="307" d="M2452.6042,204.1403 C2452.6042,372.6611 2452.6042,844.2132 2452.6042,1101.5882 " fill="none" id="ShortIterable-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2445.3125,203.7132,2452.6042,182.8799,2459.8958,203.7132,2445.3125,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[316a2df0767b4920048c1c37a054c46f]
reverse link Sized to ShortCollection--><path codeLine="308" d="M1952.3958,180.1715 C1970.2708,197.3382 1993.2396,216.484 2017.1875,228.7028 C2125.2083,283.8486 2199.6667,202.9111 2282.8125,291.2028 C2488.5729,509.7236 2493.5938,882.8382 2475.3438,1101.2236 " fill="none" id="Sized-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1947.0521,185.1299,1937.5417,165.2132,1957.3958,174.859,1947.0521,185.1299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e04ba480b3c1548c8a8968ec4ad3662f]
reverse link NamedObject to ShortCollection--><path codeLine="309" d="M1630.4375,182.1715 C1644.2604,199.4528 1662.6771,218.1195 1683.8542,228.7028 C1803.5625,288.5257 2185.0625,199.7965 2282.8125,291.2028 C2503.4583,497.5361 2502.3021,879.0153 2479.125,1101.307 " fill="none" id="NamedObject-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1624.5417,186.4528,1617.9896,165.3695,1636.25,177.7757,1624.5417,186.4528" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fc03b24f0c6aea9d65390e93a567d4f1]
reverse link PrimitiveIterator to ShortIterator--><path codeLine="336" d="M3137.2917,209.5257 C3168.9792,231.1507 3198.8542,258.2549 3218.2292,291.2028 C3397.1667,595.4945 3338.6042,1047.2757 3308.9896,1211.7549 " fill="none" id="PrimitiveIterator-backto-ShortIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="3133.1042,215.4945,3119.5625,198.0674,3141.0208,203.2445,3133.1042,215.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ba639b6b7ea69cd286b951963b766046]
@startuml

    !include lexakai.theme
    
    title "Primitive Collections"
    
    interface Countable
    interface Initializable
    interface NamedObject
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface CompressibleCollection
    {
        - -
        +Method compress(Method)
        +Method compressionMethod()
        - -(checks)- -
        +boolean isCompressed()
        - -(primitive)- -
        +Bytes compressReachableObjects(Listener, Object root, Method, Receiver)
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    KryoSerializable <|- - PrimitiveCollection
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Countable <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        #Method onCompress(Method)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(Count childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, Count size)
        #byte[] newByteArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, Count size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why, Count size)
        #T[] newObjectArray(Object who, String why)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, Count size)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, Count size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(filesystem)- -
        +void copyConfiguration(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Collections"
    
    interface Countable
    interface Initializable
    interface NamedObject
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface CompressibleCollection
    {
        - -
        +Method compress(Method)
        +Method compressionMethod()
        - -(checks)- -
        +boolean isCompressed()
        - -(primitive)- -
        +Bytes compressReachableObjects(Listener, Object root, Method, Receiver)
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    KryoSerializable <|- - PrimitiveCollection
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Countable <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        #Method onCompress(Method)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(Count childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, Count size)
        #byte[] newByteArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, Count size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why, Count size)
        #T[] newObjectArray(Object who, String why)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, Count size)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, Count size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(filesystem)- -
        +void copyConfiguration(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>