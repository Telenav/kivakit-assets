<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="661.4583px" preserveAspectRatio="none" style="width:3178px;height:661px;background:#333333;" version="1.1" viewBox="0 0 3178 661" width="3178.125px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="232.2917" x="1465.625" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="209.375" x="1477.0833" y="30.5583">Primitive Multi-Maps</text><!--MD5=[4b74817909f2df5a21a89f40177dcefd]
class PrimitiveScalarMultiMap--><rect codeLine="176" fill="#282828" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="407.2917" x="1101.0417" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="407.2917" x="1101.0417" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="407.2917" x="1101.0417" y="187.1745"/><rect codeLine="176" fill="none" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="407.2917" x="1101.0417" y="164.1195"/><ellipse cx="1219.7917" cy="179.8136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1217.1956,176.9755 L1217.1956,175.3886 L1222.6217,175.3886 L1222.6217,176.9755 L1220.8089,176.9755 L1220.8089,182.9142 L1222.6217,182.9142 L1222.6217,184.5011 L1217.1956,184.5011 L1217.1956,182.9142 L1219.0084,182.9142 L1219.0084,176.9755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="1242.7083" y="184.5378">PrimitiveScalarMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1102.0833" x2="1507.2917" y1="195.5078" y2="195.5078"/><ellipse cx="1112.5" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="1123.9583" y="237.7889">PrimitiveList getPrimitiveList(long key)</text><ellipse cx="1112.5" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="1123.9583" y="257.5338">PrimitiveList getSignedPrimitiveList(long key)</text><ellipse cx="1112.5" cy="270.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1123.9583" y="277.2786">boolean isScalarKeyNull(long key)</text><ellipse cx="1112.5" cy="290.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="375" x="1123.9583" y="297.0235">void putPrimitiveList(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1112.5" cy="309.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="1123.9583" y="316.7684">void putPrimitiveList(long key, PrimitiveList values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1102.0833" x2="1270.3125" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1273.4375" y="217.5232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1339.0625" x2="1507.2917" y1="213.7136" y2="213.7136"/><!--MD5=[4a7d52b0cad6b45b436e1f956697a54c]
class IntMultiMap--><rect codeLine="12" fill="#282828" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="202.6042" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="202.6042" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="202.6042" y="206.9661"/><rect codeLine="12" fill="none" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="202.6042" y="183.9111"/><ellipse cx="333.3333" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M330.7373,196.7672 L330.7373,195.1803 L336.1633,195.1803 L336.1633,196.7672 L334.3506,196.7672 L334.3506,202.7059 L336.1633,202.7059 L336.1633,204.2928 L330.7373,204.2928 L330.7373,202.7059 L332.55,202.7059 L332.55,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="356.25" y="204.3294">IntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="203.6458" x2="555.7292" y1="215.2995" y2="215.2995"/><ellipse cx="214.0625" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="225.5208" y="257.5806">IntArray get(long key)</text><ellipse cx="214.0625" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="225.5208" y="277.3254">void putAll(long key, IntArray values)</text><ellipse cx="214.0625" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="225.5208" y="297.0703">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="203.6458" x2="345.3125" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="348.4375" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="414.0625" x2="555.7292" y1="233.5052" y2="233.5052"/><!--MD5=[48dd5ec133c92f0a147a857e74e30812]
class LongMultiMap--><rect codeLine="85" fill="#282828" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2245.3125" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2245.3125" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2245.3125" y="206.9661"/><rect codeLine="85" fill="none" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2245.3125" y="183.9111"/><ellipse cx="2368.75" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2366.154,196.7672 L2366.154,195.1803 L2371.58,195.1803 L2371.58,196.7672 L2369.7673,196.7672 L2369.7673,202.7059 L2371.58,202.7059 L2371.58,204.2928 L2366.154,204.2928 L2366.154,202.7059 L2367.9667,202.7059 L2367.9667,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="2391.6667" y="204.3294">LongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2246.3542" x2="2598.4375" y1="215.2995" y2="215.2995"/><ellipse cx="2256.7708" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="2268.2292" y="257.5806">LongArray get(long key)</text><ellipse cx="2256.7708" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="2268.2292" y="277.3254">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="2256.7708" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="2268.2292" y="297.0703">void putAll(long key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2246.3542" x2="2388.0208" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2391.1458" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2456.7708" x2="2598.4375" y1="233.5052" y2="233.5052"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="83" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2023.9583" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2023.9583" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2023.9583" y="76.7578"/><rect codeLine="83" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2023.9583" y="53.7028"/><ellipse cx="2038.5417" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2035.9456,66.5588 L2035.9456,64.9719 L2041.3717,64.9719 L2041.3717,66.5588 L2039.5589,66.5588 L2039.5589,72.4976 L2041.3717,72.4976 L2041.3717,74.0845 L2035.9456,74.0845 L2035.9456,72.4976 L2037.7584,72.4976 L2037.7584,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="2055.2083" y="74.1211">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2025" x2="2094.7917" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2025" x2="2094.7917" y1="93.4245" y2="93.4245"/><!--MD5=[a5cc76553a2d1b24632df0d2f7f0bb23]
class PrimitiveMultiMap--><rect codeLine="169" fill="#282828" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1544.7917" y="193.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1544.7917" y="193.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1544.7917" y="216.862"/><rect codeLine="169" fill="none" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1544.7917" y="193.807"/><ellipse cx="1566.875" cy="209.5011" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1566.4681,206.2032 L1565.6197,209.9325 L1567.3226,209.9325 Z M1565.3695,204.5553 L1567.5728,204.5553 L1570.0326,213.6678 L1568.232,213.6678 L1567.6705,211.4156 L1565.2596,211.4156 L1564.7103,213.6678 L1562.9097,213.6678 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="117.7083" x="1585.2083" y="214.2253">PrimitiveMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1545.8333" x2="1715.625" y1="225.1953" y2="225.1953"/><polygon fill="#FFFF44" points="1556.25,255.3569,1560.4167,259.5235,1556.25,263.6902,1552.0833,259.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1567.7083" y="267.4764">PrimitiveMultiMap()</text><polygon fill="#FFFF44" points="1556.25,275.1017,1560.4167,279.2684,1556.25,283.4351,1552.0833,279.2684" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1567.7083" y="287.2213">PrimitiveMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1545.8333" x2="1586.9792" y1="243.4011" y2="243.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1590.1042" y="247.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1674.4792" x2="1715.625" y1="243.4011" y2="243.4011"/><!--MD5=[7995b2c959e8c01f457074ea15d83b1b]
class IntToByteFixedMultiMap--><rect codeLine="22" fill="#282828" height="225.7589" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="524.4792" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="524.4792" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="524.4792" y="431.9661"/><rect codeLine="22" fill="none" height="225.7589" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="524.4792" y="408.9111"/><ellipse cx="615.625" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M617.5354,429.0304 Q617.1082,429.2501 616.6382,429.3599 Q616.1682,429.4698 615.6494,429.4698 Q613.8062,429.4698 612.8357,428.2552 Q611.8652,427.0406 611.8652,424.7457 Q611.8652,422.4447 612.8357,421.2301 Q613.8062,420.0155 615.6494,420.0155 Q616.1682,420.0155 616.6443,420.1253 Q617.1204,420.2352 617.5354,420.4549 L617.5354,422.4569 Q617.0715,422.0296 616.6351,421.8313 Q616.1987,421.6329 615.7349,421.6329 Q614.7461,421.6329 614.2426,422.4172 Q613.739,423.2015 613.739,424.7457 Q613.739,426.2838 614.2426,427.0681 Q614.7461,427.8524 615.7349,427.8524 Q616.1987,427.8524 616.6351,427.654 Q617.0715,427.4556 617.5354,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="157.2917" x="638.5417" y="429.3294">IntToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="525.5208" x2="877.6042" y1="440.2995" y2="440.2995"/><ellipse cx="535.9375" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="547.3958" y="482.5806">IntToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525.5208" x2="657.8125" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="660.9375" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="745.3125" x2="877.6042" y1="458.5052" y2="458.5052"/><ellipse cx="535.9375" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="547.3958" y="526.237">boolean containsKey(int key)</text><ellipse cx="535.9375" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="547.3958" y="545.9819">ByteArray get(int key)</text><ellipse cx="535.9375" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="547.3958" y="565.7267">IntIterator keys()</text><ellipse cx="535.9375" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="547.3958" y="585.4716">void putAll(int key, ByteArray values)</text><ellipse cx="535.9375" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="547.3958" y="605.2165">void putAll(int key, byte[] values)</text><ellipse cx="535.9375" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="547.3958" y="624.9613">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525.5208" x2="667.1875" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="670.3125" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="735.9375" x2="877.6042" y1="502.1617" y2="502.1617"/><!--MD5=[0c99b87e1465ab30b0b6d2d6a13d9fa0]
class IntToIntFixedMultiMap--><rect codeLine="38" fill="#282828" height="206.014" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="441.862"/><rect codeLine="38" fill="none" height="206.014" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><ellipse cx="41.5625" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M43.4729,438.9262 Q43.0457,439.1459 42.5757,439.2558 Q42.1057,439.3656 41.5869,439.3656 Q39.7437,439.3656 38.7732,438.151 Q37.8027,436.9364 37.8027,434.6415 Q37.8027,432.3405 38.7732,431.1259 Q39.7437,429.9113 41.5869,429.9113 Q42.1057,429.9113 42.5818,430.0212 Q43.0579,430.131 43.4729,430.3507 L43.4729,432.3527 Q43.009,431.9255 42.5726,431.7271 Q42.1362,431.5287 41.6724,431.5287 Q40.6836,431.5287 40.1801,432.313 Q39.6765,433.0973 39.6765,434.6415 Q39.6765,436.1796 40.1801,436.9639 Q40.6836,437.7482 41.6724,437.7482 Q42.1362,437.7482 42.5726,437.5498 Q43.009,437.3515 43.4729,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="146.875" x="62.6042" y="439.2253">IntToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="234.375" y1="450.1953" y2="450.1953"/><ellipse cx="18.75" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="30.2083" y="492.4764">IntToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="77.6042" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="80.7292" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="165.1042" x2="234.375" y1="468.4011" y2="468.4011"/><ellipse cx="18.75" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="30.2083" y="536.1328">boolean containsKey(int key)</text><ellipse cx="18.75" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="30.2083" y="555.8777">IntArray get(int key)</text><ellipse cx="18.75" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="30.2083" y="575.6226">IntIterator keys()</text><ellipse cx="18.75" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="30.2083" y="595.3674">void putAll(int key, IntArray values)</text><ellipse cx="18.75" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="30.2083" y="615.1123">void putAll(int key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="86.9792" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="90.1042" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="155.7292" x2="234.375" y1="512.0575" y2="512.0575"/><!--MD5=[3f4bc82daf44942da3f53ac3b6d5365d]
class IntToLongFixedMultiMap--><rect codeLine="53" fill="#282828" height="206.014" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2086.9792" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2086.9792" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2086.9792" y="441.862"/><rect codeLine="53" fill="none" height="206.014" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2086.9792" y="418.807"/><ellipse cx="2120.7813" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2122.6917,438.9262 Q2122.2644,439.1459 2121.7944,439.2558 Q2121.3245,439.3656 2120.8057,439.3656 Q2118.9624,439.3656 2117.9919,438.151 Q2117.0215,436.9364 2117.0215,434.6415 Q2117.0215,432.3405 2117.9919,431.1259 Q2118.9624,429.9113 2120.8057,429.9113 Q2121.3245,429.9113 2121.8005,430.0212 Q2122.2766,430.131 2122.6917,430.3507 L2122.6917,432.3527 Q2122.2278,431.9255 2121.7914,431.7271 Q2121.355,431.5287 2120.8911,431.5287 Q2119.9023,431.5287 2119.3988,432.313 Q2118.8953,433.0973 2118.8953,434.6415 Q2118.8953,436.1796 2119.3988,436.9639 Q2119.9023,437.7482 2120.8911,437.7482 Q2121.355,437.7482 2121.7914,437.5498 Q2122.2278,437.3515 2122.6917,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="2141.7188" y="439.2253">IntToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2088.0208" x2="2327.6042" y1="450.1953" y2="450.1953"/><ellipse cx="2098.4375" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2109.8958" y="492.4764">IntToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2088.0208" x2="2164.0625" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2167.1875" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2251.5625" x2="2327.6042" y1="468.4011" y2="468.4011"/><ellipse cx="2098.4375" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2109.8958" y="536.1328">boolean containsKey(int key)</text><ellipse cx="2098.4375" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2109.8958" y="555.8777">LongArray get(int key)</text><ellipse cx="2098.4375" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2109.8958" y="575.6226">IntIterator keys()</text><ellipse cx="2098.4375" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2109.8958" y="595.3674">void putAll(int key, long[] values)</text><ellipse cx="2098.4375" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2109.8958" y="615.1123">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2088.0208" x2="2173.4375" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2176.5625" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2242.1875" x2="2327.6042" y1="512.0575" y2="512.0575"/><!--MD5=[1c02724945c6df932588753ceecaf5f0]
class IntToPackedArrayFixedMultiMap--><rect codeLine="68" fill="#282828" height="265.2486" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2365.625" y="389.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2365.625" y="389.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2365.625" y="412.1745"/><rect codeLine="68" fill="none" height="265.2486" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2365.625" y="389.1195"/><ellipse cx="2525.5208" cy="404.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2527.4312,409.2387 Q2527.004,409.4584 2526.534,409.5683 Q2526.064,409.6781 2525.5452,409.6781 Q2523.702,409.6781 2522.7315,408.4635 Q2521.7611,407.2489 2521.7611,404.954 Q2521.7611,402.653 2522.7315,401.4384 Q2523.702,400.2238 2525.5452,400.2238 Q2526.064,400.2238 2526.5401,400.3337 Q2527.0162,400.4435 2527.4312,400.6632 L2527.4312,402.6652 Q2526.9674,402.238 2526.531,402.0396 Q2526.0946,401.8412 2525.6307,401.8412 Q2524.6419,401.8412 2524.1384,402.6255 Q2523.6348,403.4098 2523.6348,404.954 Q2523.6348,406.4921 2524.1384,407.2764 Q2524.6419,408.0607 2525.6307,408.0607 Q2526.0946,408.0607 2526.531,407.8623 Q2526.9674,407.664 2527.4312,407.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="208.3333" x="2548.4375" y="409.5378">IntToPackedArrayFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2366.6667" x2="2907.2917" y1="420.5078" y2="420.5078"/><ellipse cx="2377.0833" cy="455.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="2388.5417" y="462.7889">IntToPackedArrayFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2366.6667" x2="2593.2292" y1="438.7136" y2="438.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2596.3542" y="442.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2680.7292" x2="2907.2917" y1="438.7136" y2="438.7136"/><ellipse cx="2377.0833" cy="499.5341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="510.4167" x="2388.5417" y="506.4453">IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)</text><ellipse cx="2377.0833" cy="519.279" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2388.5417" y="526.1902">boolean containsKey(int key)</text><ellipse cx="2377.0833" cy="539.0238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2388.5417" y="545.9351">LongArray get(int key)</text><ellipse cx="2377.0833" cy="558.7687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2388.5417" y="565.6799">LongArray getSigned(int key)</text><ellipse cx="2377.0833" cy="578.5136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2388.5417" y="585.4248">IntIterator keys()</text><ellipse cx="2377.0833" cy="598.2585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="2388.5417" y="605.1697">IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)</text><ellipse cx="2377.0833" cy="618.0033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2388.5417" y="624.9146">void putAll(int key, long[] values)</text><ellipse cx="2377.0833" cy="637.7482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2388.5417" y="644.6594">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2366.6667" x2="2602.6042" y1="482.37" y2="482.37"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2605.7292" y="486.1796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2671.3542" x2="2907.2917" y1="482.37" y2="482.37"/><!--MD5=[473ca2dc791c307a8457cba60dc406cc]
class LongToByteFixedMultiMap--><rect codeLine="95" fill="#282828" height="225.7589" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="915.1042" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="915.1042" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="915.1042" y="431.9661"/><rect codeLine="95" fill="none" height="225.7589" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="915.1042" y="408.9111"/><ellipse cx="998.9583" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1000.8687,429.0304 Q1000.4415,429.2501 999.9715,429.3599 Q999.5015,429.4698 998.9827,429.4698 Q997.1395,429.4698 996.169,428.2552 Q995.1986,427.0406 995.1986,424.7457 Q995.1986,422.4447 996.169,421.2301 Q997.1395,420.0155 998.9827,420.0155 Q999.5015,420.0155 999.9776,420.1253 Q1000.4537,420.2352 1000.8687,420.4549 L1000.8687,422.4569 Q1000.4049,422.0296 999.9685,421.8313 Q999.5321,421.6329 999.0682,421.6329 Q998.0794,421.6329 997.5759,422.4172 Q997.0723,423.2015 997.0723,424.7457 Q997.0723,426.2838 997.5759,427.0681 Q998.0794,427.8524 999.0682,427.8524 Q999.5321,427.8524 999.9685,427.654 Q1000.4049,427.4556 1000.8687,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="171.875" x="1021.875" y="429.3294">LongToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="916.1458" x2="1268.2292" y1="440.2995" y2="440.2995"/><ellipse cx="926.5625" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="938.0208" y="482.5806">LongToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="916.1458" x2="1048.4375" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1051.5625" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1135.9375" x2="1268.2292" y1="458.5052" y2="458.5052"/><ellipse cx="926.5625" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="938.0208" y="526.237">boolean containsKey(long key)</text><ellipse cx="926.5625" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="938.0208" y="545.9819">ByteArray get(long key)</text><ellipse cx="926.5625" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="938.0208" y="565.7267">LongIterator keys()</text><ellipse cx="926.5625" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="938.0208" y="585.4716">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="926.5625" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="938.0208" y="605.2165">void putAll(long key, byte[] values)</text><ellipse cx="926.5625" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="938.0208" y="624.9613">void putAll(long key, ByteArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="916.1458" x2="1057.8125" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1060.9375" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1126.5625" x2="1268.2292" y1="502.1617" y2="502.1617"/><!--MD5=[4920d5307010b5c3664756a173cd7c76]
class LongToIntFixedMultiMap--><rect codeLine="110" fill="#282828" height="225.7589" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1305.7292" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1305.7292" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1305.7292" y="431.9661"/><rect codeLine="110" fill="none" height="225.7589" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1305.7292" y="408.9111"/><ellipse cx="1394.7917" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1396.7021,429.0304 Q1396.2748,429.2501 1395.8049,429.3599 Q1395.3349,429.4698 1394.8161,429.4698 Q1392.9728,429.4698 1392.0024,428.2552 Q1391.0319,427.0406 1391.0319,424.7457 Q1391.0319,422.4447 1392.0024,421.2301 Q1392.9728,420.0155 1394.8161,420.0155 Q1395.3349,420.0155 1395.811,420.1253 Q1396.287,420.2352 1396.7021,420.4549 L1396.7021,422.4569 Q1396.2382,422.0296 1395.8018,421.8313 Q1395.3654,421.6329 1394.9015,421.6329 Q1393.9128,421.6329 1393.4092,422.4172 Q1392.9057,423.2015 1392.9057,424.7457 Q1392.9057,426.2838 1393.4092,427.0681 Q1393.9128,427.8524 1394.9015,427.8524 Q1395.3654,427.8524 1395.8018,427.654 Q1396.2382,427.4556 1396.7021,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="1417.7083" y="429.3294">LongToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1306.7708" x2="1658.8542" y1="440.2995" y2="440.2995"/><ellipse cx="1317.1875" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="1328.6458" y="482.5806">LongToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1306.7708" x2="1439.0625" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1442.1875" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1526.5625" x2="1658.8542" y1="458.5052" y2="458.5052"/><ellipse cx="1317.1875" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1328.6458" y="526.237">boolean containsKey(long key)</text><ellipse cx="1317.1875" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1328.6458" y="545.9819">IntArray get(long key)</text><ellipse cx="1317.1875" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1328.6458" y="565.7267">LongIterator keys()</text><ellipse cx="1317.1875" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="1328.6458" y="585.4716">void putAll(long key, IntArray values)</text><ellipse cx="1317.1875" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1328.6458" y="605.2165">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1317.1875" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="1328.6458" y="624.9613">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1306.7708" x2="1448.4375" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1451.5625" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1517.1875" x2="1658.8542" y1="502.1617" y2="502.1617"/><!--MD5=[f812a7756caac12083cc8aed90c40b12]
class LongToIntMultiMap--><rect codeLine="126" fill="#282828" height="206.014" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="441.862"/><rect codeLine="126" fill="none" height="206.014" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><ellipse cx="309.4271" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M311.3375,438.9262 Q310.9102,439.1459 310.4403,439.2558 Q309.9703,439.3656 309.4515,439.3656 Q307.6082,439.3656 306.6378,438.151 Q305.6673,436.9364 305.6673,434.6415 Q305.6673,432.3405 306.6378,431.1259 Q307.6082,429.9113 309.4515,429.9113 Q309.9703,429.9113 310.4464,430.0212 Q310.9224,430.131 311.3375,430.3507 L311.3375,432.3527 Q310.8736,431.9255 310.4372,431.7271 Q310.0008,431.5287 309.5369,431.5287 Q308.5482,431.5287 308.0446,432.313 Q307.5411,433.0973 307.5411,434.6415 Q307.5411,436.1796 308.0446,436.9639 Q308.5482,437.7482 309.5369,437.7482 Q310.0008,437.7482 310.4372,437.5498 Q310.8736,437.3515 311.3375,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="127.0833" x="331.1979" y="439.2253">LongToIntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="272.9167" x2="486.4583" y1="450.1953" y2="450.1953"/><ellipse cx="283.3333" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="294.7917" y="492.4764">LongToIntMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="272.9167" x2="335.9375" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="339.0625" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="423.4375" x2="486.4583" y1="468.4011" y2="468.4011"/><ellipse cx="283.3333" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="294.7917" y="536.1328">void add(long key, int value)</text><ellipse cx="283.3333" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="294.7917" y="555.8777">boolean containsKey(long key)</text><ellipse cx="283.3333" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="294.7917" y="575.6226">IntIterator iterator(long key)</text><ellipse cx="283.3333" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="294.7917" y="595.3674">LongIterator keys()</text><ellipse cx="283.3333" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="294.7917" y="615.1123">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="272.9167" x2="345.3125" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="348.4375" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="414.0625" x2="486.4583" y1="512.0575" y2="512.0575"/><!--MD5=[3d6da11c5d686df0fe655d1f9f470d58]
class LongToLongFixedMultiMap--><rect codeLine="140" fill="#282828" height="225.7589" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1696.3542" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1696.3542" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1696.3542" y="431.9661"/><rect codeLine="140" fill="none" height="225.7589" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1696.3542" y="408.9111"/><ellipse cx="1778.125" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1780.0354,429.0304 Q1779.6082,429.2501 1779.1382,429.3599 Q1778.6682,429.4698 1778.1494,429.4698 Q1776.3062,429.4698 1775.3357,428.2552 Q1774.3652,427.0406 1774.3652,424.7457 Q1774.3652,422.4447 1775.3357,421.2301 Q1776.3062,420.0155 1778.1494,420.0155 Q1778.6682,420.0155 1779.1443,420.1253 Q1779.6204,420.2352 1780.0354,420.4549 L1780.0354,422.4569 Q1779.5715,422.0296 1779.1351,421.8313 Q1778.6987,421.6329 1778.2349,421.6329 Q1777.2461,421.6329 1776.7426,422.4172 Q1776.239,423.2015 1776.239,424.7457 Q1776.239,426.2838 1776.7426,427.0681 Q1777.2461,427.8524 1778.2349,427.8524 Q1778.6987,427.8524 1779.1351,427.654 Q1779.5715,427.4556 1780.0354,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="176.0417" x="1801.0417" y="429.3294">LongToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1697.3958" x2="2049.4792" y1="440.2995" y2="440.2995"/><ellipse cx="1707.8125" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1719.2708" y="482.5806">LongToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1697.3958" x2="1829.6875" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1832.8125" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1917.1875" x2="2049.4792" y1="458.5052" y2="458.5052"/><ellipse cx="1707.8125" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1719.2708" y="526.237">boolean containsKey(long key)</text><ellipse cx="1707.8125" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="1719.2708" y="545.9819">LongArray get(long key)</text><ellipse cx="1707.8125" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1719.2708" y="565.7267">LongIterator keys()</text><ellipse cx="1707.8125" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1719.2708" y="585.4716">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1707.8125" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="1719.2708" y="605.2165">void putAll(long key, LongArray values)</text><ellipse cx="1707.8125" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="1719.2708" y="624.9613">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1697.3958" x2="1839.0625" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1842.1875" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1907.8125" x2="2049.4792" y1="502.1617" y2="502.1617"/><!--MD5=[54cb38786c5431f48ed21fde5339d796]
class LongToLongMultiMap--><rect codeLine="156" fill="#282828" height="206.014" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2944.7917" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2944.7917" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2944.7917" y="441.862"/><rect codeLine="156" fill="none" height="206.014" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2944.7917" y="418.807"/><ellipse cx="2980.4688" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2982.3792,438.9262 Q2981.9519,439.1459 2981.4819,439.2558 Q2981.012,439.3656 2980.4932,439.3656 Q2978.6499,439.3656 2977.6794,438.151 Q2976.709,436.9364 2976.709,434.6415 Q2976.709,432.3405 2977.6794,431.1259 Q2978.6499,429.9113 2980.4932,429.9113 Q2981.012,429.9113 2981.488,430.0212 Q2981.9641,430.131 2982.3792,430.3507 L2982.3792,432.3527 Q2981.9153,431.9255 2981.4789,431.7271 Q2981.0425,431.5287 2980.5786,431.5287 Q2979.5898,431.5287 2979.0863,432.313 Q2978.5828,433.0973 2978.5828,434.6415 Q2978.5828,436.1796 2979.0863,436.9639 Q2979.5898,437.7482 2980.5786,437.7482 Q2981.0425,437.7482 2981.4789,437.5498 Q2981.9153,437.3515 2982.3792,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="141.6667" x="3001.8229" y="439.2253">LongToLongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2945.8333" x2="3169.7917" y1="450.1953" y2="450.1953"/><ellipse cx="2956.25" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2967.7083" y="492.4764">LongToLongMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2945.8333" x2="3014.0625" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="3017.1875" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3101.5625" x2="3169.7917" y1="468.4011" y2="468.4011"/><ellipse cx="2956.25" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="2967.7083" y="536.1328">void add(long key, long value)</text><ellipse cx="2956.25" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="2967.7083" y="555.8777">boolean containsKey(long key)</text><ellipse cx="2956.25" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="2967.7083" y="575.6226">LongIterator iterator(long key)</text><ellipse cx="2956.25" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="2967.7083" y="595.3674">LongIterator keys()</text><ellipse cx="2956.25" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="2967.7083" y="615.1123">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2945.8333" x2="3023.4375" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3026.5625" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3092.1875" x2="3169.7917" y1="512.0575" y2="512.0575"/><!--MD5=[7dc83dba370c73a9f85e44bd982e6617]
class PrimitiveMap--><rect fill="#282828" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1569.7917" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1569.7917" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1569.7917" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1569.7917" y="53.7028"/><ellipse cx="1584.375" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1586.2854,73.822 Q1585.8582,74.0417 1585.3882,74.1516 Q1584.9182,74.2615 1584.3994,74.2615 Q1582.5562,74.2615 1581.5857,73.0469 Q1580.6152,71.8323 1580.6152,69.5374 Q1580.6152,67.2363 1581.5857,66.0217 Q1582.5562,64.8071 1584.3994,64.8071 Q1584.9182,64.8071 1585.3943,64.917 Q1585.8704,65.0269 1586.2854,65.2466 L1586.2854,67.2485 Q1585.8215,66.8213 1585.3851,66.6229 Q1584.9487,66.4246 1584.4849,66.4246 Q1583.4961,66.4246 1582.9926,67.2089 Q1582.489,67.9932 1582.489,69.5374 Q1582.489,71.0754 1582.9926,71.8597 Q1583.4961,72.644 1584.4849,72.644 Q1584.9487,72.644 1585.3851,72.4457 Q1585.8215,72.2473 1586.2854,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="1601.0417" y="74.1211">PrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1570.8333" x2="1690.625" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1570.8333" x2="1690.625" y1="93.4245" y2="93.4245"/><!--MD5=[1a7d64ae7d6032b4ac7c56e7ae9b010e]
reverse link Sized to IntMultiMap--><path codeLine="11" d="M2002.9479,83.1507 C1852.5104,95.0257 1432.1042,128.932 1082.8125,164.1195 C903.5729,182.1715 699,205.859 556.9063,222.807 " fill="none" id="Sized-backto-IntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2002.5938,75.8695,2023.9271,81.5049,2003.7292,90.4007,2002.5938,75.8695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[770650b6aa5dc9033e07e0c3b0aa7834]
reverse link PrimitiveMultiMap to IntToByteFixedMultiMap--><path codeLine="20" d="M1559.6146,309.1299 C1549.0625,315.9945 1537.9167,322.1195 1526.5625,326.6195 C1264.9167,430.3695 1161.0625,293.4528 896.3542,389.1195 C881.4792,394.4945 866.6354,401.2653 852.1667,408.8799 " fill="none" id="PrimitiveMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1555.5,303.109,1576.7083,297.0153,1563.9271,315.0049,1555.5,303.109" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfe75cc93891e215cab385e322d933a5]
reverse link PrimitiveScalarMultiMap to IntToByteFixedMultiMap--><path codeLine="21" d="M1081.0729,312.8903 C1019.8542,334.2132 954.4063,359.9632 896.3542,389.1195 C884.3125,395.1715 872.1458,401.8486 860.0729,408.8903 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1078.7188,305.9945,1100.7917,306.1299,1083.4479,319.7861,1078.7188,305.9945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[40e566c2ad01f56e72d1dfc432edcffd]
reverse link PrimitiveMultiMap to IntToIntFixedMultiMap--><path codeLine="35" d="M1560.3854,309.2965 C1549.6458,316.234 1538.2292,322.3278 1526.5625,326.6195 C1260.7813,424.432 512.6771,274.609 253.6458,389.1195 C237.0417,396.4632 221.375,406.8903 207.0208,418.7132 " fill="none" id="PrimitiveMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1556.5417,303.0778,1577.7604,296.9945,1564.9688,314.984,1556.5417,303.0778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b74cfb8c1523d3d80b86cd2cbb5c95b3]
reverse link IntMultiMap to IntToIntFixedMultiMap--><path codeLine="36" d="M308.0625,322.5153 C280.0729,352.2549 247.5521,386.807 217.5625,418.6715 " fill="none" id="IntMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="303.0833,317.1611,322.6771,306.984,313.7083,327.1507,303.0833,317.1611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ca7d41135a34a5c01f19527588a0cc1f]
reverse link PrimitiveScalarMultiMap to IntToIntFixedMultiMap--><path codeLine="37" d="M1080.0938,269.2132 C793.5417,299.484 326.1042,353.2965 253.6458,389.1195 C237.9583,396.8799 223,407.2236 209.1563,418.7236 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1079.3542,261.9528,1100.8333,267.0257,1080.8854,276.4632,1079.3542,261.9528" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3857c396d8df5291198e30b6d54db019]
reverse link PrimitiveMultiMap to IntToLongFixedMultiMap--><path codeLine="50" d="M1737.2604,267.2965 C1829.4375,288.5049 1963.9271,327.1715 2068.2292,389.1195 C2082.5521,397.6299 2096.6146,407.8382 2109.9479,418.7653 " fill="none" id="PrimitiveMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1735.5521,274.3799,1716.8229,262.7132,1738.7396,260.1507,1735.5521,274.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b208f5301ffb6aa1d0864148c88413a3]
reverse link LongMultiMap to IntToLongFixedMultiMap--><path codeLine="51" d="M2361.9375,323.7445 C2338.9063,353.2132 2312.2917,387.2549 2287.7292,418.6715 " fill="none" id="LongMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2356.4583,318.9111,2375.0417,306.984,2367.9479,327.8903,2356.4583,318.9111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9e29c53af3e023a1cc72b386db0c1677]
reverse link PrimitiveScalarMultiMap to IntToLongFixedMultiMap--><path codeLine="52" d="M1528.9271,326.6715 C1767.2813,377.0153 1854.5417,289.6299 2068.2292,389.1195 C2084.6979,396.7861 2100.4792,407.1611 2115.1146,418.7445 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1527.1979,333.7549,1508.4688,322.0882,1530.3854,319.5257,1527.1979,333.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0a9b88a08c1b70fdd1382184510f9c97]
reverse link PrimitiveMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="65" d="M1737.7604,259.9528 C1879.3854,279.6299 2135.7188,321.359 2346.3542,389.1195 C2352.6875,391.1507 2359.0521,393.2861 2365.4583,395.5049 " fill="none" id="PrimitiveMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1736.5313,267.1403,1716.8854,257.0986,1738.5104,252.6924,1736.5313,267.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[739e3bc5dd5521c98c7ebbf11aa9bab5]
reverse link LongMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="66" d="M2482.7188,323.5674 C2498.6771,343.984 2516.375,366.6195 2533.9167,389.057 " fill="none" id="LongMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2476.8438,327.8903,2469.75,306.984,2488.3333,318.9111,2476.8438,327.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1814b039795f1d96cf6a4878df1f11c8]
reverse link PrimitiveScalarMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="67" d="M1529.0208,326.7132 C1887.9479,399.4945 1998.9479,300.0882 2346.3542,389.1195 C2352.6563,390.734 2359,392.484 2365.3542,394.3382 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1527.2917,333.7965,1508.3958,322.4007,1530.2813,319.5257,1527.2917,333.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[665d9528b330b09b5b48766def62ecb6]
reverse link Sized to LongMultiMap--><path codeLine="84" d="M2115.0208,103.8903 C2161.3542,125.057 2229.5,156.1924 2289.8646,183.7757 " fill="none" id="Sized-backto-LongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2111.8958,110.484,2095.9792,95.1924,2117.9583,97.2132,2111.8958,110.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[464a3c0904bac3ae1c62d95220e1b4a7]
reverse link PrimitiveMultiMap to LongToByteFixedMultiMap--><path codeLine="93" d="M1556.1042,309.3695 C1546.5208,315.7757 1536.5521,321.7236 1526.5625,326.6195 C1427.75,375.0465 1387.2396,343.7445 1286.9792,389.1195 C1274.0521,394.9736 1261.0521,401.6611 1248.2188,408.8486 " fill="none" id="PrimitiveMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1552.2188,303.182,1573.4167,297.0361,1560.6771,315.0674,1552.2188,303.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dcf07fe2b95df686e43efa64177c11db]
reverse link PrimitiveScalarMultiMap to LongToByteFixedMultiMap--><path codeLine="94" d="M1229.5104,343.5153 C1213.1563,364.6403 1195.7292,387.1507 1178.9583,408.807 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1223.8438,338.9215,1242.3646,326.9111,1235.375,347.8486,1223.8438,338.9215" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b6127586369a48f529fa8b0b8768bc87]
reverse link PrimitiveMultiMap to LongToIntFixedMultiMap--><path codeLine="108" d="M1593.3854,315.7132 C1578.1771,343.932 1560.2083,377.2861 1543.2188,408.7965 " fill="none" id="PrimitiveMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1587.125,311.9528,1603.4271,297.0778,1599.9583,318.8695,1587.125,311.9528" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5ba56ab4753696a05af8ee779fdc3a81]
reverse link PrimitiveScalarMultiMap to LongToIntFixedMultiMap--><path codeLine="109" d="M1368.3125,344.4528 C1381.8438,365.307 1396.2292,387.4736 1410.0729,408.807 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1362.1563,348.359,1356.9271,326.9111,1374.3854,340.4111,1362.1563,348.359" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[abe75afdbc3ea6e7aff1c1c1d12d537a]
reverse link PrimitiveMultiMap to LongToIntMultiMap--><path codeLine="123" d="M1560.1458,309.2861 C1549.4688,316.1924 1538.1354,322.2861 1526.5625,326.6195 C1313.75,406.4007 711.8958,293.4736 505.7292,389.1195 C489.7917,396.5153 474.8438,406.8903 461.1979,418.6195 " fill="none" id="PrimitiveMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1556.2188,303.1403,1577.4375,297.057,1564.6354,315.0465,1556.2188,303.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5b3d3871f42ea3109effd0d1ad5b1512]
reverse link IntMultiMap to LongToIntMultiMap--><path codeLine="124" d="M379.6875,327.9111 C379.6875,356.3799 379.6875,388.7236 379.6875,418.6715 " fill="none" id="IntMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="372.3958,327.8174,379.6875,306.984,386.9792,327.8174,372.3958,327.8174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[deb2b9b86d6f9fe1788c14fdf0d7f203]
reverse link PrimitiveScalarMultiMap to LongToIntMultiMap--><path codeLine="125" d="M1080.1563,270.7549 C879.5729,295.3278 602.8542,337.0465 505.7292,389.1195 C490.9375,397.0465 476.875,407.3382 463.8646,418.682 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1079.2917,263.5153,1100.8542,268.2445,1081.0417,277.9945,1079.2917,263.5153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3c0bce9bbf3284ca7c87272c80f02058]
reverse link PrimitiveMultiMap to LongToLongFixedMultiMap--><path codeLine="138" d="M1689.5,312.8799 C1714.9792,341.682 1745.5104,376.2236 1774.3229,408.7965 " fill="none" id="PrimitiveMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1683.8646,317.5153,1675.5313,297.0778,1694.7917,307.8486,1683.8646,317.5153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ff0ad0b37dad764f0dc7a89862a469b3]
reverse link PrimitiveScalarMultiMap to LongToLongFixedMultiMap--><path codeLine="139" d="M1528.4479,329.7236 C1598.5104,356.2653 1661.7917,380.9111 1677.6042,389.1195 C1689.3333,395.2132 1701.2188,401.859 1713.0208,408.8174 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1525.4479,336.3799,1508.5417,322.1924,1530.6042,322.7445,1525.4479,336.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9958715f31b6e54ca599fd7b793c6070]
reverse link PrimitiveMultiMap to LongToLongMultiMap--><path codeLine="153" d="M1737.8542,262.307 C1857,279.6299 2055.25,307.4528 2226.5625,326.6195 C2381.7708,343.984 2785.1458,322.8486 2926.5625,389.1195 C2942.6458,396.6507 2957.875,407.0361 2971.875,418.6924 " fill="none" id="PrimitiveMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1736.4792,269.4736,1716.9167,259.2445,1738.5833,255.0361,1736.4792,269.4736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4d9a3dece8a4a24f432bf94c4d13e872]
reverse link LongMultiMap to LongToLongMultiMap--><path codeLine="154" d="M2619.9167,277.9215 C2717,299.3278 2832.9479,334.0674 2926.5625,389.1195 C2940.7604,397.4632 2954.5104,407.7236 2967.4167,418.7861 " fill="none" id="LongMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2618.3438,285.0465,2599.5,273.557,2621.3958,270.7861,2618.3438,285.0465" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[677cf828ea3df87ae06e94fd094142e9]
reverse link PrimitiveScalarMultiMap to LongToLongMultiMap--><path codeLine="155" d="M1528.8646,326.3903 C1865.0208,382.2132 2647.5417,265.859 2926.5625,389.1195 C2943.1042,396.4215 2958.6875,406.8382 2972.9375,418.6611 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1527.5313,333.557,1508.3438,322.6507,1530.1458,319.2028,1527.5313,333.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c3f63cf971db9fe9151941242150ac8a]
reverse link PrimitiveMap to PrimitiveMultiMap--><path codeLine="168" d="M1630.7292,122.7861 C1630.7292,144.5674 1630.7292,170.9632 1630.7292,193.5778 " fill="none" id="PrimitiveMap-backto-PrimitiveMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1623.4375,122.5674,1630.7292,101.734,1638.0208,122.5674,1623.4375,122.5674" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[a26f5457ca47aa0493c09619cfbe6346]
@startuml

    !include lexakai.theme
    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends Quantizable> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends Quantizable> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>