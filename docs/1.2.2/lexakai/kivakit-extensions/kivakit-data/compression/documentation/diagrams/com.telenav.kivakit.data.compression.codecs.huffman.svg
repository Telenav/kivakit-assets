<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="471.875px" preserveAspectRatio="none" style="width:1168px;height:471px;background:#333333;" version="1.1" viewBox="0 0 1168 471" width="1168.75px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="564.5833" x="294.7917" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="541.6667" x="306.25" y="30.5583">com.telenav.kivakit.data.compression.codecs.huffman</text><!--MD5=[af4063f8b666854de88383954281b285]
cluster FastHuffmanDecoder.Table--><polygon fill="#333333" points="308.3333,257.3486,495.8333,257.3486,503.125,284.5703,507.2917,284.5703,507.2917,414.6403,308.3333,414.6403,308.3333,257.3486" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="308.3333" x2="503.125" y1="284.5703" y2="284.5703"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="175" x="315.625" y="274.6419">FastHuffmanDecoder.Table</text><!--MD5=[b8fe5ed5f9c35b908904ec3d3ad10e60]
class FastHuffmanDecoder.Table.Entry--><rect codeLine="10" fill="#282828" height="83.3781" id="FastHuffmanDecoder.Table.Entry" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="306.307"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="306.307"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="329.362"/><rect codeLine="10" fill="none" height="83.3781" id="FastHuffmanDecoder.Table.Entry" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="129.1667" x="353.125" y="306.307"/><ellipse cx="367.7083" cy="322.0011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M369.6187,326.4262 Q369.1915,326.6459 368.7215,326.7558 Q368.2515,326.8656 367.7327,326.8656 Q365.8895,326.8656 364.919,325.651 Q363.9486,324.4364 363.9486,322.1415 Q363.9486,319.8405 364.919,318.6259 Q365.8895,317.4113 367.7327,317.4113 Q368.2515,317.4113 368.7276,317.5212 Q369.2037,317.631 369.6187,317.8507 L369.6187,319.8527 Q369.1549,319.4255 368.7185,319.2271 Q368.2821,319.0287 367.8182,319.0287 Q366.8294,319.0287 366.3259,319.813 Q365.8223,320.5973 365.8223,322.1415 Q365.8223,323.6796 366.3259,324.4639 Q366.8294,325.2482 367.8182,325.2482 Q368.2821,325.2482 368.7185,325.0498 Q369.1549,324.8515 369.6187,324.4242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="33.3333" x="384.375" y="326.7253">Entry</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="429.1667" y="303.182"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="433.3333" y="319.4336">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="354.1667" x2="481.25" y1="337.6953" y2="337.6953"/><polygon fill="#FFFF44" points="364.5833,367.8569,368.75,372.0235,364.5833,376.1902,360.4167,372.0235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="37.5" x="376.0417" y="379.9764">Entry()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="354.1667" x2="373.9583" y1="355.9011" y2="355.9011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="377.0833" y="359.7107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="461.4583" x2="481.25" y1="355.9011" y2="355.9011"/><!--MD5=[f39ad9880bdb1ab85099c19a5add36ec]
class AsString--><rect codeLine="6" fill="#282828" height="48.055" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="88.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="88.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="111.6536"/><rect codeLine="6" fill="none" height="48.055" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="92.7083" x="234.8958" y="88.5986"/><ellipse cx="249.4792" cy="104.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M246.8831,101.4547 L246.8831,99.8678 L252.3092,99.8678 L252.3092,101.4547 L250.4964,101.4547 L250.4964,107.3934 L252.3092,107.3934 L252.3092,108.9803 L246.8831,108.9803 L246.8831,107.3934 L248.6959,107.3934 L248.6959,101.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="55.2083" x="266.1458" y="109.0169">AsString</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="235.9375" x2="326.5625" y1="119.987" y2="119.987"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="235.9375" x2="326.5625" y1="128.3203" y2="128.3203"/><!--MD5=[19bab21d94a99911073f24de8dec88db]
class Codec--><rect codeLine="7" fill="#282828" height="48.055" id="Codec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="88.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="88.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="111.6536"/><rect codeLine="7" fill="none" height="48.055" id="Codec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="695.8333" y="88.5986"/><ellipse cx="710.4167" cy="104.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M707.8206,101.4547 L707.8206,99.8678 L713.2467,99.8678 L713.2467,101.4547 L711.4339,101.4547 L711.4339,107.3934 L713.2467,107.3934 L713.2467,108.9803 L707.8206,108.9803 L707.8206,107.3934 L709.6334,107.3934 L709.6334,101.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="727.0833" y="109.0169">Codec</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="696.875" x2="771.875" y1="119.987" y2="119.987"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="696.875" x2="771.875" y1="128.3203" y2="128.3203"/><!--MD5=[c407b488d7ef18e93988e03ee4970a88]
class FastHuffmanDecoder--><rect codeLine="16" fill="#282828" height="111.4563" id="FastHuffmanDecoder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="79.8828"/><rect codeLine="16" fill="none" height="111.4563" id="FastHuffmanDecoder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="347.9167" x="809.375" y="56.8278"/><ellipse cx="878.6458" cy="72.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M880.5562,76.947 Q880.129,77.1667 879.659,77.2766 Q879.189,77.3865 878.6702,77.3865 Q876.827,77.3865 875.8565,76.1719 Q874.8861,74.9573 874.8861,72.6624 Q874.8861,70.3613 875.8565,69.1467 Q876.827,67.9321 878.6702,67.9321 Q879.189,67.9321 879.6651,68.042 Q880.1412,68.1519 880.5562,68.3716 L880.5562,70.3735 Q880.0924,69.9463 879.656,69.7479 Q879.2196,69.5496 878.7557,69.5496 Q877.7669,69.5496 877.2634,70.3339 Q876.7598,71.1182 876.7598,72.6624 Q876.7598,74.2004 877.2634,74.9847 Q877.7669,75.769 878.7557,75.769 Q879.2196,75.769 879.656,75.5707 Q880.0924,75.3723 880.5562,74.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="136.4583" x="901.5625" y="77.2461">FastHuffmanDecoder</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="1104.1667" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="1108.3333" y="69.9544">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="810.4167" x2="1156.25" y1="88.2161" y2="88.2161"/><ellipse cx="820.8333" cy="123.586" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="832.2917" y="130.4972">FastHuffmanDecoder(HuffmanCodec&lt;Symbol&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="810.4167" x2="939.5833" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="942.7083" y="110.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1027.0833" x2="1156.25" y1="106.4219" y2="106.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="810.4167" x2="1156.25" y1="140.2059" y2="140.2059"/><ellipse cx="820.8333" cy="151.6642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="315.625" x="832.2917" y="158.5754">void decode(ByteList input, SymbolConsumer&lt;Symbol&gt;)</text><!--MD5=[0694993cfa3ff74ed48baeb4633f0f47]
class HuffmanCodec--><rect codeLine="25" fill="#282828" height="234.0922" id="HuffmanCodec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="230.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="230.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="253.8411"/><rect codeLine="25" fill="none" height="234.0922" id="HuffmanCodec" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="532.2917" y="230.7861"/><ellipse cx="650" cy="246.4803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M651.9104,250.9054 Q651.4832,251.1251 651.0132,251.2349 Q650.5432,251.3448 650.0244,251.3448 Q648.1812,251.3448 647.2107,250.1302 Q646.2402,248.9156 646.2402,246.6207 Q646.2402,244.3197 647.2107,243.1051 Q648.1812,241.8905 650.0244,241.8905 Q650.5432,241.8905 651.0193,242.0003 Q651.4954,242.1102 651.9104,242.3299 L651.9104,244.3319 Q651.4465,243.9046 651.0101,243.7063 Q650.5737,243.5079 650.1099,243.5079 Q649.1211,243.5079 648.6176,244.2922 Q648.114,245.0765 648.114,246.6207 Q648.114,248.1588 648.6176,248.9431 Q649.1211,249.7274 650.1099,249.7274 Q650.5737,249.7274 651.0101,249.529 Q651.4465,249.3306 651.9104,248.9034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="672.9167" y="251.2044">HuffmanCodec</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="883.3333" y="227.6611"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="887.5" y="243.9128">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="533.3333" x2="935.4167" y1="262.1745" y2="262.1745"/><polygon fill="#FFFF44" points="543.75,292.336,547.9167,296.5027,543.75,300.6694,539.5833,296.5027" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="555.2083" y="304.4556">HuffmanCodec()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="690.625" y1="280.3802" y2="280.3802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="693.75" y="284.1899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="778.125" x2="935.4167" y1="280.3802" y2="280.3802"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="935.4167" y1="314.1642" y2="314.1642"/><ellipse cx="543.75" cy="325.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="555.2083" y="332.5338">Code code(Symbol value)</text><ellipse cx="543.75" cy="345.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="555.2083" y="352.2786">Set&lt;CodedSymbol&lt;Symbol&gt;&gt; codedSymbols()</text><ellipse cx="543.75" cy="365.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="240.625" x="555.2083" y="372.0235">CodedSymbol&lt;Symbol&gt; decode(BitReader)</text><ellipse cx="543.75" cy="384.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="555.2083" y="391.7684">CodedSymbol&lt;Symbol&gt; escape()</text><ellipse cx="543.75" cy="404.6021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="371.875" x="555.2083" y="411.5133">HuffmanCodec&lt;Symbol&gt; from(Symbols&lt;Symbol&gt;, Maximum bits)</text><ellipse cx="543.75" cy="448.2585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="555.2083" y="455.1697">PropertyMap asProperties(StringConverter&lt;Symbol&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="533.3333" x2="700" y1="431.0944" y2="431.0944"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="703.125" y="434.904">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="768.75" x2="935.4167" y1="431.0944" y2="431.0944"/><!--MD5=[464856e56007ed2ccda2d036de719e08]
class FastHuffmanDecoder.Table--><rect codeLine="40" fill="#282828" height="83.3781" id="FastHuffmanDecoder.Table" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="306.307"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="306.307"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="329.362"/><rect codeLine="40" fill="none" height="83.3781" id="FastHuffmanDecoder.Table" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="270.8333" x="9.375" y="306.307"/><ellipse cx="23.9583" cy="322.0011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M25.8687,326.4262 Q25.4415,326.6459 24.9715,326.7558 Q24.5015,326.8656 23.9827,326.8656 Q22.1395,326.8656 21.169,325.651 Q20.1986,324.4364 20.1986,322.1415 Q20.1986,319.8405 21.169,318.6259 Q22.1395,317.4113 23.9827,317.4113 Q24.5015,317.4113 24.9776,317.5212 Q25.4537,317.631 25.8687,317.8507 L25.8687,319.8527 Q25.4049,319.4255 24.9685,319.2271 Q24.5321,319.0287 24.0682,319.0287 Q23.0794,319.0287 22.5759,319.813 Q22.0723,320.5973 22.0723,322.1415 Q22.0723,323.6796 22.5759,324.4639 Q23.0794,325.2482 24.0682,325.2482 Q24.5321,325.2482 24.9685,325.0498 Q25.4049,324.8515 25.8687,324.4242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="175" x="40.625" y="326.7253">FastHuffmanDecoder.Table</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="56.25" x="227.0833" y="303.182"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="47.9167" x="231.25" y="319.4336">Symbol</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="279.1667" y1="337.6953" y2="337.6953"/><polygon fill="#FFFF44" points="20.8333,367.8569,25,372.0235,20.8333,376.1902,16.6667,372.0235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="38.5417" x="32.2917" y="379.9764">Table()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="101.0417" y1="355.9011" y2="355.9011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="104.1667" y="359.7107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="188.5417" x2="279.1667" y1="355.9011" y2="355.9011"/><!--MD5=[91ef93040cdb1008351ff07bce4271a9]
reverse link AsString to FastHuffmanDecoder.Table.Entry--><path codeLine="9" d="M305.3958,154.8799 C330.3646,197.5778 369.1146,263.8382 393.9375,306.2965 " fill="none" id="AsString-backto-FastHuffmanDecoder.Table.Entry" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="299.0521,158.4945,294.8333,136.8278,311.6458,151.1299,299.0521,158.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[81743108a6ea9cbce914b8abe114774a]
reverse link Codec to HuffmanCodec--><path codeLine="24" d="M734.375,157.9215 C734.375,178.7653 734.375,204.7028 734.375,230.6195 " fill="none" id="Codec-backto-HuffmanCodec" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="727.0833,157.6611,734.375,136.8278,741.6667,157.6611,727.0833,157.6611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[91f22efd2d7d78973f4817267899e35b]
reverse link AsString to FastHuffmanDecoder.Table--><path codeLine="39" d="M257.1042,154.8799 C232.1354,197.5778 193.3854,263.8382 168.5625,306.2965 " fill="none" id="AsString-backto-FastHuffmanDecoder.Table" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="250.8542,151.1299,267.6667,136.8278,263.4479,158.4945,250.8542,151.1299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[98f37a85852b18f1fc4e8104dba0eba2]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.data.compression.codecs.huffman"
    
    interface AsString
    interface Codec
    
    AsString <|- - FastHuffmanDecoder.Table.Entry
    class FastHuffmanDecoder.Table.Entry<Symbol>
    {
        - -(constructors)- -
        #Entry()
    }
    
    class FastHuffmanDecoder<Symbol>
    {
        - -(constructors)- -
        +FastHuffmanDecoder(HuffmanCodec<Symbol>)
        - -
        +void decode(ByteList input, SymbolConsumer<Symbol>)
    }
    
    Codec <|- - HuffmanCodec
    class HuffmanCodec<Symbol>
    {
        - -(constructors)- -
        #HuffmanCodec()
        - -
        +Code code(Symbol value)
        +Set<CodedSymbol<Symbol>> codedSymbols()
        +CodedSymbol<Symbol> decode(BitReader)
        +CodedSymbol<Symbol> escape()
        +HuffmanCodec<Symbol> from(Symbols<Symbol>, Maximum bits)
        - -(collection)- -
        +PropertyMap asProperties(StringConverter<Symbol>)
    }
    
    AsString <|- - FastHuffmanDecoder.Table
    class FastHuffmanDecoder.Table<Symbol>
    {
        - -(constructors)- -
        #Table()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.data.compression.codecs.huffman"
    
    interface AsString
    interface Codec
    
    AsString <|- - FastHuffmanDecoder.Table.Entry
    class FastHuffmanDecoder.Table.Entry<Symbol>
    {
        - -(constructors)- -
        #Entry()
    }
    
    class FastHuffmanDecoder<Symbol>
    {
        - -(constructors)- -
        +FastHuffmanDecoder(HuffmanCodec<Symbol>)
        - -
        +void decode(ByteList input, SymbolConsumer<Symbol>)
    }
    
    Codec <|- - HuffmanCodec
    class HuffmanCodec<Symbol>
    {
        - -(constructors)- -
        #HuffmanCodec()
        - -
        +Code code(Symbol value)
        +Set<CodedSymbol<Symbol>> codedSymbols()
        +CodedSymbol<Symbol> decode(BitReader)
        +CodedSymbol<Symbol> escape()
        +HuffmanCodec<Symbol> from(Symbols<Symbol>, Maximum bits)
        - -(collection)- -
        +PropertyMap asProperties(StringConverter<Symbol>)
    }
    
    AsString <|- - FastHuffmanDecoder.Table
    class FastHuffmanDecoder.Table<Symbol>
    {
        - -(constructors)- -
        #Table()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>