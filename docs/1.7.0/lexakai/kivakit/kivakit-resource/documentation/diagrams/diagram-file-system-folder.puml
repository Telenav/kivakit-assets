
@startuml

    !include lexakai.theme
    
    title "File System - Folders"
    
    abstract BaseRepeater
    
    interface FileSystemObject
    interface Comparable
    interface ResourceFolder
    interface List
    interface TryTrait
    
    class Disk
    {
        --(filesystem)--
        +Folder root()
        --(math)--
        +Percent percentFree()
        +Percent percentUsable()
        --(primitive)--
        +Bytes free()
        +Bytes size()
        +Bytes usable()
    }
    
    interface CreatedAt
    interface ModifiedAt
    ModifiedAt <|-- FileSystemObject
    CreatedAt <|-- FileSystemObject
    interface FileSystemObject
    {
    }
    
    BaseRepeater <|-- Folder
    FileSystemObject <|-- Folder
    Comparable <|-- Folder
    ResourceFolder <|-- Folder
    TryTrait <|-- Folder
    Folder --> Disk : "exists on"
    Folder o-- FolderService : "delegates to"
    class Folder
    {
        --(constructors)--
        +Folder(FilePath)
        --(checks)--
        +boolean hasChanged()
        +boolean isLocal()
        +boolean isRemote()
        --(filesystem)--
        +boolean chmod(PosixFilePermission... permissions)
        +void chmodNested(PosixFilePermission... permissions)
        +Folder clearAll()
        +Folder clearAllAndDelete()
        +Folder current()
        +Folder desktop()
        +Disk disk()
        +Folder ensureExists()
        +File file(File)
        +File file(FileName)
        +File file(String path, Object... arguments)
        +File file(ResourcePathed)
        +FileList files(Extension)
        +FileList files(Pattern)
        +FileList files(Matcher<ResourcePathed>, Traversal recurse)
        +FileList files(String globPattern)
        +FileList files()
        +FileList files(Matcher<ResourcePathed>)
        +Folder folder(java.io.File)
        +Folder folder(Path)
        +Folder folder(FileName child)
        +Folder folder(StringPath)
        +Folder folder(URI)
        +Folder folder(URL)
        +Folder folder(Folder child)
        +ArgumentParser.Builder<Folder> folderArgumentParser(Listener, String description)
        +ArgumentParser.Builder<FolderList> folderListArgumentParser(Listener, String description)
        +SwitchParser.Builder<FolderList> folderListSwitchParser(Listener, String name, String description)
        +SwitchParser.Builder<Folder> folderSwitchParser(Listener, String name, String description)
        +List<Folder> folders(Matcher<Folder>)
        +SwitchParser.Builder<Folder> inputFolderSwitchParser(Listener)
        +boolean isFolder()
        +boolean isFolder(FilePath)
        +Folder kivakitCache()
        +Folder kivakitExtensionsHome()
        +Folder kivakitHome()
        +Folder kivakitTemporary()
        +Folder kivakitTest(Class<?> type)
        +Folder last()
        +FileName name()
        +FileList nestedFiles(Matcher<ResourcePathed>)
        +FileList nestedFiles()
        +Folder of(FilePath)
        +File oldest()
        +File oldest(Matcher<File>)
        +SwitchParser.Builder<Folder> outputFolderSwitchParser(Listener)
        +Folder parseFolder(String path, Object... arguments)
        +Folder parseFolder(Listener, String path, Object... arguments)
        +FilePath relativePath(Folder)
        +Folder relativeTo(Folder)
        +Folder root()
        +void safeCopyTo(ResourceFolder<?> destination, CopyMode, Matcher<ResourcePathed>, ProgressReporter)
        +Folder scheduleCleanUpOnExit()
        +Folder temporaryForProcess(Type)
        +Folder userHome()
        +Folder withoutTrailingSlash()
        --(network)--
        +URI asUri()
        +URL asUrl()
        --(primitive)--
        +Bytes size()
    }
    
    PeriodicCollectionChangeWatcher <|-- FolderChangeWatcher
    FolderChangeWatcher --> Folder : "watches"
    class FolderChangeWatcher
    {
        --(constructors)--
        +FolderChangeWatcher(Folder, Frequency)
    }
    
    List <|-- FolderList
    FolderList "1" o-- "*" Folder
    class FolderList
    {
        --(constructors)--
        +FolderList()
        --(filesystem)--
        +Set<Folder> asSet()
        +FolderList forVirtual(List<? extends FolderService> virtualFolders)
        +FolderList matching(Matcher<Folder>)
    }
    
    FolderPruner --> Folder : "prunes old files from"
    class FolderPruner
    {
        --(constructors)--
        +FolderPruner(Folder, Frequency)
        --
        +void capacity(Bytes capacity)
        --(collection)--
        #boolean canRemove(File candidate, FileList files)
        --(filesystem)--
        #void onFileRemoved(File)
        --(lifecycle)--
        +boolean isRunning()
        +void start()
        +void stop(Duration maximumWaitTime)
        --(matching)--
        +void matcher(Matcher<ResourcePathed>)
        #Matcher<ResourcePathed> matcher()
        --(math)--
        +void maximumAge(Duration maximumAge)
        +void minimumUsableDiskSpace(Percent minimumUsableDiskSpace)
        #Duration maximumAge()
        #Percent minimumUsableDiskSpace()
        --(primitive)--
        #Bytes capacity()
        --(time)--
        #Duration age(File)
    }
    
@enduml

