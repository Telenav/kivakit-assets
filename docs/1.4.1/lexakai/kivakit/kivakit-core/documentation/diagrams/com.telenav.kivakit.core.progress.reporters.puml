@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.progress.reporters"
    
    abstract BaseIterable
    
    interface ProgressReporter
    
    Multicaster <|-- BroadcastingProgressReporter
    ProgressReporter <|-- BroadcastingProgressReporter
    class BroadcastingProgressReporter
    {
        --(constructors)--
        #BroadcastingProgressReporter()
        #BroadcastingProgressReporter(BroadcastingProgressReporter)
        --
        +long at()
        +BroadcastingProgressReporter create(Listener, String itemName)
        +BroadcastingProgressReporter create(Listener)
        +BroadcastingProgressReporter create(Listener, String itemName, BaseCount<?> steps)
        +BroadcastingProgressReporter create()
        +BroadcastingProgressReporter createConcurrent(Listener, String itemName, BaseCount<?> steps)
        +BroadcastingProgressReporter createConcurrent(Listener)
        +BroadcastingProgressReporter createConcurrent(Listener, String itemName)
        +void feedback(String message)
        #void at(long at)
        #long increase(long increase)
        --(factory)--
        #BroadcastingProgressReporter newInstance()
        --(functional)--
        +BroadcastingProgressReporter withItemName(String itemName)
        +BroadcastingProgressReporter withPhase(String phase)
        +BroadcastingProgressReporter withSteps(BaseCount<?> steps)
        --(iteration)--
        +void next(long increase)
        --(math)--
        #long increment()
    }
    
    BroadcastingProgressReporter <|-- ConcurrentBroadcastingProgressReporter
    class ConcurrentBroadcastingProgressReporter
    {
        --(constructors)--
        #ConcurrentBroadcastingProgressReporter()
        +ConcurrentBroadcastingProgressReporter(BroadcastingProgressReporter)
    }
    
    InputStream <|-- ProgressiveInputStream
    class ProgressiveInputStream
    {
        --(constructors)--
        +ProgressiveInputStream(InputStream)
        +ProgressiveInputStream(InputStream, ProgressReporter)
    }
    
    BaseIterable <|-- ProgressiveIterable
    class ProgressiveIterable<T>
    {
        --(constructors)--
        +ProgressiveIterable(Iterable<T>, ProgressReporter)
    }
    
    OutputStream <|-- ProgressiveOutputStream
    class ProgressiveOutputStream
    {
        --(constructors)--
        +ProgressiveOutputStream(OutputStream)
        +ProgressiveOutputStream(OutputStream, ProgressReporter)
    }
    
@enduml

