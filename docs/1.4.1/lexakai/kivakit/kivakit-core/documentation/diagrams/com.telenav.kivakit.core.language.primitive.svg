<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="997.9167px" preserveAspectRatio="none" style="width:1148px;height:997px;background:#333333;" version="1.1" viewBox="0 0 1148 997" width="1148.9583px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="457.2917" x="338.5417" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="434.375" x="350" y="30.5583">com.telenav.kivakit.core.language.primitive</text><!--MD5=[3628101862d51d2e3b47dd9663572b8b]
class Booleans--><rect codeLine="6" fill="#282828" height="103.123" id="Booleans" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="109.8958" y="239.6403"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="109.8958" y="239.6403"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="109.8958" y="262.6953"/><rect codeLine="6" fill="none" height="103.123" id="Booleans" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="109.8958" y="239.6403"/><ellipse cx="152.6042" cy="255.3345" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M154.5146,259.7595 Q154.0873,259.9792 153.6174,260.0891 Q153.1474,260.199 152.6286,260.199 Q150.7853,260.199 149.8149,258.9844 Q148.8444,257.7698 148.8444,255.4749 Q148.8444,253.1738 149.8149,251.9592 Q150.7853,250.7446 152.6286,250.7446 Q153.1474,250.7446 153.6235,250.8545 Q154.0995,250.9644 154.5146,251.1841 L154.5146,253.186 Q154.0507,252.7588 153.6143,252.5604 Q153.1779,252.3621 152.714,252.3621 Q151.7253,252.3621 151.2217,253.1464 Q150.7182,253.9307 150.7182,255.4749 Q150.7182,257.0129 151.2217,257.7972 Q151.7253,258.5815 152.714,258.5815 Q153.1779,258.5815 153.6143,258.3832 Q154.0507,258.1848 154.5146,257.7576 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="59.375" x="175.5208" y="260.0586">Booleans</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="110.9375" x2="268.2292" y1="271.0286" y2="271.0286"/><ellipse cx="121.3542" cy="306.3985" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="132.8125" y="313.3097">boolean isFalse(String)</text><ellipse cx="121.3542" cy="326.1434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="132.8125" y="333.0546">boolean isTrue(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="110.9375" x2="163.0208" y1="289.2344" y2="289.2344"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="166.1458" y="293.044">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="216.1458" x2="268.2292" y1="289.2344" y2="289.2344"/><!--MD5=[39705073c38350bdc823eddd1a99565e]
class Doubles--><rect codeLine="13" fill="#282828" height="214.3473" id="Doubles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="465.625" x="305.7292" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="465.625" x="305.7292" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="465.625" x="305.7292" y="206.9661"/><rect codeLine="13" fill="none" height="214.3473" id="Doubles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="465.625" x="305.7292" y="183.9111"/><ellipse cx="504.1667" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M506.0771,204.0304 Q505.6498,204.2501 505.1799,204.3599 Q504.7099,204.4698 504.1911,204.4698 Q502.3478,204.4698 501.3774,203.2552 Q500.4069,202.0406 500.4069,199.7457 Q500.4069,197.4447 501.3774,196.2301 Q502.3478,195.0155 504.1911,195.0155 Q504.7099,195.0155 505.186,195.1253 Q505.662,195.2352 506.0771,195.4549 L506.0771,197.4569 Q505.6132,197.0296 505.1768,196.8313 Q504.7404,196.6329 504.2765,196.6329 Q503.2878,196.6329 502.7842,197.4172 Q502.2807,198.2015 502.2807,199.7457 Q502.2807,201.2838 502.7842,202.0681 Q503.2878,202.8524 504.2765,202.8524 Q504.7404,202.8524 505.1768,202.654 Q505.6132,202.4556 506.0771,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="54.1667" x="527.0833" y="204.3294">Doubles</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="306.7708" x2="770.3125" y1="215.2995" y2="215.2995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="306.7708" x2="770.3125" y1="223.6328" y2="223.6328"/><ellipse cx="317.1875" cy="235.0911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="328.6458" y="242.0024">String format(double value, int decimals)</text><ellipse cx="317.1875" cy="254.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="328.6458" y="261.7472">String format(double value)</text><ellipse cx="317.1875" cy="274.5809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="368.75" x="328.6458" y="281.4921">double inRange(double value, double minimum, double maximum)</text><ellipse cx="317.1875" cy="294.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="328.6458" y="301.237">int rounded(double value)</text><ellipse cx="317.1875" cy="337.9822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="433.3333" x="328.6458" y="344.8934">boolean isBetweenInclusive(double value, double minimum, double maximum)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="306.7708" x2="511.9792" y1="320.8181" y2="320.8181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="515.1042" y="324.6277">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="565.1042" x2="770.3125" y1="320.8181" y2="320.8181"/><ellipse cx="317.1875" cy="381.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="286.4583" x="328.6458" y="388.5498">double fastParse(String value, double denominator)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="306.7708" x2="509.8958" y1="364.4745" y2="364.4745"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="513.0208" y="368.2841">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="567.1875" x2="770.3125" y1="364.4745" y2="364.4745"/><!--MD5=[34e6d799543a3b562d639ea8f3c598b3]
class Ints--><rect codeLine="26" fill="#282828" height="475.1973" id="Ints" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="808.3333" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="808.3333" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="808.3333" y="76.7578"/><rect codeLine="26" fill="none" height="475.1973" id="Ints" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="808.3333" y="53.7028"/><ellipse cx="955.2083" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M957.1187,73.822 Q956.6915,74.0417 956.2215,74.1516 Q955.7515,74.2615 955.2327,74.2615 Q953.3895,74.2615 952.419,73.0469 Q951.4486,71.8323 951.4486,69.5374 Q951.4486,67.2363 952.419,66.0217 Q953.3895,64.8071 955.2327,64.8071 Q955.7515,64.8071 956.2276,64.917 Q956.7037,65.0269 957.1187,65.2466 L957.1187,67.2485 Q956.6549,66.8213 956.2185,66.6229 Q955.7821,66.4246 955.3182,66.4246 Q954.3294,66.4246 953.8259,67.2089 Q953.3223,67.9932 953.3223,69.5374 Q953.3223,71.0754 953.8259,71.8597 Q954.3294,72.644 955.3182,72.644 Q955.7821,72.644 956.2185,72.4457 Q956.6549,72.2473 957.1187,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="25" x="978.125" y="74.1211">Ints</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="809.375" x2="1140.625" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="809.375" x2="1140.625" y1="93.4245" y2="93.4245"/><ellipse cx="819.7917" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="831.25" y="111.794">String commaSeparated(int value)</text><ellipse cx="819.7917" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="831.25" y="131.5389">int digits(int value)</text><ellipse cx="819.7917" cy="144.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="234.375" x="831.25" y="151.2838">int forHighLow(int highWord, int lowWord)</text><ellipse cx="819.7917" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="831.25" y="171.0286">int high(int value)</text><ellipse cx="819.7917" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="272.9167" x="831.25" y="190.7735">int inRange(int value, int minimum, int maximum)</text><ellipse cx="819.7917" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="831.25" y="210.5184">int low(int value)</text><ellipse cx="819.7917" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="831.25" y="230.2633">int powerOfTen(int power)</text><ellipse cx="819.7917" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="831.25" y="250.0081">int quantized(int value, int quantum)</text><ellipse cx="819.7917" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="831.25" y="269.753">int rounded(double value)</text><ellipse cx="819.7917" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="831.25" y="289.4979">int signExtend(int value, int bits)</text><ellipse cx="819.7917" cy="326.2431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="831.25" y="333.1543">boolean isBetweenExclusive(int value, int low, int high)</text><ellipse cx="819.7917" cy="345.988" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="831.25" y="352.8992">boolean isBetweenInclusive(int value, int low, int high)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="809.375" x2="948.4375" y1="309.079" y2="309.079"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="951.5625" y="312.8886">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1001.5625" x2="1140.625" y1="309.079" y2="309.079"/><ellipse cx="819.7917" cy="389.6444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="184.375" x="831.25" y="396.5556">String toHex(int value, int length)</text><ellipse cx="819.7917" cy="409.3892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="831.25" y="416.3005">String toHex(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="809.375" x2="936.4583" y1="372.4803" y2="372.4803"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="939.5833" y="376.2899">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1013.5417" x2="1140.625" y1="372.4803" y2="372.4803"/><ellipse cx="819.7917" cy="453.0457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="831.25" y="459.9569">int parseFast(String text, int invalidValue)</text><ellipse cx="819.7917" cy="472.7905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="831.25" y="479.7017">int parseFast(String text)</text><ellipse cx="819.7917" cy="492.5354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="831.25" y="499.4466">int parseFastNaturalNumber(String)</text><ellipse cx="819.7917" cy="512.2803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="831.25" y="519.1915">int parseInt(Listener, String text)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="809.375" x2="946.3542" y1="435.8816" y2="435.8816"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="949.4792" y="439.6912">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1003.6458" x2="1140.625" y1="435.8816" y2="435.8816"/><!--MD5=[36e3b74b96422a4aed5309a6e6325a10]
class Longs--><rect codeLine="52" fill="#282828" height="400.3845" id="Longs" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="364.5833" x="7.2917" y="591.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="364.5833" x="7.2917" y="591.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="364.5833" x="7.2917" y="614.2578"/><rect codeLine="52" fill="none" height="400.3845" id="Longs" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="364.5833" x="7.2917" y="591.2028"/><ellipse cx="162.5" cy="606.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M164.4104,611.322 Q163.9832,611.5417 163.5132,611.6516 Q163.0432,611.7615 162.5244,611.7615 Q160.6812,611.7615 159.7107,610.5469 Q158.7402,609.3323 158.7402,607.0374 Q158.7402,604.7363 159.7107,603.5217 Q160.6812,602.3071 162.5244,602.3071 Q163.0432,602.3071 163.5193,602.417 Q163.9954,602.5269 164.4104,602.7466 L164.4104,604.7485 Q163.9465,604.3213 163.5101,604.1229 Q163.0737,603.9246 162.6099,603.9246 Q161.6211,603.9246 161.1176,604.7089 Q160.614,605.4932 160.614,607.0374 Q160.614,608.5754 161.1176,609.3597 Q161.6211,610.144 162.6099,610.144 Q163.0737,610.144 163.5101,609.9457 Q163.9465,609.7473 164.4104,609.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="185.4167" y="611.6211">Longs</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="370.8333" y1="622.5911" y2="622.5911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="370.8333" y1="630.9245" y2="630.9245"/><ellipse cx="18.75" cy="642.3828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="30.2083" y="649.294">String commaSeparated(long value)</text><ellipse cx="18.75" cy="662.1277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="30.2083" y="669.0389">long forHighLow(int high, int low)</text><ellipse cx="18.75" cy="681.8726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="30.2083" y="688.7838">int high(long value)</text><ellipse cx="18.75" cy="701.6174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="30.2083" y="708.5286">long inRange(long value, long min, long max)</text><ellipse cx="18.75" cy="721.3623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="30.2083" y="728.2735">int low(long value)</text><ellipse cx="18.75" cy="765.0187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="30.2083" y="771.9299">boolean isBetweenExclusive(long value, long low, long high)</text><ellipse cx="18.75" cy="784.7636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="30.2083" y="791.6748">boolean isBetweenInclusive(long value, long low, long high)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="163.0208" y1="747.8546" y2="747.8546"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="166.1458" y="751.6642">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="216.1458" x2="370.8333" y1="747.8546" y2="747.8546"/><ellipse cx="18.75" cy="828.42" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="205.2083" x="30.2083" y="835.3312">String toHex(long value, long length)</text><ellipse cx="18.75" cy="848.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="30.2083" y="855.0761">String toHex(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="151.0417" y1="811.2559" y2="811.2559"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="154.1667" y="815.0655">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="228.125" x2="370.8333" y1="811.2559" y2="811.2559"/><ellipse cx="18.75" cy="891.8213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="30.2083" y="898.7325">long parseFast(String)</text><ellipse cx="18.75" cy="911.5662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="30.2083" y="918.4774">long parseFast(String, long invalid)</text><ellipse cx="18.75" cy="931.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="30.2083" y="938.2222">long parseFastNaturalNumber(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="160.9375" y1="874.6572" y2="874.6572"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="164.0625" y="878.4668">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="218.2292" x2="370.8333" y1="874.6572" y2="874.6572"/><ellipse cx="18.75" cy="974.9674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="311.4583" x="30.2083" y="981.8787">boolean searchWords(long value, int bits, int searchFor)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="163.5417" y1="957.8033" y2="957.8033"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="166.6667" y="961.613">(search)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="215.625" x2="370.8333" y1="957.8033" y2="957.8033"/><!--MD5=[f26d569fc4c9c569a7515bb1ee791b09]
class Primes--><rect codeLine="74" fill="#282828" height="174.8576" id="Primes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="408.3333" y="703.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="408.3333" y="703.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="408.3333" y="726.7578"/><rect codeLine="74" fill="none" height="174.8576" id="Primes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="408.3333" y="703.7028"/><ellipse cx="493.75" cy="719.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M495.6604,723.822 Q495.2332,724.0417 494.7632,724.1516 Q494.2932,724.2615 493.7744,724.2615 Q491.9312,724.2615 490.9607,723.0469 Q489.9902,721.8323 489.9902,719.5374 Q489.9902,717.2363 490.9607,716.0217 Q491.9312,714.8071 493.7744,714.8071 Q494.2932,714.8071 494.7693,714.917 Q495.2454,715.0269 495.6604,715.2466 L495.6604,717.2485 Q495.1965,716.8213 494.7601,716.6229 Q494.3237,716.4246 493.8599,716.4246 Q492.8711,716.4246 492.3676,717.2089 Q491.864,717.9932 491.864,719.5374 Q491.864,721.0754 492.3676,721.8597 Q492.8711,722.644 493.8599,722.644 Q494.3237,722.644 494.7601,722.4457 Q495.1965,722.2473 495.6604,721.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="43.75" x="516.6667" y="724.1211">Primes</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="409.375" x2="636.4583" y1="735.0911" y2="735.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="409.375" x2="636.4583" y1="743.4245" y2="743.4245"/><ellipse cx="419.7917" cy="754.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="431.25" y="761.794">void main(String[] args)</text><ellipse cx="419.7917" cy="774.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="431.25" y="781.5389">int primePowerOfTwo(int value)</text><ellipse cx="419.7917" cy="818.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="431.25" y="825.1953">boolean isPrime(long)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="409.375" x2="496.3542" y1="801.12" y2="801.12"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="499.4792" y="804.9296">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="549.4792" x2="636.4583" y1="801.12" y2="801.12"/><ellipse cx="419.7917" cy="861.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="431.25" y="868.8517">long primeAllocationSize(long size)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="409.375" x2="488.5417" y1="844.7764" y2="844.7764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="491.6667" y="848.586">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="557.2917" x2="636.4583" y1="844.7764" y2="844.7764"/><!--MD5=[b95bace02b6cad134359ed97acbe2d13]
class Primitives--><rect codeLine="85" fill="#282828" height="103.123" id="Primitives" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="673.9583" y="739.6403"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="673.9583" y="739.6403"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="673.9583" y="762.6953"/><rect codeLine="85" fill="none" height="103.123" id="Primitives" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="673.9583" y="739.6403"/><ellipse cx="748.9583" cy="755.3345" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M750.8687,759.7595 Q750.4415,759.9792 749.9715,760.0891 Q749.5015,760.199 748.9827,760.199 Q747.1395,760.199 746.169,758.9844 Q745.1986,757.7698 745.1986,755.4749 Q745.1986,753.1738 746.169,751.9592 Q747.1395,750.7446 748.9827,750.7446 Q749.5015,750.7446 749.9776,750.8545 Q750.4537,750.9644 750.8687,751.1841 L750.8687,753.186 Q750.4049,752.7588 749.9685,752.5604 Q749.5321,752.3621 749.0682,752.3621 Q748.0794,752.3621 747.5759,753.1464 Q747.0723,753.9307 747.0723,755.4749 Q747.0723,757.0129 747.5759,757.7972 Q748.0794,758.5815 749.0682,758.5815 Q749.5321,758.5815 749.9685,758.3832 Q750.4049,758.1848 750.8687,757.7576 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="771.875" y="760.0586">Primitives</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="675" x2="902.0833" y1="771.0286" y2="771.0286"/><ellipse cx="685.4167" cy="806.3985" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="696.875" y="813.3097">boolean isPrimitive(Class&lt;?&gt; type)</text><ellipse cx="685.4167" cy="826.1434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="696.875" y="833.0546">boolean isPrimitiveWrapper(Object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="675" x2="761.9792" y1="789.2344" y2="789.2344"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="765.1042" y="793.044">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="815.1042" x2="902.0833" y1="789.2344" y2="789.2344"/><!--MD5=[99a15a5dbaa0338b237508ab98ed5e35]
link Booleans to Doubles--><!--MD5=[5c956d4256379273b913c1fac4a8c4eb]
link Doubles to Ints--><!--MD5=[43c8c5f8279e3757d4d72aadbd20c363]
link Booleans to Longs--><!--MD5=[daa99d55546aa792bbc280fdc958e200]
link Longs to Primes--><!--MD5=[b0a3a5e0cff55b4f3513af39bcbf8f42]
link Primes to Primitives--><!--MD5=[2a8da4feaab21a25b3e05d8a4de9f94a]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.language.primitive"
    
    class Booleans
    {
        - -(checks)- -
        +boolean isFalse(String)
        +boolean isTrue(String)
    }
    
    class Doubles
    {
        - -
        +String format(double value, int decimals)
        +String format(double value)
        +double inRange(double value, double minimum, double maximum)
        +int rounded(double value)
        - -(checks)- -
        +boolean isBetweenInclusive(double value, double minimum, double maximum)
        - -(parsing)- -
        +double fastParse(String value, double denominator)
    }
    
    class Ints
    {
        - -
        +String commaSeparated(int value)
        +int digits(int value)
        +int forHighLow(int highWord, int lowWord)
        +int high(int value)
        +int inRange(int value, int minimum, int maximum)
        +int low(int value)
        +int powerOfTen(int power)
        +int quantized(int value, int quantum)
        +int rounded(double value)
        +int signExtend(int value, int bits)
        - -(checks)- -
        +boolean isBetweenExclusive(int value, int low, int high)
        +boolean isBetweenInclusive(int value, int low, int high)
        - -(conversion)- -
        +String toHex(int value, int length)
        +String toHex(int value)
        - -(parsing)- -
        +int parseFast(String text, int invalidValue)
        +int parseFast(String text)
        +int parseFastNaturalNumber(String)
        +int parseInt(Listener, String text)
    }
    
    class Longs
    {
        - -
        +String commaSeparated(long value)
        +long forHighLow(int high, int low)
        +int high(long value)
        +long inRange(long value, long min, long max)
        +int low(long value)
        - -(checks)- -
        +boolean isBetweenExclusive(long value, long low, long high)
        +boolean isBetweenInclusive(long value, long low, long high)
        - -(conversion)- -
        +String toHex(long value, long length)
        +String toHex(long value)
        - -(parsing)- -
        +long parseFast(String)
        +long parseFast(String, long invalid)
        +long parseFastNaturalNumber(String)
        - -(search)- -
        +boolean searchWords(long value, int bits, int searchFor)
    }
    
    class Primes
    {
        - -
        +void main(String[] args)
        +int primePowerOfTwo(int value)
        - -(checks)- -
        +boolean isPrime(long)
        - -(collection)- -
        +long primeAllocationSize(long size)
    }
    
    class Primitives
    {
        - -(checks)- -
        +boolean isPrimitive(Class<?> type)
        +boolean isPrimitiveWrapper(Object)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.language.primitive"
    
    class Booleans
    {
        - -(checks)- -
        +boolean isFalse(String)
        +boolean isTrue(String)
    }
    
    class Doubles
    {
        - -
        +String format(double value, int decimals)
        +String format(double value)
        +double inRange(double value, double minimum, double maximum)
        +int rounded(double value)
        - -(checks)- -
        +boolean isBetweenInclusive(double value, double minimum, double maximum)
        - -(parsing)- -
        +double fastParse(String value, double denominator)
    }
    
    class Ints
    {
        - -
        +String commaSeparated(int value)
        +int digits(int value)
        +int forHighLow(int highWord, int lowWord)
        +int high(int value)
        +int inRange(int value, int minimum, int maximum)
        +int low(int value)
        +int powerOfTen(int power)
        +int quantized(int value, int quantum)
        +int rounded(double value)
        +int signExtend(int value, int bits)
        - -(checks)- -
        +boolean isBetweenExclusive(int value, int low, int high)
        +boolean isBetweenInclusive(int value, int low, int high)
        - -(conversion)- -
        +String toHex(int value, int length)
        +String toHex(int value)
        - -(parsing)- -
        +int parseFast(String text, int invalidValue)
        +int parseFast(String text)
        +int parseFastNaturalNumber(String)
        +int parseInt(Listener, String text)
    }
    
    class Longs
    {
        - -
        +String commaSeparated(long value)
        +long forHighLow(int high, int low)
        +int high(long value)
        +long inRange(long value, long min, long max)
        +int low(long value)
        - -(checks)- -
        +boolean isBetweenExclusive(long value, long low, long high)
        +boolean isBetweenInclusive(long value, long low, long high)
        - -(conversion)- -
        +String toHex(long value, long length)
        +String toHex(long value)
        - -(parsing)- -
        +long parseFast(String)
        +long parseFast(String, long invalid)
        +long parseFastNaturalNumber(String)
        - -(search)- -
        +boolean searchWords(long value, int bits, int searchFor)
    }
    
    class Primes
    {
        - -
        +void main(String[] args)
        +int primePowerOfTwo(int value)
        - -(checks)- -
        +boolean isPrime(long)
        - -(collection)- -
        +long primeAllocationSize(long size)
    }
    
    class Primitives
    {
        - -(checks)- -
        +boolean isPrimitive(Class<?> type)
        +boolean isPrimitiveWrapper(Object)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>