@startuml

    !include lexakai.theme
    
    title "Primitive Maps"
    
    interface PrimitiveScalarMap
    interface HashingStrategy
    
    HashingStrategy <|-- DefaultHashingStrategy
    class DefaultHashingStrategy
    {
        --
        +DefaultHashingStrategy of(Estimate capacity, Percent maximumOccupancy)
        +DefaultHashingStrategy of(Estimate capacity)
        --(math)--
        +Percent defaultMaximumOccupancy()
    }
    
    interface HashingStrategy
    {
        --(collection)--
        +Count rehashThreshold()
        --(functional)--
        +Estimate recommendedSize()
        +HashingStrategy withCapacity(Estimate size)
        +HashingStrategy withIncreasedCapacity()
        --(math)--
        +Percent maximumOccupancy()
    }
    
    PrimitiveMap <|-- IntToByteMap
    PrimitiveScalarMap <|-- IntToByteMap
    class IntToByteMap
    {
        --(constructors)--
        +IntToByteMap(String)
        --
        +void entries(EntryVisitor)
        +byte get(int key)
        --(collection)--
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, byte value)
        +boolean remove(int key)
        +ByteIterator values()
        --(math)--
        +void increment(int key)
    }
    
    PrimitiveMap <|-- IntToIntMap
    PrimitiveScalarMap <|-- IntToIntMap
    class IntToIntMap
    {
        --(constructors)--
        +IntToIntMap(String)
        --
        +void entries(EntryVisitor)
        +int get(int key)
        --(collection)--
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
        --(math)--
        +void increment(int key)
    }
    
    PrimitiveMap <|-- IntToLongMap
    PrimitiveScalarMap <|-- IntToLongMap
    class IntToLongMap
    {
        --(constructors)--
        +IntToLongMap(String)
        --
        +void entries(EntryVisitor)
        +long get(int key)
        --(collection)--
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, long value)
        +boolean remove(int key)
        +LongIterator values()
        --(math)--
        +void increment(int key)
    }
    
    PrimitiveMap <|-- LongToByteMap
    PrimitiveScalarMap <|-- LongToByteMap
    class LongToByteMap
    {
        --(constructors)--
        +LongToByteMap(String)
        --
        +void entries(EntryVisitor)
        +byte get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
        --(math)--
        +void increment(long key)
    }
    
    PrimitiveMap <|-- LongToIntMap
    PrimitiveScalarMap <|-- LongToIntMap
    class LongToIntMap
    {
        --(constructors)--
        +LongToIntMap(String)
        --
        +void entries(EntryVisitor)
        +int get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
        --(math)--
        +void increment(long key)
    }
    
    PrimitiveMap <|-- LongToLongMap
    PrimitiveScalarMap <|-- LongToLongMap
    class LongToLongMap
    {
        --(constructors)--
        +LongToLongMap(String)
        --
        +void entries(EntryVisitor)
        +long get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
        --(math)--
        +void increment(long key)
    }
    
    PrimitiveMap <|-- LongToObjectMap
    class LongToObjectMap<T>
    {
        --(constructors)--
        +LongToObjectMap(String)
        --
        +T get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, T value)
        +void remove(long key)
        +Iterator<T> values()
    }
    
    PrimitiveCollection <|-- PrimitiveMap
    abstract class PrimitiveMap
    {
        --(constructors)--
        #PrimitiveMap()
        #PrimitiveMap(String)
        --
        #void compare(PrimitiveMap that)
        #HashingStrategy hashingStrategy()
        #int slots()
        --(checks)--
        #boolean isTombstone(int key)
        #boolean isTombstone(Object key)
        #boolean isTombstone(long key)
        --(collection)--
        +boolean contains(long[] values, long value)
        +boolean contains(T[] values, T value)
        +boolean contains(int[] values, int value)
        +boolean isEmpty(long key)
        +boolean isEmpty(byte key)
        +boolean isEmpty(int key)
        +boolean isEmpty(String key)
        #int hash(long value)
        #int hash(int value)
        #PrimitiveMap hashingStrategy(HashingStrategy)
        #void increaseSize()
        #long index(long hash)
        #int index(int index)
        #int index(long[] values, long value)
        #int index(int[] values, int value)
        #int index(Object[] values, Object value)
        #PrimitiveMap newMap()
        #IntIterator nonEmptyIndexes(byte[] values)
        #IntIterator nonEmptyIndexes(long[] values)
        #IntIterator nonEmptyIndexes(int[] values)
        #IntIterator nonEmptyIndexes(T[] values)
        #LongIterator nonEmptyValues(long[] values)
        #IntIterator nonEmptyValues(int[] values)
        #ByteIterator nonEmptyValues(byte[] values)
        #Iterator<T> nonEmptyValues(T[] values)
        --(filesystem)--
        #void copy(PrimitiveMap that)
        #void copyEntries(PrimitiveMap that, ProgressReporter)
    }
    
    interface PrimitiveScalarMap
    {
        --
        +long getScalar(long key)
        --(checks)--
        +boolean isScalarValueNull(long value)
        --(collection)--
        +boolean isScalarKeyNull(long key)
        +void putScalar(long key, Quantizable value)
        +void putScalar(long key, long value)
    }
    
    SplitPrimitiveMap <|-- SplitIntToIntMap
    PrimitiveScalarMap <|-- SplitIntToIntMap
    class SplitIntToIntMap
    {
        --(constructors)--
        +SplitIntToIntMap(String)
        --
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        --(collection)--
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|-- SplitLongToByteMap
    PrimitiveScalarMap <|-- SplitLongToByteMap
    class SplitLongToByteMap
    {
        --(constructors)--
        +SplitLongToByteMap(String)
        --
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|-- SplitLongToIntMap
    PrimitiveScalarMap <|-- SplitLongToIntMap
    class SplitLongToIntMap
    {
        --(constructors)--
        +SplitLongToIntMap(String)
        --
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|-- SplitLongToLongMap
    PrimitiveScalarMap <|-- SplitLongToLongMap
    class SplitLongToLongMap
    {
        --(constructors)--
        +SplitLongToLongMap(String)
        --
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        --(collection)--
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
    PrimitiveMap <|-- SplitPrimitiveMap
    abstract class SplitPrimitiveMap
    {
        --(constructors)--
        #SplitPrimitiveMap()
        #SplitPrimitiveMap(String)
    }
    
    PrimitiveMap <|-- StringToIntMap
    class StringToIntMap
    {
        --(constructors)--
        +StringToIntMap(String)
        --
        +int get(String key)
        --(collection)--
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +boolean put(String key, int value)
        +boolean remove(String key)
        +IntIterator values()
    }
    
    PrimitiveMap <|-- StringToObjectMap
    class StringToObjectMap<T>
    {
        --(constructors)--
        +StringToObjectMap(String)
        --
        +T get(String key)
        --(collection)--
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +void put(String key, T value)
        +boolean remove(String key)
        +Iterator<T> values()
    }
    
@enduml

