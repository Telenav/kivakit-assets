@startuml

    !include lexakai.theme
    
    title "Primitive Bit I/O"
    
    abstract BaseBitWriter
    abstract BaseBitReader
    
    interface BitWriter
    interface BitReader
    
    BitReader <|-- BaseBitReader
    abstract class BaseBitReader
    {
        --(constructors)--
        #BaseBitReader()
        #BaseBitReader(ByteList, Count)
        --
        #int mask()
        --(primitive)--
        #long byteCursor()
        #void byteCursor(long position)
        #boolean hasNextByte()
        #byte nextByte()
    }
    
    BitWriter <|-- BaseBitWriter
    abstract class BaseBitWriter
    {
        --(io)--
        #void onFlush(byte value)
        --(write)--
        #void onWrite(byte value)
    }
    
    BaseBitReader <|-- BitInput
    class BitInput
    {
        --(constructors)--
        +BitInput(InputStream)
    }
    
    BaseBitWriter <|-- BitOutput
    class BitOutput
    {
        --(constructors)--
        +BitOutput(OutputStream)
    }
    
    interface AutoCloseable
    AutoCloseable <|-- BitReader
    interface BitReader
    {
        --(collection)--
        +long cursor()
        +void cursor(long position)
        +int size()
        --(io)--
        +void onClose()
        --(iteration)--
        +boolean hasNext()
        --(read)--
        +int read(int bits)
        +boolean readBit()
        +int readFlexibleInt(int smallBitCount, int bigBitCount)
        +long readLong(int bits)
        +String readString()
    }
    
    interface AutoCloseable
    AutoCloseable <|-- BitWriter
    interface BitWriter
    {
        --(collection)--
        +long cursor()
        --(io)--
        +void flush()
        +void onClose()
        --(write)--
        +void write(long value, int bits)
        +boolean writeBit(boolean bit)
        +void writeByte(byte value)
        +void writeFlexibleInt(int smallBitCount, int bigBitCount, int value)
        +void writeInt(int value)
        +void writeString(String value)
    }
    
    BitInput <|-- VariableReadSizeBitInput
    class VariableReadSizeBitInput
    {
        --(constructors)--
        +VariableReadSizeBitInput(InputStream)
        --(read)--
        +long readSigned()
        +long readUnsigned()
    }
    
@enduml

