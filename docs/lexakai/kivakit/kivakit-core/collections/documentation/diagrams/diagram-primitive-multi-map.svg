<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="681.25px" preserveAspectRatio="none" style="width:3180px;height:681px;background:#333333;" version="1.1" viewBox="0 0 3180 681" width="3180.2083px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="232.2917" x="1466.6667" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="209.375" x="1478.125" y="30.5583">Primitive Multi-Maps</text><!--MD5=[4b74817909f2df5a21a89f40177dcefd]
class PrimitiveScalarMultiMap--><rect codeLine="185" fill="#282828" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="407.2917" x="1103.125" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="407.2917" x="1103.125" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="407.2917" x="1103.125" y="187.1745"/><rect codeLine="185" fill="none" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="407.2917" x="1103.125" y="164.1195"/><ellipse cx="1221.875" cy="179.8136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1218.7581,176.9755 L1218.7581,175.3886 L1224.1842,175.3886 L1224.1842,176.9755 L1222.3714,176.9755 L1222.3714,182.9142 L1224.1842,182.9142 L1224.1842,184.5011 L1218.7581,184.5011 L1218.7581,182.9142 L1220.5709,182.9142 L1220.5709,176.9755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="1244.7917" y="184.5378">PrimitiveScalarMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1104.1667" x2="1509.375" y1="195.5078" y2="195.5078"/><ellipse cx="1114.5833" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="1126.0417" y="237.7889">PrimitiveList getPrimitiveList(long key)</text><ellipse cx="1114.5833" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="1126.0417" y="257.5338">PrimitiveList getSignedPrimitiveList(long key)</text><ellipse cx="1114.5833" cy="270.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1126.0417" y="277.2786">boolean isScalarKeyNull(long key)</text><ellipse cx="1114.5833" cy="290.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="375" x="1126.0417" y="297.0235">void putPrimitiveList(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1114.5833" cy="309.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="1126.0417" y="316.7684">void putPrimitiveList(long key, PrimitiveList values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1104.1667" x2="1272.3958" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1275.5208" y="217.5232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1341.1458" x2="1509.375" y1="213.7136" y2="213.7136"/><!--MD5=[4a7d52b0cad6b45b436e1f956697a54c]
class IntMultiMap--><rect codeLine="12" fill="#282828" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="204.6875" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="204.6875" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="204.6875" y="206.9661"/><rect codeLine="12" fill="none" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="204.6875" y="183.9111"/><ellipse cx="335.4167" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M332.2998,196.7672 L332.2998,195.1803 L337.7258,195.1803 L337.7258,196.7672 L335.9131,196.7672 L335.9131,202.7059 L337.7258,202.7059 L337.7258,204.2928 L332.2998,204.2928 L332.2998,202.7059 L334.1125,202.7059 L334.1125,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="358.3333" y="204.3294">IntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="205.7292" x2="557.8125" y1="215.2995" y2="215.2995"/><ellipse cx="216.1458" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="227.6042" y="257.5806">IntArray get(long key)</text><ellipse cx="216.1458" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="227.6042" y="277.3254">void putAll(long key, IntArray values)</text><ellipse cx="216.1458" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="227.6042" y="297.0703">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="205.7292" x2="347.3958" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="350.5208" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="416.1458" x2="557.8125" y1="233.5052" y2="233.5052"/><!--MD5=[48dd5ec133c92f0a147a857e74e30812]
class LongMultiMap--><rect codeLine="89" fill="#282828" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2247.3958" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2247.3958" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2247.3958" y="206.9661"/><rect codeLine="89" fill="none" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2247.3958" y="183.9111"/><ellipse cx="2370.8333" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2367.7165,196.7672 L2367.7165,195.1803 L2373.1425,195.1803 L2373.1425,196.7672 L2371.3298,196.7672 L2371.3298,202.7059 L2373.1425,202.7059 L2373.1425,204.2928 L2367.7165,204.2928 L2367.7165,202.7059 L2369.5292,202.7059 L2369.5292,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="2393.75" y="204.3294">LongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2248.4375" x2="2600.5208" y1="215.2995" y2="215.2995"/><ellipse cx="2258.8542" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="2270.3125" y="257.5806">LongArray get(long key)</text><ellipse cx="2258.8542" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="2270.3125" y="277.3254">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="2258.8542" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="2270.3125" y="297.0703">void putAll(long key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2248.4375" x2="2390.1042" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2393.2292" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2458.8542" x2="2600.5208" y1="233.5052" y2="233.5052"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="87" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2026.0417" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2026.0417" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2026.0417" y="76.7578"/><rect codeLine="87" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2026.0417" y="53.7028"/><ellipse cx="2040.625" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2037.5081,66.5588 L2037.5081,64.9719 L2042.9342,64.9719 L2042.9342,66.5588 L2041.1214,66.5588 L2041.1214,72.4976 L2042.9342,72.4976 L2042.9342,74.0845 L2037.5081,74.0845 L2037.5081,72.4976 L2039.3209,72.4976 L2039.3209,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="2057.2917" y="74.1211">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2027.0833" x2="2096.875" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2027.0833" x2="2096.875" y1="93.4245" y2="93.4245"/><!--MD5=[a5cc76553a2d1b24632df0d2f7f0bb23]
class PrimitiveMultiMap--><rect codeLine="178" fill="#282828" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1546.875" y="193.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1546.875" y="193.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1546.875" y="216.862"/><rect codeLine="178" fill="none" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1546.875" y="193.807"/><ellipse cx="1568.9583" cy="209.5011" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1569.0723,206.2032 L1568.2239,209.9325 L1569.9268,209.9325 Z M1567.9736,204.5553 L1570.177,204.5553 L1572.6367,213.6678 L1570.8362,213.6678 L1570.2747,211.4156 L1567.8638,211.4156 L1567.3145,213.6678 L1565.5139,213.6678 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="117.7083" x="1587.2917" y="214.2253">PrimitiveMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1547.9167" x2="1717.7083" y1="225.1953" y2="225.1953"/><polygon fill="#FFFF44" points="1558.3333,255.3569,1562.5,259.5235,1558.3333,263.6902,1554.1667,259.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1569.7917" y="267.4764">PrimitiveMultiMap()</text><polygon fill="#FFFF44" points="1558.3333,275.1017,1562.5,279.2684,1558.3333,283.4351,1554.1667,279.2684" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1569.7917" y="287.2213">PrimitiveMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1547.9167" x2="1589.0625" y1="243.4011" y2="243.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1592.1875" y="247.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1676.5625" x2="1717.7083" y1="243.4011" y2="243.4011"/><!--MD5=[7995b2c959e8c01f457074ea15d83b1b]
class IntToByteFixedMultiMap--><rect codeLine="22" fill="#282828" height="245.5037" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="526.5625" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="526.5625" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="526.5625" y="431.9661"/><rect codeLine="22" fill="none" height="245.5037" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="526.5625" y="408.9111"/><ellipse cx="617.7083" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M619.6187,429.0304 Q619.1915,429.2501 618.7215,429.3599 Q618.2515,429.4698 617.7327,429.4698 Q615.8895,429.4698 614.919,428.2552 Q613.9486,427.0406 613.9486,424.7457 Q613.9486,422.4447 614.919,421.2301 Q615.8895,420.0155 617.7327,420.0155 Q618.2515,420.0155 618.7276,420.1253 Q619.2037,420.2352 619.6187,420.4549 L619.6187,422.4569 Q619.1549,422.0296 618.7185,421.8313 Q618.2821,421.6329 617.8182,421.6329 Q616.8294,421.6329 616.3259,422.4172 Q615.8223,423.2015 615.8223,424.7457 Q615.8223,426.2838 616.3259,427.0681 Q616.8294,427.8524 617.8182,427.8524 Q618.2821,427.8524 618.7185,427.654 Q619.1549,427.4556 619.6187,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="157.2917" x="640.625" y="429.3294">IntToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="527.6042" x2="879.6875" y1="440.2995" y2="440.2995"/><polygon fill="#FFFF44" points="538.0208,470.461,542.1875,474.6277,538.0208,478.7944,533.8542,474.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="549.4792" y="482.5806">IntToByteFixedMultiMap()</text><ellipse cx="538.0208" cy="495.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="549.4792" y="502.3254">IntToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="527.6042" x2="659.8958" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="663.0208" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="747.3958" x2="879.6875" y1="458.5052" y2="458.5052"/><ellipse cx="538.0208" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="549.4792" y="545.9819">boolean containsKey(int key)</text><ellipse cx="538.0208" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="549.4792" y="565.7267">ByteArray get(int key)</text><ellipse cx="538.0208" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="549.4792" y="585.4716">IntIterator keys()</text><ellipse cx="538.0208" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="549.4792" y="605.2165">void putAll(int key, ByteArray values)</text><ellipse cx="538.0208" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="549.4792" y="624.9613">void putAll(int key, byte[] values)</text><ellipse cx="538.0208" cy="637.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="549.4792" y="644.7062">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="527.6042" x2="669.2708" y1="521.9065" y2="521.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="672.3958" y="525.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="738.0208" x2="879.6875" y1="521.9065" y2="521.9065"/><!--MD5=[0c99b87e1465ab30b0b6d2d6a13d9fa0]
class IntToIntFixedMultiMap--><rect codeLine="39" fill="#282828" height="225.7589" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="9.375" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="9.375" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="9.375" y="441.862"/><rect codeLine="39" fill="none" height="225.7589" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="9.375" y="418.807"/><ellipse cx="43.6458" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M45.5562,438.9262 Q45.129,439.1459 44.659,439.2558 Q44.189,439.3656 43.6702,439.3656 Q41.827,439.3656 40.8565,438.151 Q39.8861,436.9364 39.8861,434.6415 Q39.8861,432.3405 40.8565,431.1259 Q41.827,429.9113 43.6702,429.9113 Q44.189,429.9113 44.6651,430.0212 Q45.1412,430.131 45.5562,430.3507 L45.5562,432.3527 Q45.0924,431.9255 44.656,431.7271 Q44.2196,431.5287 43.7557,431.5287 Q42.7669,431.5287 42.2634,432.313 Q41.7598,433.0973 41.7598,434.6415 Q41.7598,436.1796 42.2634,436.9639 Q42.7669,437.7482 43.7557,437.7482 Q44.2196,437.7482 44.656,437.5498 Q45.0924,437.3515 45.5562,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="146.875" x="64.6875" y="439.2253">IntToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="236.4583" y1="450.1953" y2="450.1953"/><polygon fill="#FFFF44" points="20.8333,480.3569,25,484.5235,20.8333,488.6902,16.6667,484.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="32.2917" y="492.4764">IntToIntFixedMultiMap()</text><ellipse cx="20.8333" cy="505.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="32.2917" y="512.2213">IntToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="79.6875" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="82.8125" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="167.1875" x2="236.4583" y1="468.4011" y2="468.4011"/><ellipse cx="20.8333" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="32.2917" y="555.8777">boolean containsKey(int key)</text><ellipse cx="20.8333" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="32.2917" y="575.6226">IntArray get(int key)</text><ellipse cx="20.8333" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="32.2917" y="595.3674">IntIterator keys()</text><ellipse cx="20.8333" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="32.2917" y="615.1123">void putAll(int key, IntArray values)</text><ellipse cx="20.8333" cy="627.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="32.2917" y="634.8572">void putAll(int key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="89.0625" y1="531.8024" y2="531.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="92.1875" y="535.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="157.8125" x2="236.4583" y1="531.8024" y2="531.8024"/><!--MD5=[3f4bc82daf44942da3f53ac3b6d5365d]
class IntToLongFixedMultiMap--><rect codeLine="55" fill="#282828" height="225.7589" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2089.0625" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2089.0625" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2089.0625" y="441.862"/><rect codeLine="55" fill="none" height="225.7589" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2089.0625" y="418.807"/><ellipse cx="2122.8646" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2124.775,438.9262 Q2124.3477,439.1459 2123.8778,439.2558 Q2123.4078,439.3656 2122.889,439.3656 Q2121.0457,439.3656 2120.0753,438.151 Q2119.1048,436.9364 2119.1048,434.6415 Q2119.1048,432.3405 2120.0753,431.1259 Q2121.0457,429.9113 2122.889,429.9113 Q2123.4078,429.9113 2123.8839,430.0212 Q2124.3599,430.131 2124.775,430.3507 L2124.775,432.3527 Q2124.3111,431.9255 2123.8747,431.7271 Q2123.4383,431.5287 2122.9744,431.5287 Q2121.9857,431.5287 2121.4821,432.313 Q2120.9786,433.0973 2120.9786,434.6415 Q2120.9786,436.1796 2121.4821,436.9639 Q2121.9857,437.7482 2122.9744,437.7482 Q2123.4383,437.7482 2123.8747,437.5498 Q2124.3111,437.3515 2124.775,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="2143.8021" y="439.2253">IntToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2090.1042" x2="2329.6875" y1="450.1953" y2="450.1953"/><polygon fill="#FFFF44" points="2100.5208,480.3569,2104.6875,484.5235,2100.5208,488.6902,2096.3542,484.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="2111.9792" y="492.4764">IntToLongFixedMultiMap()</text><ellipse cx="2100.5208" cy="505.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2111.9792" y="512.2213">IntToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2090.1042" x2="2166.1458" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2169.2708" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2253.6458" x2="2329.6875" y1="468.4011" y2="468.4011"/><ellipse cx="2100.5208" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2111.9792" y="555.8777">boolean containsKey(int key)</text><ellipse cx="2100.5208" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2111.9792" y="575.6226">LongArray get(int key)</text><ellipse cx="2100.5208" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2111.9792" y="595.3674">IntIterator keys()</text><ellipse cx="2100.5208" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2111.9792" y="615.1123">void putAll(int key, long[] values)</text><ellipse cx="2100.5208" cy="627.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2111.9792" y="634.8572">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2090.1042" x2="2175.5208" y1="531.8024" y2="531.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2178.6458" y="535.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2244.2708" x2="2329.6875" y1="531.8024" y2="531.8024"/><!--MD5=[1c02724945c6df932588753ceecaf5f0]
class IntToPackedArrayFixedMultiMap--><rect codeLine="71" fill="#282828" height="284.9935" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2367.7083" y="389.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2367.7083" y="389.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2367.7083" y="412.1745"/><rect codeLine="71" fill="none" height="284.9935" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2367.7083" y="389.1195"/><ellipse cx="2527.6042" cy="404.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2529.5146,409.2387 Q2529.0873,409.4584 2528.6174,409.5683 Q2528.1474,409.6781 2527.6286,409.6781 Q2525.7853,409.6781 2524.8149,408.4635 Q2523.8444,407.2489 2523.8444,404.954 Q2523.8444,402.653 2524.8149,401.4384 Q2525.7853,400.2238 2527.6286,400.2238 Q2528.1474,400.2238 2528.6235,400.3337 Q2529.0995,400.4435 2529.5146,400.6632 L2529.5146,402.6652 Q2529.0507,402.238 2528.6143,402.0396 Q2528.1779,401.8412 2527.714,401.8412 Q2526.7253,401.8412 2526.2217,402.6255 Q2525.7182,403.4098 2525.7182,404.954 Q2525.7182,406.4921 2526.2217,407.2764 Q2526.7253,408.0607 2527.714,408.0607 Q2528.1779,408.0607 2528.6143,407.8623 Q2529.0507,407.664 2529.5146,407.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="208.3333" x="2550.5208" y="409.5378">IntToPackedArrayFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2368.75" x2="2909.375" y1="420.5078" y2="420.5078"/><polygon fill="#FFFF44" points="2379.1667,450.6694,2383.3333,454.836,2379.1667,459.0027,2375,454.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="2390.625" y="462.7889">IntToPackedArrayFixedMultiMap()</text><ellipse cx="2379.1667" cy="475.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="2390.625" y="482.5338">IntToPackedArrayFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2368.75" x2="2595.3125" y1="438.7136" y2="438.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2598.4375" y="442.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2682.8125" x2="2909.375" y1="438.7136" y2="438.7136"/><ellipse cx="2379.1667" cy="519.279" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="510.4167" x="2390.625" y="526.1902">IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)</text><ellipse cx="2379.1667" cy="539.0238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2390.625" y="545.9351">boolean containsKey(int key)</text><ellipse cx="2379.1667" cy="558.7687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2390.625" y="565.6799">LongArray get(int key)</text><ellipse cx="2379.1667" cy="578.5136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2390.625" y="585.4248">LongArray getSigned(int key)</text><ellipse cx="2379.1667" cy="598.2585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2390.625" y="605.1697">IntIterator keys()</text><ellipse cx="2379.1667" cy="618.0033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="2390.625" y="624.9146">IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)</text><ellipse cx="2379.1667" cy="637.7482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2390.625" y="644.6594">void putAll(int key, long[] values)</text><ellipse cx="2379.1667" cy="657.4931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2390.625" y="664.4043">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2368.75" x2="2604.6875" y1="502.1149" y2="502.1149"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2607.8125" y="505.9245">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2673.4375" x2="2909.375" y1="502.1149" y2="502.1149"/><!--MD5=[473ca2dc791c307a8457cba60dc406cc]
class LongToByteFixedMultiMap--><rect codeLine="99" fill="#282828" height="245.5037" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="917.1875" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="917.1875" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="917.1875" y="431.9661"/><rect codeLine="99" fill="none" height="245.5037" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="917.1875" y="408.9111"/><ellipse cx="1001.0417" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1002.9521,429.0304 Q1002.5248,429.2501 1002.0549,429.3599 Q1001.5849,429.4698 1001.0661,429.4698 Q999.2228,429.4698 998.2524,428.2552 Q997.2819,427.0406 997.2819,424.7457 Q997.2819,422.4447 998.2524,421.2301 Q999.2228,420.0155 1001.0661,420.0155 Q1001.5849,420.0155 1002.061,420.1253 Q1002.537,420.2352 1002.9521,420.4549 L1002.9521,422.4569 Q1002.4882,422.0296 1002.0518,421.8313 Q1001.6154,421.6329 1001.1515,421.6329 Q1000.1628,421.6329 999.6592,422.4172 Q999.1557,423.2015 999.1557,424.7457 Q999.1557,426.2838 999.6592,427.0681 Q1000.1628,427.8524 1001.1515,427.8524 Q1001.6154,427.8524 1002.0518,427.654 Q1002.4882,427.4556 1002.9521,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="171.875" x="1023.9583" y="429.3294">LongToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="918.2292" x2="1270.3125" y1="440.2995" y2="440.2995"/><polygon fill="#FFFF44" points="928.6458,470.461,932.8125,474.6277,928.6458,478.7944,924.4792,474.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="940.1042" y="482.5806">LongToByteFixedMultiMap()</text><ellipse cx="928.6458" cy="495.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="940.1042" y="502.3254">LongToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="918.2292" x2="1050.5208" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1053.6458" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1138.0208" x2="1270.3125" y1="458.5052" y2="458.5052"/><ellipse cx="928.6458" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="940.1042" y="545.9819">boolean containsKey(long key)</text><ellipse cx="928.6458" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="940.1042" y="565.7267">ByteArray get(long key)</text><ellipse cx="928.6458" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="940.1042" y="585.4716">LongIterator keys()</text><ellipse cx="928.6458" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="940.1042" y="605.2165">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="928.6458" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="940.1042" y="624.9613">void putAll(long key, byte[] values)</text><ellipse cx="928.6458" cy="637.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="940.1042" y="644.7062">void putAll(long key, ByteArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="918.2292" x2="1059.8958" y1="521.9065" y2="521.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1063.0208" y="525.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1128.6458" x2="1270.3125" y1="521.9065" y2="521.9065"/><!--MD5=[4920d5307010b5c3664756a173cd7c76]
class LongToIntFixedMultiMap--><rect codeLine="115" fill="#282828" height="245.5037" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1307.8125" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1307.8125" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1307.8125" y="431.9661"/><rect codeLine="115" fill="none" height="245.5037" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1307.8125" y="408.9111"/><ellipse cx="1396.875" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1398.7854,429.0304 Q1398.3582,429.2501 1397.8882,429.3599 Q1397.4182,429.4698 1396.8994,429.4698 Q1395.0562,429.4698 1394.0857,428.2552 Q1393.1152,427.0406 1393.1152,424.7457 Q1393.1152,422.4447 1394.0857,421.2301 Q1395.0562,420.0155 1396.8994,420.0155 Q1397.4182,420.0155 1397.8943,420.1253 Q1398.3704,420.2352 1398.7854,420.4549 L1398.7854,422.4569 Q1398.3215,422.0296 1397.8851,421.8313 Q1397.4487,421.6329 1396.9849,421.6329 Q1395.9961,421.6329 1395.4926,422.4172 Q1394.989,423.2015 1394.989,424.7457 Q1394.989,426.2838 1395.4926,427.0681 Q1395.9961,427.8524 1396.9849,427.8524 Q1397.4487,427.8524 1397.8851,427.654 Q1398.3215,427.4556 1398.7854,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="1419.7917" y="429.3294">LongToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1308.8542" x2="1660.9375" y1="440.2995" y2="440.2995"/><polygon fill="#FFFF44" points="1319.2708,470.461,1323.4375,474.6277,1319.2708,478.7944,1315.1042,474.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="1330.7292" y="482.5806">LongToIntFixedMultiMap()</text><ellipse cx="1319.2708" cy="495.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="1330.7292" y="502.3254">LongToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1308.8542" x2="1441.1458" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1444.2708" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1528.6458" x2="1660.9375" y1="458.5052" y2="458.5052"/><ellipse cx="1319.2708" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1330.7292" y="545.9819">boolean containsKey(long key)</text><ellipse cx="1319.2708" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1330.7292" y="565.7267">IntArray get(long key)</text><ellipse cx="1319.2708" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1330.7292" y="585.4716">LongIterator keys()</text><ellipse cx="1319.2708" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="1330.7292" y="605.2165">void putAll(long key, IntArray values)</text><ellipse cx="1319.2708" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1330.7292" y="624.9613">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1319.2708" cy="637.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="1330.7292" y="644.7062">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1308.8542" x2="1450.5208" y1="521.9065" y2="521.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1453.6458" y="525.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1519.2708" x2="1660.9375" y1="521.9065" y2="521.9065"/><!--MD5=[f812a7756caac12083cc8aed90c40b12]
class LongToIntMultiMap--><rect codeLine="132" fill="#282828" height="225.7589" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="273.9583" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="273.9583" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="273.9583" y="441.862"/><rect codeLine="132" fill="none" height="225.7589" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="273.9583" y="418.807"/><ellipse cx="311.5104" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M313.4208,438.9262 Q312.9936,439.1459 312.5236,439.2558 Q312.0536,439.3656 311.5348,439.3656 Q309.6916,439.3656 308.7211,438.151 Q307.7507,436.9364 307.7507,434.6415 Q307.7507,432.3405 308.7211,431.1259 Q309.6916,429.9113 311.5348,429.9113 Q312.0536,429.9113 312.5297,430.0212 Q313.0058,430.131 313.4208,430.3507 L313.4208,432.3527 Q312.9569,431.9255 312.5205,431.7271 Q312.0841,431.5287 311.6203,431.5287 Q310.6315,431.5287 310.128,432.313 Q309.6244,433.0973 309.6244,434.6415 Q309.6244,436.1796 310.128,436.9639 Q310.6315,437.7482 311.6203,437.7482 Q312.0841,437.7482 312.5205,437.5498 Q312.9569,437.3515 313.4208,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="127.0833" x="333.2813" y="439.2253">LongToIntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="275" x2="488.5417" y1="450.1953" y2="450.1953"/><polygon fill="#FFFF44" points="285.4167,480.3569,289.5833,484.5235,285.4167,488.6902,281.25,484.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="296.875" y="492.4764">LongToIntMultiMap()</text><ellipse cx="285.4167" cy="505.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="296.875" y="512.2213">LongToIntMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="338.0208" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="341.1458" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="425.5208" x2="488.5417" y1="468.4011" y2="468.4011"/><ellipse cx="285.4167" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="296.875" y="555.8777">void add(long key, int value)</text><ellipse cx="285.4167" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="296.875" y="575.6226">boolean containsKey(long key)</text><ellipse cx="285.4167" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="296.875" y="595.3674">IntIterator iterator(long key)</text><ellipse cx="285.4167" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="296.875" y="615.1123">LongIterator keys()</text><ellipse cx="285.4167" cy="627.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="296.875" y="634.8572">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="347.3958" y1="531.8024" y2="531.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="350.5208" y="535.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="416.1458" x2="488.5417" y1="531.8024" y2="531.8024"/><!--MD5=[3d6da11c5d686df0fe655d1f9f470d58]
class LongToLongFixedMultiMap--><rect codeLine="147" fill="#282828" height="245.5037" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1698.4375" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1698.4375" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1698.4375" y="431.9661"/><rect codeLine="147" fill="none" height="245.5037" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1698.4375" y="408.9111"/><ellipse cx="1780.2083" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1782.1187,429.0304 Q1781.6915,429.2501 1781.2215,429.3599 Q1780.7515,429.4698 1780.2327,429.4698 Q1778.3895,429.4698 1777.419,428.2552 Q1776.4486,427.0406 1776.4486,424.7457 Q1776.4486,422.4447 1777.419,421.2301 Q1778.3895,420.0155 1780.2327,420.0155 Q1780.7515,420.0155 1781.2276,420.1253 Q1781.7037,420.2352 1782.1187,420.4549 L1782.1187,422.4569 Q1781.6549,422.0296 1781.2185,421.8313 Q1780.7821,421.6329 1780.3182,421.6329 Q1779.3294,421.6329 1778.8259,422.4172 Q1778.3223,423.2015 1778.3223,424.7457 Q1778.3223,426.2838 1778.8259,427.0681 Q1779.3294,427.8524 1780.3182,427.8524 Q1780.7821,427.8524 1781.2185,427.654 Q1781.6549,427.4556 1782.1187,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="176.0417" x="1803.125" y="429.3294">LongToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1699.4792" x2="2051.5625" y1="440.2995" y2="440.2995"/><polygon fill="#FFFF44" points="1709.8958,470.461,1714.0625,474.6277,1709.8958,478.7944,1705.7292,474.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="1721.3542" y="482.5806">LongToLongFixedMultiMap()</text><ellipse cx="1709.8958" cy="495.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1721.3542" y="502.3254">LongToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1699.4792" x2="1831.7708" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1834.8958" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1919.2708" x2="2051.5625" y1="458.5052" y2="458.5052"/><ellipse cx="1709.8958" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1721.3542" y="545.9819">boolean containsKey(long key)</text><ellipse cx="1709.8958" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="1721.3542" y="565.7267">LongArray get(long key)</text><ellipse cx="1709.8958" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1721.3542" y="585.4716">LongIterator keys()</text><ellipse cx="1709.8958" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1721.3542" y="605.2165">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1709.8958" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="1721.3542" y="624.9613">void putAll(long key, LongArray values)</text><ellipse cx="1709.8958" cy="637.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="1721.3542" y="644.7062">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1699.4792" x2="1841.1458" y1="521.9065" y2="521.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1844.2708" y="525.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1909.8958" x2="2051.5625" y1="521.9065" y2="521.9065"/><!--MD5=[54cb38786c5431f48ed21fde5339d796]
class LongToLongMultiMap--><rect codeLine="164" fill="#282828" height="225.7589" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2946.875" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2946.875" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2946.875" y="441.862"/><rect codeLine="164" fill="none" height="225.7589" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2946.875" y="418.807"/><ellipse cx="2982.5521" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2984.4625,438.9262 Q2984.0352,439.1459 2983.5653,439.2558 Q2983.0953,439.3656 2982.5765,439.3656 Q2980.7332,439.3656 2979.7628,438.151 Q2978.7923,436.9364 2978.7923,434.6415 Q2978.7923,432.3405 2979.7628,431.1259 Q2980.7332,429.9113 2982.5765,429.9113 Q2983.0953,429.9113 2983.5714,430.0212 Q2984.0474,430.131 2984.4625,430.3507 L2984.4625,432.3527 Q2983.9986,431.9255 2983.5622,431.7271 Q2983.1258,431.5287 2982.6619,431.5287 Q2981.6732,431.5287 2981.1696,432.313 Q2980.6661,433.0973 2980.6661,434.6415 Q2980.6661,436.1796 2981.1696,436.9639 Q2981.6732,437.7482 2982.6619,437.7482 Q2983.1258,437.7482 2983.5622,437.5498 Q2983.9986,437.3515 2984.4625,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="141.6667" x="3003.9063" y="439.2253">LongToLongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2947.9167" x2="3171.875" y1="450.1953" y2="450.1953"/><polygon fill="#FFFF44" points="2958.3333,480.3569,2962.5,484.5235,2958.3333,488.6902,2954.1667,484.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="2969.7917" y="492.4764">LongToLongMultiMap()</text><ellipse cx="2958.3333" cy="505.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2969.7917" y="512.2213">LongToLongMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2947.9167" x2="3016.1458" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="3019.2708" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3103.6458" x2="3171.875" y1="468.4011" y2="468.4011"/><ellipse cx="2958.3333" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="2969.7917" y="555.8777">void add(long key, long value)</text><ellipse cx="2958.3333" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="2969.7917" y="575.6226">boolean containsKey(long key)</text><ellipse cx="2958.3333" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="2969.7917" y="595.3674">LongIterator iterator(long key)</text><ellipse cx="2958.3333" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="2969.7917" y="615.1123">LongIterator keys()</text><ellipse cx="2958.3333" cy="627.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="2969.7917" y="634.8572">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2947.9167" x2="3025.5208" y1="531.8024" y2="531.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3028.6458" y="535.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3094.2708" x2="3171.875" y1="531.8024" y2="531.8024"/><!--MD5=[7dc83dba370c73a9f85e44bd982e6617]
class PrimitiveMap--><rect fill="#282828" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1571.875" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1571.875" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1571.875" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1571.875" y="53.7028"/><ellipse cx="1586.4583" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1588.3687,73.822 Q1587.9415,74.0417 1587.4715,74.1516 Q1587.0015,74.2615 1586.4827,74.2615 Q1584.6395,74.2615 1583.669,73.0469 Q1582.6986,71.8323 1582.6986,69.5374 Q1582.6986,67.2363 1583.669,66.0217 Q1584.6395,64.8071 1586.4827,64.8071 Q1587.0015,64.8071 1587.4776,64.917 Q1587.9537,65.0269 1588.3687,65.2466 L1588.3687,67.2485 Q1587.9049,66.8213 1587.4685,66.6229 Q1587.0321,66.4246 1586.5682,66.4246 Q1585.5794,66.4246 1585.0759,67.2089 Q1584.5723,67.9932 1584.5723,69.5374 Q1584.5723,71.0754 1585.0759,71.8597 Q1585.5794,72.644 1586.5682,72.644 Q1587.0321,72.644 1587.4685,72.4457 Q1587.9049,72.2473 1588.3687,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="1603.125" y="74.1211">PrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1572.9167" x2="1692.7083" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1572.9167" x2="1692.7083" y1="93.4245" y2="93.4245"/><!--MD5=[1a7d64ae7d6032b4ac7c56e7ae9b010e]
reverse link Sized to IntMultiMap--><path codeLine="11" d="M2005.0313,83.1507 C1854.5938,95.0257 1434.1875,128.932 1084.8958,164.1195 C905.6563,182.1715 701.0833,205.859 558.9896,222.807 " fill="none" id="Sized-backto-IntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2004.6771,75.8695,2026.0104,81.5049,2005.8125,90.4007,2004.6771,75.8695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[770650b6aa5dc9033e07e0c3b0aa7834]
reverse link PrimitiveMultiMap to IntToByteFixedMultiMap--><path codeLine="20" d="M1561.6979,309.1299 C1551.1458,315.9945 1540,322.1195 1528.6458,326.6195 C1267,430.3695 1161.4792,288.9632 898.4375,389.1195 C884.2708,394.5153 870.2083,401.2236 856.5104,408.7653 " fill="none" id="PrimitiveMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1557.5833,303.109,1578.7917,297.0153,1566.0104,315.0049,1557.5833,303.109" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfe75cc93891e215cab385e322d933a5]
reverse link PrimitiveScalarMultiMap to IntToByteFixedMultiMap--><path codeLine="21" d="M1083.2083,311.3486 C1021.7813,332.7028 956.2083,358.859 898.4375,389.1195 C886.9583,395.1299 875.3958,401.7653 863.9479,408.7861 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1080.9271,304.432,1103,304.5882,1085.6458,318.2236,1080.9271,304.432" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[40e566c2ad01f56e72d1dfc432edcffd]
reverse link PrimitiveMultiMap to IntToIntFixedMultiMap--><path codeLine="36" d="M1562.4688,309.2965 C1551.7292,316.234 1540.3125,322.3278 1528.6458,326.6195 C1262.8646,424.432 512.6458,269.9424 255.7292,389.1195 C239.6979,396.557 224.6875,406.9007 210.9375,418.6403 " fill="none" id="PrimitiveMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1558.625,303.0778,1579.8438,296.9945,1567.0521,314.984,1558.625,303.0778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b74cfb8c1523d3d80b86cd2cbb5c95b3]
reverse link IntMultiMap to IntToIntFixedMultiMap--><path codeLine="37" d="M312.3125,322.8695 C285.6042,352.2757 254.5208,386.4945 225.3646,418.5778 " fill="none" id="IntMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="307.2604,317.5882,326.6667,307.0674,318.0625,327.3903,307.2604,317.5882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ca7d41135a34a5c01f19527588a0cc1f]
reverse link PrimitiveScalarMultiMap to IntToIntFixedMultiMap--><path codeLine="38" d="M1082.2813,268.7965 C795.5313,298.6299 327.5521,351.9736 255.7292,389.1195 C240.6354,396.9215 226.3438,407.1611 213.1354,418.5778 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1081.5625,261.5361,1103.0417,266.6403,1083.0625,276.0465,1081.5625,261.5361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3857c396d8df5291198e30b6d54db019]
reverse link PrimitiveMultiMap to IntToLongFixedMultiMap--><path codeLine="52" d="M1739.4896,266.2653 C1832.0313,286.859 1966.9896,325.1924 2070.3125,389.1195 C2084.1146,397.6611 2097.5521,407.8382 2110.2917,418.7653 " fill="none" id="PrimitiveMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1737.7917,273.359,1718.9583,261.8382,1740.8646,259.0986,1737.7917,273.359" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b208f5301ffb6aa1d0864148c88413a3]
reverse link LongMultiMap to IntToLongFixedMultiMap--><path codeLine="53" d="M2365.8646,324.0986 C2343.875,353.2236 2318.4375,386.9424 2294.5625,418.5778 " fill="none" id="LongMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2360.3438,319.307,2378.7083,307.0674,2371.9792,328.0882,2360.3438,319.307" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9e29c53af3e023a1cc72b386db0c1677]
reverse link PrimitiveScalarMultiMap to IntToLongFixedMultiMap--><path codeLine="54" d="M1531.0208,326.6611 C1769.4583,376.807 1858.4583,285.7757 2070.3125,389.1195 C2086.1354,396.8382 2101.1979,407.109 2115.1667,418.5986 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1529.2917,333.7445,1510.5521,322.0882,1532.4688,319.5153,1529.2917,333.7445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0a9b88a08c1b70fdd1382184510f9c97]
reverse link PrimitiveMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="68" d="M1739.8542,259.0257 C1881.7396,277.7132 2138.625,318.3799 2348.4375,389.1195 C2354.8229,391.2757 2361.2396,393.5361 2367.6875,395.8903 " fill="none" id="PrimitiveMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1738.6563,266.2236,1718.9271,256.3278,1740.5313,251.7653,1738.6563,266.2236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[739e3bc5dd5521c98c7ebbf11aa9bab5]
reverse link LongMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="69" d="M2482.9063,323.8486 C2498.1667,344.0674 2515.1042,366.5153 2532.0313,388.9424 " fill="none" id="LongMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2476.9792,328.0882,2470.25,307.0674,2488.6146,319.307,2476.9792,328.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1814b039795f1d96cf6a4878df1f11c8]
reverse link PrimitiveScalarMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="70" d="M1531.1042,326.7028 C1890.0729,399.3174 2002.3125,295.2549 2348.4375,389.1195 C2354.8021,390.8486 2361.1979,392.7132 2367.6042,394.7028 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1529.375,333.7965,1510.4792,322.4007,1532.3646,319.5153,1529.375,333.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[665d9528b330b09b5b48766def62ecb6]
reverse link Sized to LongMultiMap--><path codeLine="88" d="M2117.1042,103.8903 C2163.4375,125.057 2231.5833,156.1924 2291.9479,183.7757 " fill="none" id="Sized-backto-LongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2113.9792,110.484,2098.0625,95.1924,2120.0417,97.2132,2113.9792,110.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[464a3c0904bac3ae1c62d95220e1b4a7]
reverse link PrimitiveMultiMap to LongToByteFixedMultiMap--><path codeLine="97" d="M1558.1875,309.3695 C1548.6042,315.7757 1538.6354,321.7236 1528.6458,326.6195 C1429.8333,375.0465 1388.5313,342.0465 1289.0625,389.1195 C1276.6875,394.9736 1264.2813,401.6507 1252.0729,408.8486 " fill="none" id="PrimitiveMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1554.3021,303.182,1575.5,297.0361,1562.7604,315.0674,1554.3021,303.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dcf07fe2b95df686e43efa64177c11db]
reverse link PrimitiveScalarMultiMap to LongToByteFixedMultiMap--><path codeLine="98" d="M1234.1563,343.5778 C1218.5104,364.5257 1201.7813,386.9111 1185.5208,408.6715 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1228.4167,339.0882,1246.7292,326.7653,1240.1042,347.8174,1228.4167,339.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b6127586369a48f529fa8b0b8768bc87]
reverse link PrimitiveMultiMap to LongToIntFixedMultiMap--><path codeLine="113" d="M1596.7396,315.7653 C1582.1458,343.8174 1564.8646,377.057 1548.2917,408.9007 " fill="none" id="PrimitiveMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1590.2813,312.3695,1606.3646,297.2549,1603.2188,319.0986,1590.2813,312.3695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5ba56ab4753696a05af8ee779fdc3a81]
reverse link PrimitiveScalarMultiMap to LongToIntFixedMultiMap--><path codeLine="114" d="M1368.2188,344.5153 C1381.1667,365.1924 1394.9792,387.234 1408.4063,408.6715 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1361.9792,348.2861,1357.1042,326.7653,1374.3438,340.5465,1361.9792,348.2861" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[abe75afdbc3ea6e7aff1c1c1d12d537a]
reverse link PrimitiveMultiMap to LongToIntMultiMap--><path codeLine="129" d="M1562.2292,309.2861 C1551.5521,316.1924 1540.2188,322.2861 1528.6458,326.6195 C1315.8333,406.4007 712.2188,289.7653 507.8125,389.1195 C492.4167,396.5986 478.0729,406.8903 464.9896,418.5361 " fill="none" id="PrimitiveMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1558.3021,303.1403,1579.5208,297.057,1566.7188,315.0465,1558.3021,303.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5b3d3871f42ea3109effd0d1ad5b1512]
reverse link IntMultiMap to LongToIntMultiMap--><path codeLine="130" d="M381.7708,328.2236 C381.7708,356.3903 381.7708,388.4215 381.7708,418.5778 " fill="none" id="IntMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="374.4792,327.9007,381.7708,307.0674,389.0625,327.9007,374.4792,327.9007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[deb2b9b86d6f9fe1788c14fdf0d7f203]
reverse link PrimitiveScalarMultiMap to LongToIntMultiMap--><path codeLine="131" d="M1082.2708,269.9007 C881.3438,293.9111 604.0521,335.2549 507.8125,389.1195 C493.5938,397.0778 480.1563,407.2549 467.7396,418.4945 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1081.4583,262.6611,1103,267.4632,1083.1667,277.1403,1081.4583,262.6611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3c0bce9bbf3284ca7c87272c80f02058]
reverse link PrimitiveMultiMap to LongToLongFixedMultiMap--><path codeLine="145" d="M1689.9479,313.3486 C1714.3125,341.9007 1743.5313,376.1299 1771.4896,408.9007 " fill="none" id="PrimitiveMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1684.1875,317.8278,1676.2083,297.2549,1695.2708,308.3695,1684.1875,317.8278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ff0ad0b37dad764f0dc7a89862a469b3]
reverse link PrimitiveScalarMultiMap to LongToLongFixedMultiMap--><path codeLine="146" d="M1530.6771,329.432 C1600.7604,355.9424 1664.0104,380.6403 1679.6875,389.1195 C1690.9479,395.2132 1702.3021,401.859 1713.5625,408.8486 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1527.6875,336.0986,1510.7708,321.9215,1532.8333,322.4528,1527.6875,336.0986" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9958715f31b6e54ca599fd7b793c6070]
reverse link PrimitiveMultiMap to LongToLongMultiMap--><path codeLine="161" d="M1739.9375,262.307 C1859.0833,279.6299 2057.3333,307.4528 2228.6458,326.6195 C2383.8542,343.984 2788.4479,320.307 2928.6458,389.1195 C2944.1458,396.7236 2958.7188,407.0049 2972.1146,418.5778 " fill="none" id="PrimitiveMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1738.5625,269.4736,1719,259.2445,1740.6667,255.0361,1738.5625,269.4736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4d9a3dece8a4a24f432bf94c4d13e872]
reverse link LongMultiMap to LongToLongMultiMap--><path codeLine="162" d="M2622.2917,276.359 C2719.7188,297.3903 2835.8646,332.2757 2928.6458,389.1195 C2942.2292,397.4424 2955.2813,407.5465 2967.5521,418.4945 " fill="none" id="LongMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2620.7083,283.484,2601.8021,272.0778,2623.6875,269.2028,2620.7083,283.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[677cf828ea3df87ae06e94fd094142e9]
reverse link PrimitiveScalarMultiMap to LongToLongMultiMap--><path codeLine="163" d="M1530.9479,326.3799 C1867.1979,382.0049 2651.9063,260.8278 2928.6458,389.1195 C2944.6146,396.5257 2959.5521,406.8486 2973.2188,418.5882 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1529.625,333.5465,1510.4271,322.6507,1532.2292,319.2028,1529.625,333.5465" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c3f63cf971db9fe9151941242150ac8a]
reverse link PrimitiveMap to PrimitiveMultiMap--><path codeLine="177" d="M1632.8125,122.7861 C1632.8125,144.5674 1632.8125,170.9632 1632.8125,193.5778 " fill="none" id="PrimitiveMap-backto-PrimitiveMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1625.5208,122.5674,1632.8125,101.734,1640.1042,122.5674,1625.5208,122.5674" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[10ae2686c42b8eafe767019eedc582f0]
@startuml

    !include lexakai.theme
    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        #IntToByteFixedMultiMap()
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        #IntToIntFixedMultiMap()
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        #IntToLongFixedMultiMap()
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        #IntToPackedArrayFixedMultiMap()
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        #LongToByteFixedMultiMap()
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        #LongToIntFixedMultiMap()
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        #LongToIntMultiMap()
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        #LongToLongFixedMultiMap()
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        #LongToLongMultiMap()
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends Quantizable> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        #IntToByteFixedMultiMap()
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        #IntToIntFixedMultiMap()
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        #IntToLongFixedMultiMap()
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        #IntToPackedArrayFixedMultiMap()
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        #LongToByteFixedMultiMap()
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        #LongToIntFixedMultiMap()
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        #LongToIntMultiMap()
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        #LongToLongFixedMultiMap()
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        #LongToLongMultiMap()
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends Quantizable> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>