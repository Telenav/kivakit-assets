@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.collections.map"
    
    abstract BaseMap
    
    BaseMap <|-- CacheMap
    class CacheMap<Key, Value>
    {
        --(constructors)--
        +CacheMap(Maximum)
    }
    
    StringMap <|-- CaseFoldingStringMap
    class CaseFoldingStringMap<Element>
    {
        --(constructors)--
        +CaseFoldingStringMap()
        +CaseFoldingStringMap(Maximum)
    }
    
    BaseMap <|-- LinkedMap
    class LinkedMap<Key, Value>
    {
        --(constructors)--
        +LinkedMap(Maximum)
    }
    
    BaseMap <|-- MultiMap
    class MultiMap<Key, Value>
    {
        --(constructors)--
        #MultiMap(Maximum, Maximum, Map<Key, ObjectList<Value>>)
        +MultiMap()
        +MultiMap(Maximum, Maximum)
        --(collection)--
        +void add(Key, Value)
        +void addAll(Key, Collection<? extends Value>)
        +void addAll(Collection<? extends Key> keys, Value)
        +ObjectList<Value> flatValues()
        +ObjectList<Value> list(Key)
        +Count maximumListSize()
        +void sort(Comparator<? super Value>)
        +int totalValues()
    }
    
    BaseMap <|-- MultiSet
    class MultiSet<Key, Value>
    {
        --(constructors)--
        #MultiSet(Maximum, Maximum, Map<Key, ObjectSet<Value>>)
        +MultiSet()
        +MultiSet(Maximum, Maximum)
        --
        +void replaceValue(Key, Value)
        +ObjectSet<Value> set(Key)
        --(collection)--
        +void add(Key, Value)
        +int entryCount()
        +Iterable<Value> flatValues()
        +Set<Value> getOrEmptySet(Object key)
        +Count maximumSetSize()
        +void removeFromSet(Key, Value)
    }
    
    class ReferenceCountMap<Key>
    {
        --
        +void dereference(Key object)
        +void reference(Key)
        --(checks)--
        +boolean isReferenced(Key object)
        --(collection)--
        +void count(Key object, Count)
        +Count count(Key object)
    }
    
    BaseMap <|-- TwoWayMap
    class TwoWayMap<Key, Value>
    {
        --(constructors)--
        +TwoWayMap()
        +TwoWayMap(Maximum)
        --(collection)--
        +Key key(Value)
    }
    
@enduml

