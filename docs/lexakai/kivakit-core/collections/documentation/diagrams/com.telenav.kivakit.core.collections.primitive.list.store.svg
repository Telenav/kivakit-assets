<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="630.2083px" preserveAspectRatio="none" style="width:721px;height:630px;background:#333333;" version="1.1" viewBox="0 0 721 630" width="721.875px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="565.625" x="70.8333" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="542.7083" x="82.2917" y="30.5583">com.telenav.kivakit.core.collections.primitive.list.store</text><!--MD5=[8e77cc9e8b0fad1c97ac2816c10a6f4a]
class PrimitiveListStore--><rect codeLine="48" fill="#282828" height="103.123" id="PrimitiveListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="170.8333" x="276.5625" y="188.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="170.8333" x="276.5625" y="188.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="170.8333" x="276.5625" y="211.1328"/><rect codeLine="48" fill="none" height="103.123" id="PrimitiveListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="170.8333" x="276.5625" y="188.0778"/><ellipse cx="299.5833" cy="203.772" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M299.6973,200.474 L298.8489,204.2033 L300.5518,204.2033 Z M298.5986,198.8261 L300.802,198.8261 L303.2617,207.9386 L301.4612,207.9386 L300.8997,205.6864 L298.4888,205.6864 L297.9395,207.9386 L296.1389,207.9386 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="114.5833" x="318.125" y="208.4961">PrimitiveListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="277.6042" x2="446.3542" y1="219.4661" y2="219.4661"/><polygon fill="#FFFF44" points="288.0208,249.6277,292.1875,253.7944,288.0208,257.961,283.8542,253.7944" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="299.4792" y="261.7472">PrimitiveListStore()</text><ellipse cx="288.0208" cy="274.5809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="299.4792" y="281.4921">PrimitiveListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.6042" x2="318.2292" y1="237.6719" y2="237.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="321.3542" y="241.4815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="405.7292" x2="446.3542" y1="237.6719" y2="237.6719"/><!--MD5=[75065b1bcb02c7fff44ff872d59c0201]
class IntLinkedListStore--><rect codeLine="7" fill="#282828" height="245.5037" id="IntLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="9.375" y="377.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="9.375" y="377.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="9.375" y="400.7161"/><rect codeLine="7" fill="none" height="245.5037" id="IntLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="9.375" y="377.6611"/><ellipse cx="109.8958" cy="393.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M111.8062,397.7804 Q111.379,398.0001 110.909,398.1099 Q110.439,398.2198 109.9202,398.2198 Q108.077,398.2198 107.1065,397.0052 Q106.1361,395.7906 106.1361,393.4957 Q106.1361,391.1947 107.1065,389.9801 Q108.077,388.7655 109.9202,388.7655 Q110.439,388.7655 110.9151,388.8753 Q111.3912,388.9852 111.8062,389.2049 L111.8062,391.2069 Q111.3424,390.7796 110.906,390.5813 Q110.4696,390.3829 110.0057,390.3829 Q109.0169,390.3829 108.5134,391.1672 Q108.0098,391.9515 108.0098,393.4957 Q108.0098,395.0338 108.5134,395.8181 Q109.0169,396.6024 110.0057,396.6024 Q110.4696,396.6024 110.906,396.404 Q111.3424,396.2056 111.8062,395.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="118.75" x="132.8125" y="398.0794">IntLinkedListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="342.7083" y1="409.0495" y2="409.0495"/><polygon fill="#FFFF44" points="20.8333,439.211,25,443.3777,20.8333,447.5444,16.6667,443.3777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="32.2917" y="451.3306">IntLinkedListStore()</text><ellipse cx="20.8333" cy="464.1642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="32.2917" y="471.0754">IntLinkedListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="132.8125" y1="427.2552" y2="427.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="135.9375" y="431.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="220.3125" x2="342.7083" y1="427.2552" y2="427.2552"/><ellipse cx="20.8333" cy="507.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="32.2917" y="514.7319">int add(int list, int value)</text><ellipse cx="20.8333" cy="527.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="32.2917" y="534.4767">int addAll(int list, int[] values)</text><ellipse cx="20.8333" cy="547.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="32.2917" y="554.2216">int addAll(int list, IntArray values)</text><ellipse cx="20.8333" cy="567.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="32.2917" y="573.9665">int addAll(int list, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="20.8333" cy="586.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="32.2917" y="593.7113">IntIterator list(int list)</text><ellipse cx="20.8333" cy="606.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="32.2917" y="613.4562">int remove(int list, int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="142.1875" y1="490.6565" y2="490.6565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="145.3125" y="494.4661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="210.9375" x2="342.7083" y1="490.6565" y2="490.6565"/><!--MD5=[b1ad2c09d1ed1c99f3fced075aa7735e]
class LongLinkedListStore--><rect codeLine="22" fill="#282828" height="245.5037" id="LongLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="380.2083" y="377.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="380.2083" y="377.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="380.2083" y="400.7161"/><rect codeLine="22" fill="none" height="245.5037" id="LongLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="380.2083" y="377.6611"/><ellipse cx="473.4375" cy="393.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M475.3479,397.7804 Q474.9207,398.0001 474.4507,398.1099 Q473.9807,398.2198 473.4619,398.2198 Q471.6187,398.2198 470.6482,397.0052 Q469.6777,395.7906 469.6777,393.4957 Q469.6777,391.1947 470.6482,389.9801 Q471.6187,388.7655 473.4619,388.7655 Q473.9807,388.7655 474.4568,388.8753 Q474.9329,388.9852 475.3479,389.2049 L475.3479,391.2069 Q474.884,390.7796 474.4476,390.5813 Q474.0112,390.3829 473.5474,390.3829 Q472.5586,390.3829 472.0551,391.1672 Q471.5515,391.9515 471.5515,393.4957 Q471.5515,395.0338 472.0551,395.8181 Q472.5586,396.6024 473.5474,396.6024 Q474.0112,396.6024 474.4476,396.404 Q474.884,396.2056 475.3479,395.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="496.3542" y="398.0794">LongLinkedListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="381.25" x2="713.5417" y1="409.0495" y2="409.0495"/><polygon fill="#FFFF44" points="391.6667,439.211,395.8333,443.3777,391.6667,447.5444,387.5,443.3777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="403.125" y="451.3306">LongLinkedListStore()</text><ellipse cx="391.6667" cy="464.1642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="403.125" y="471.0754">LongLinkedListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="503.6458" y1="427.2552" y2="427.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="506.7708" y="431.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="591.1458" x2="713.5417" y1="427.2552" y2="427.2552"/><ellipse cx="391.6667" cy="507.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="403.125" y="514.7319">int add(int list, long value)</text><ellipse cx="391.6667" cy="527.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="403.125" y="534.4767">int addAll(int list, LongArray values)</text><ellipse cx="391.6667" cy="547.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="403.125" y="554.2216">int addAll(int list, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="391.6667" cy="567.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="403.125" y="573.9665">int addAll(int list, long[] values)</text><ellipse cx="391.6667" cy="586.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="403.125" y="593.7113">LongIterator list(int list)</text><ellipse cx="391.6667" cy="606.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="403.125" y="613.4562">int remove(int list, long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="381.25" x2="513.0208" y1="490.6565" y2="490.6565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="516.1458" y="494.4661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="581.7708" x2="713.5417" y1="490.6565" y2="490.6565"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect fill="#282828" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="394.2708" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="394.2708" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="394.2708" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="394.2708" y="53.7028"/><ellipse cx="408.8542" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M410.7646,73.822 Q410.3373,74.0417 409.8674,74.1516 Q409.3974,74.2615 408.8786,74.2615 Q407.0353,74.2615 406.0649,73.0469 Q405.0944,71.8323 405.0944,69.5374 Q405.0944,67.2363 406.0649,66.0217 Q407.0353,64.8071 408.8786,64.8071 Q409.3974,64.8071 409.8735,64.917 Q410.3495,65.0269 410.7646,65.2466 L410.7646,67.2485 Q410.3007,66.8213 409.8643,66.6229 Q409.4279,66.4246 408.964,66.4246 Q407.9753,66.4246 407.4717,67.2089 Q406.9682,67.9932 406.9682,69.5374 Q406.9682,71.0754 407.4717,71.8597 Q407.9753,72.644 408.964,72.644 Q409.4279,72.644 409.8643,72.4457 Q410.3007,72.2473 410.7646,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="425.5208" y="74.1211">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="395.3125" x2="553.6458" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="395.3125" x2="553.6458" y1="93.4245" y2="93.4245"/><!--MD5=[a192263c379fea8353f33469688a3a00]
class PackedStringStore--><rect codeLine="37" fill="#282828" height="150.946" id="PackedStringStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="205.2083" x="484.375" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="205.2083" x="484.375" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="205.2083" x="484.375" y="187.1745"/><rect codeLine="37" fill="none" height="150.946" id="PackedStringStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="205.2083" x="484.375" y="164.1195"/><ellipse cx="521.9271" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M523.8375,184.2387 Q523.4102,184.4584 522.9403,184.5683 Q522.4703,184.6781 521.9515,184.6781 Q520.1082,184.6781 519.1378,183.4635 Q518.1673,182.2489 518.1673,179.954 Q518.1673,177.653 519.1378,176.4384 Q520.1082,175.2238 521.9515,175.2238 Q522.4703,175.2238 522.9464,175.3337 Q523.4224,175.4435 523.8375,175.6632 L523.8375,177.6652 Q523.3736,177.238 522.9372,177.0396 Q522.5008,176.8412 522.0369,176.8412 Q521.0482,176.8412 520.5446,177.6255 Q520.0411,178.4098 520.0411,179.954 Q520.0411,181.4921 520.5446,182.2764 Q521.0482,183.0607 522.0369,183.0607 Q522.5008,183.0607 522.9372,182.8623 Q523.3736,182.664 523.8375,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="116.6667" x="543.6979" y="184.5378">PackedStringStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="485.4167" x2="688.5417" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="495.8333,225.6694,500,229.836,495.8333,234.0027,491.6667,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="507.2917" y="237.7889">PackedStringStore()</text><ellipse cx="495.8333" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="507.2917" y="257.5338">PackedStringStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="485.4167" x2="543.2292" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="546.3542" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="630.7292" x2="688.5417" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="485.4167" x2="688.5417" y1="267.2424" y2="267.2424"/><ellipse cx="495.8333" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="507.2917" y="285.612">String get(int index)</text><ellipse cx="495.8333" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="507.2917" y="305.3569">void set(int index, String value)</text><!--MD5=[287f07e99e3168d8bf4806b9d451a57b]
reverse link PrimitiveListStore to IntLinkedListStore--><path codeLine="6" d="M313.5417,308.2965 C298.3229,329.5465 281.0208,353.7028 263.9583,377.5257 " fill="none" id="PrimitiveListStore-backto-IntLinkedListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="307.7292,303.9007,325.7917,291.2028,319.5833,312.3903,307.7292,303.9007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[439f4a22ea250237543f85a4b5bf6a2d]
reverse link PrimitiveListStore to LongLinkedListStore--><path codeLine="21" d="M410.4167,308.2965 C425.6354,329.5465 442.9375,353.7028 460,377.5257 " fill="none" id="PrimitiveListStore-backto-LongLinkedListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="404.375,312.3903,398.1667,291.2028,416.2292,303.9007,404.375,312.3903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[679faf84d1bf0fad9c2144a3e0ee22c6]
reverse link PrimitiveCollection to PackedStringStore--><path codeLine="36" d="M502.8958,119.0986 C512.5208,132.7653 523.5833,148.5049 534.4688,163.9632 " fill="none" id="PrimitiveCollection-backto-PackedStringStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="496.8646,123.1924,490.8333,101.9528,508.7917,114.7965,496.8646,123.1924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5b01147b9696bc5e513fdf087ac8028b]
reverse link PrimitiveCollection to PrimitiveListStore--><path codeLine="47" d="M445.9896,119.1924 C431.3021,140.0674 413.25,165.734 397.6458,187.9111 " fill="none" id="PrimitiveCollection-backto-PrimitiveListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="440.1667,114.7965,458.125,101.9528,452.0938,123.1924,440.1667,114.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[cc4ff2a38b779e93d9f8fe0fbeff507d]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.kivakit.core.collections.primitive.list.store"
    
    PrimitiveListStore <|- - IntLinkedListStore
    class IntLinkedListStore
    {
        - -(constructors)- -
        #IntLinkedListStore()
        +IntLinkedListStore(String)
        - -(collection)- -
        +int add(int list, int value)
        +int addAll(int list, int[] values)
        +int addAll(int list, IntArray values)
        +int addAll(int list, List<? extends Quantizable> values)
        +IntIterator list(int list)
        +int remove(int list, int value)
    }
    
    PrimitiveListStore <|- - LongLinkedListStore
    class LongLinkedListStore
    {
        - -(constructors)- -
        #LongLinkedListStore()
        +LongLinkedListStore(String)
        - -(collection)- -
        +int add(int list, long value)
        +int addAll(int list, LongArray values)
        +int addAll(int list, List<? extends Quantizable> values)
        +int addAll(int list, long[] values)
        +LongIterator list(int list)
        +int remove(int list, long value)
    }
    
    PrimitiveCollection <|- - PackedStringStore
    class PackedStringStore
    {
        - -(constructors)- -
        #PackedStringStore()
        +PackedStringStore(String)
        - -
        +String get(int index)
        +void set(int index, String value)
    }
    
    PrimitiveCollection <|- - PrimitiveListStore
    abstract class PrimitiveListStore
    {
        - -(constructors)- -
        #PrimitiveListStore()
        +PrimitiveListStore(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.collections.primitive.list.store"
    
    PrimitiveListStore <|- - IntLinkedListStore
    class IntLinkedListStore
    {
        - -(constructors)- -
        #IntLinkedListStore()
        +IntLinkedListStore(String)
        - -(collection)- -
        +int add(int list, int value)
        +int addAll(int list, int[] values)
        +int addAll(int list, IntArray values)
        +int addAll(int list, List<? extends Quantizable> values)
        +IntIterator list(int list)
        +int remove(int list, int value)
    }
    
    PrimitiveListStore <|- - LongLinkedListStore
    class LongLinkedListStore
    {
        - -(constructors)- -
        #LongLinkedListStore()
        +LongLinkedListStore(String)
        - -(collection)- -
        +int add(int list, long value)
        +int addAll(int list, LongArray values)
        +int addAll(int list, List<? extends Quantizable> values)
        +int addAll(int list, long[] values)
        +LongIterator list(int list)
        +int remove(int list, long value)
    }
    
    PrimitiveCollection <|- - PackedStringStore
    class PackedStringStore
    {
        - -(constructors)- -
        #PackedStringStore()
        +PackedStringStore(String)
        - -
        +String get(int index)
        +void set(int index, String value)
    }
    
    PrimitiveCollection <|- - PrimitiveListStore
    abstract class PrimitiveListStore
    {
        - -(constructors)- -
        #PrimitiveListStore()
        +PrimitiveListStore(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>