<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="737.5px" preserveAspectRatio="none" style="width:1088px;height:737px;background:#333333;" version="1.1" viewBox="0 0 1088 737" width="1088.5417px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="472.9167" x="300.5208" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="450" x="311.9792" y="30.5583">com.telenav.kivakit.data.formats.yaml.model</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="7" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="516.1458" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="516.1458" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="516.1458" y="76.7578"/><rect codeLine="7" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="516.1458" y="53.7028"/><ellipse cx="530.7292" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M528.1331,66.5588 L528.1331,64.9719 L533.5592,64.9719 L533.5592,66.5588 L531.7464,66.5588 L531.7464,72.4976 L533.5592,72.4976 L533.5592,74.0845 L528.1331,74.0845 L528.1331,72.4976 L529.9459,72.4976 L529.9459,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="547.3958" y="74.1211">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="517.1875" x2="597.3958" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="517.1875" x2="597.3958" y1="93.4245" y2="93.4245"/><!--MD5=[41412054e4dc34b651f1c126e1fca3c0]
class YamlNodeContainer--><rect codeLine="63" fill="#282828" height="131.2012" id="YamlNodeContainer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="267.7083" x="91.1458" y="205.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="267.7083" x="91.1458" y="205.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="267.7083" x="91.1458" y="228.8411"/><rect codeLine="63" fill="none" height="131.2012" id="YamlNodeContainer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="267.7083" x="91.1458" y="205.7861"/><ellipse cx="153.125" cy="221.4803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M150.529,218.6422 L150.529,217.0553 L155.955,217.0553 L155.955,218.6422 L154.1423,218.6422 L154.1423,224.5809 L155.955,224.5809 L155.955,226.1678 L150.529,226.1678 L150.529,224.5809 L152.3417,224.5809 L152.3417,218.6422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="129.1667" x="176.0417" y="226.2044">YamlNodeContainer</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="92.1875" x2="357.8125" y1="237.1745" y2="237.1745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="92.1875" x2="357.8125" y1="245.5078" y2="245.5078"/><ellipse cx="102.6042" cy="256.9661" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="114.0625" y="263.8774">YamlNode prepending(YamlNode element)</text><ellipse cx="102.6042" cy="300.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="114.0625" y="307.5338">ObjectList&lt;YamlNode&gt; elements()</text><ellipse cx="102.6042" cy="320.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="114.0625" y="327.2786">int size()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="92.1875" x2="190.625" y1="283.4585" y2="283.4585"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="193.75" y="287.2681">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="259.375" x2="357.8125" y1="283.4585" y2="283.4585"/><!--MD5=[c7b9874db900c11613f4491a9cd3e758]
class YamlNode--><rect codeLine="50" fill="#282828" height="214.3473" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="457.2917" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="457.2917" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="457.2917" y="187.1745"/><rect codeLine="50" fill="none" height="214.3473" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="457.2917" y="164.1195"/><ellipse cx="517.1875" cy="179.8136" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M516.7806,176.5157 L515.9322,180.245 L517.6351,180.245 Z M515.682,174.8678 L517.8853,174.8678 L520.3451,183.9803 L518.5445,183.9803 L517.983,181.7281 L515.5721,181.7281 L515.0228,183.9803 L513.2222,183.9803 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="540.1042" y="184.5378">YamlNode</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="458.3333" x2="656.25" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="468.75,225.6694,472.9167,229.836,468.75,234.0027,464.5833,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="480.2083" y="237.7889">YamlNode(YamlNode)</text><ellipse cx="468.75" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="480.2083" y="257.5338">YamlNode(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="513.5417" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="516.6667" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="601.0417" x2="656.25" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="656.25" y1="267.2424" y2="267.2424"/><ellipse cx="468.75" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="480.2083" y="285.612">void parent(YamlNode parent)</text><ellipse cx="468.75" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="480.2083" y="305.3569">YamlNode parent()</text><ellipse cx="468.75" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="480.2083" y="349.0133">boolean isNamed()</text><ellipse cx="468.75" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="480.2083" y="368.7581">boolean isUnnamed()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="458.3333" x2="530.7292" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="533.8542" y="328.7476">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="583.8542" x2="656.25" y1="324.9379" y2="324.9379"/><!--MD5=[b6458320635909f60e208a8315da07f3]
class YamlArray--><rect codeLine="12" fill="#282828" height="190.4358" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="490.682"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="490.682"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="513.737"/><rect codeLine="12" fill="none" height="190.4358" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="490.682"/><ellipse cx="65.625" cy="506.3761" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M67.5354,510.8012 Q67.1082,511.0209 66.6382,511.1308 Q66.1682,511.2406 65.6494,511.2406 Q63.8062,511.2406 62.8357,510.026 Q61.8652,508.8114 61.8652,506.5165 Q61.8652,504.2155 62.8357,503.0009 Q63.8062,501.7863 65.6494,501.7863 Q66.1682,501.7863 66.6443,501.8962 Q67.1204,502.006 67.5354,502.2257 L67.5354,504.2277 Q67.0715,503.8005 66.6351,503.6021 Q66.1987,503.4037 65.7349,503.4037 Q64.7461,503.4037 64.2426,504.188 Q63.739,504.9723 63.739,506.5165 Q63.739,508.0546 64.2426,508.8389 Q64.7461,509.6232 65.7349,509.6232 Q66.1987,509.6232 66.6351,509.4248 Q67.0715,509.2265 67.5354,508.7992 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="88.5417" y="511.1003">YamlArray</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="204.1667" y1="522.0703" y2="522.0703"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="204.1667" y1="530.4036" y2="530.4036"/><ellipse cx="18.75" cy="541.862" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="30.2083" y="548.7732">YamlNode get(int index)</text><ellipse cx="18.75" cy="585.5184" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="30.2083" y="592.4296">YamlArray array()</text><ellipse cx="18.75" cy="605.2633" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="30.2083" y="612.1745">YamlArray array(String name)</text><ellipse cx="18.75" cy="625.0081" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="30.2083" y="631.9194">YamlArray copy()</text><ellipse cx="18.75" cy="644.753" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="30.2083" y="651.6642">Count count()</text><ellipse cx="18.75" cy="664.4979" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="30.2083" y="671.4091">YamlArray with(YamlNode)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="71.875" y1="568.3543" y2="568.3543"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="75" y="572.1639">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="140.625" x2="204.1667" y1="568.3543" y2="568.3543"/><!--MD5=[66a25c763ed576eb2bc685155ff31bb7]
class YamlBlock--><rect codeLine="26" fill="#282828" height="234.0922" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="204.1667" x="241.6667" y="468.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="204.1667" x="241.6667" y="468.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="204.1667" x="241.6667" y="491.862"/><rect codeLine="26" fill="none" height="234.0922" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="204.1667" x="241.6667" y="468.807"/><ellipse cx="302.6042" cy="484.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M304.5146,488.9262 Q304.0873,489.1459 303.6174,489.2558 Q303.1474,489.3656 302.6286,489.3656 Q300.7853,489.3656 299.8149,488.151 Q298.8444,486.9364 298.8444,484.6415 Q298.8444,482.3405 299.8149,481.1259 Q300.7853,479.9113 302.6286,479.9113 Q303.1474,479.9113 303.6235,480.0212 Q304.0995,480.131 304.5146,480.3507 L304.5146,482.3527 Q304.0507,481.9255 303.6143,481.7271 Q303.1779,481.5287 302.714,481.5287 Q301.7253,481.5287 301.2217,482.313 Q300.7182,483.0973 300.7182,484.6415 Q300.7182,486.1796 301.2217,486.9639 Q301.7253,487.7482 302.714,487.7482 Q303.1779,487.7482 303.6143,487.5498 Q304.0507,487.3515 304.5146,486.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="67.7083" x="325.5208" y="489.2253">YamlBlock</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="242.7083" x2="444.7917" y1="500.1953" y2="500.1953"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="242.7083" x2="444.7917" y1="508.5286" y2="508.5286"/><ellipse cx="253.125" cy="519.987" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="264.5833" y="526.8982">YamlBlock block(String name)</text><ellipse cx="253.125" cy="539.7319" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="264.5833" y="546.6431">YamlBlock block()</text><ellipse cx="253.125" cy="559.4767" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="264.5833" y="566.3879">YamlNode get(String name)</text><ellipse cx="253.125" cy="579.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="264.5833" y="586.1328">boolean has(String name)</text><ellipse cx="253.125" cy="598.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="264.5833" y="605.8777">YamlBlock with(YamlNode)</text><ellipse cx="253.125" cy="642.6229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="264.5833" y="649.5341">void addReference(String type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="242.7083" x2="309.375" y1="625.4588" y2="625.4588"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="312.5" y="629.2684">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="378.125" x2="444.7917" y1="625.4588" y2="625.4588"/><ellipse cx="253.125" cy="686.2793" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="264.5833" y="693.1905">YamlBlock copy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="242.7083" x2="308.3333" y1="669.1152" y2="669.1152"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="311.4583" y="672.9248">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="379.1667" x2="444.7917" y1="669.1152" y2="669.1152"/><!--MD5=[f1b95bf9207b3eab74dd96efa6f5af2f]
class YamlLiteral--><rect codeLine="41" fill="#282828" height="111.4563" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="482.2917" y="530.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="482.2917" y="530.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="482.2917" y="553.3203"/><rect codeLine="41" fill="none" height="111.4563" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="482.2917" y="530.2653"/><ellipse cx="576.0417" cy="545.9595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M577.9521,550.3845 Q577.5248,550.6042 577.0549,550.7141 Q576.5849,550.824 576.0661,550.824 Q574.2228,550.824 573.2524,549.6094 Q572.2819,548.3948 572.2819,546.0999 Q572.2819,543.7988 573.2524,542.5842 Q574.2228,541.3696 576.0661,541.3696 Q576.5849,541.3696 577.061,541.4795 Q577.537,541.5894 577.9521,541.8091 L577.9521,543.811 Q577.4882,543.3838 577.0518,543.1854 Q576.6154,542.9871 576.1515,542.9871 Q575.1628,542.9871 574.6592,543.7714 Q574.1557,544.5557 574.1557,546.0999 Q574.1557,547.6379 574.6592,548.4222 Q575.1628,549.2065 576.1515,549.2065 Q576.6154,549.2065 577.0518,549.0082 Q577.4882,548.8098 577.9521,548.3826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="72.9167" x="598.9583" y="550.6836">YamlLiteral</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="483.3333" x2="756.25" y1="561.6536" y2="561.6536"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="756.25" y1="569.987" y2="569.987"/><ellipse cx="493.75" cy="581.4453" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="242.7083" x="505.2083" y="588.3565">YamlLiteral literal(String name, String value)</text><ellipse cx="493.75" cy="625.1017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="505.2083" y="632.0129">String value()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="585.4167" y1="607.9376" y2="607.9376"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="588.5417" y="611.7472">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="654.1667" x2="756.25" y1="607.9376" y2="607.9376"/><!--MD5=[0af342a0315717a4a2eee0dd5076e71f]
class YamlScalar--><rect codeLine="73" fill="#282828" height="289.1602" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="793.75" y="441.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="793.75" y="441.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="793.75" y="464.2578"/><rect codeLine="73" fill="none" height="289.1602" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="793.75" y="441.2028"/><ellipse cx="895.3125" cy="456.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M897.2229,461.322 Q896.7957,461.5417 896.3257,461.6516 Q895.8557,461.7615 895.3369,461.7615 Q893.4937,461.7615 892.5232,460.5469 Q891.5527,459.3323 891.5527,457.0374 Q891.5527,454.7363 892.5232,453.5217 Q893.4937,452.3071 895.3369,452.3071 Q895.8557,452.3071 896.3318,452.417 Q896.8079,452.5269 897.2229,452.7466 L897.2229,454.7485 Q896.759,454.3213 896.3226,454.1229 Q895.8862,453.9246 895.4224,453.9246 Q894.4336,453.9246 893.9301,454.7089 Q893.4265,455.4932 893.4265,457.0374 Q893.4265,458.5754 893.9301,459.3597 Q894.4336,460.144 895.4224,460.144 Q895.8862,460.144 896.3226,459.9457 Q896.759,459.7473 897.2229,459.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="69.7917" x="918.2292" y="461.6211">YamlScalar</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="794.7917" x2="1080.2083" y1="472.5911" y2="472.5911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="794.7917" x2="1080.2083" y1="480.9245" y2="480.9245"/><ellipse cx="805.2083" cy="492.3828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="816.6667" y="499.294">YamlScalar enumValue(String name)</text><ellipse cx="805.2083" cy="512.1277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="816.6667" y="519.0389">Number number()</text><ellipse cx="805.2083" cy="531.8726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="816.6667" y="538.7838">YamlScalar scalar(String name, String value)</text><ellipse cx="805.2083" cy="551.6174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="816.6667" y="558.5286">YamlScalar scalar(String name, Number value)</text><ellipse cx="805.2083" cy="571.3623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="816.6667" y="578.2735">YamlScalar scalar(String name, Boolean value)</text><ellipse cx="805.2083" cy="591.1072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="816.6667" y="598.0184">String string()</text><ellipse cx="805.2083" cy="610.8521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="816.6667" y="617.7633">boolean truth()</text><ellipse cx="805.2083" cy="654.5085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="816.6667" y="661.4197">boolean isBoolean()</text><ellipse cx="805.2083" cy="674.2533" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="816.6667" y="681.1646">boolean isEnum()</text><ellipse cx="805.2083" cy="693.9982" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="816.6667" y="700.9094">boolean isNumber()</text><ellipse cx="805.2083" cy="713.7431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="816.6667" y="720.6543">boolean isString()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="794.7917" x2="910.9375" y1="637.3444" y2="637.3444"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="914.0625" y="641.154">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="964.0625" x2="1080.2083" y1="637.3444" y2="637.3444"/><!--MD5=[db743fea5dab9d20fcb78988eea025c0]
reverse link YamlNode to YamlArray--><path codeLine="10" d="M437.9063,346.1507 C417.875,357.557 397.0938,368.8174 377.0833,378.7028 C310.8021,411.4528 282.3438,397.2236 222.9167,441.2028 C204.3125,454.9736 186.9479,472.359 171.5938,490.2549 " fill="none" id="YamlNode-backto-YamlArray" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="434.1875,339.8799,455.875,335.7653,441.4896,352.5049,434.1875,339.8799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[24b023c19b71bb9181d005c72e0a8a69]
reverse link YamlNodeContainer to YamlArray--><path codeLine="11" d="M192.4479,358.109 C176.8854,399.0778 158.1979,448.2549 142.2083,490.3382 " fill="none" id="YamlNodeContainer-backto-YamlArray" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="185.6146,355.557,199.8333,338.682,199.25,360.7445,185.6146,355.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[045de639329415ff06ee9d76e86ea190]
reverse link YamlNode to YamlBlock--><path codeLine="24" d="M471.7813,397.5986 C455.8229,420.9424 439.2083,445.2549 423.4479,468.3278 " fill="none" id="YamlNode-backto-YamlBlock" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="465.7396,393.5153,483.5104,380.4215,477.7813,401.7445,465.7396,393.5153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0818a8b1b6a84f4d12ed42ea5a7be298]
reverse link YamlNodeContainer to YamlBlock--><path codeLine="25" d="M257.5625,358.1299 C270.5,392.182 285.5938,431.9007 299.5,468.4945 " fill="none" id="YamlNodeContainer-backto-YamlBlock" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="250.75,360.7445,250.1667,338.682,264.3854,355.557,250.75,360.7445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfb97e969cafb16af26be83e042869b9]
reverse link YamlNode to YamlLiteral--><path codeLine="40" d="M582.9896,400.9215 C592,445.9945 601.6563,494.2549 608.8125,530.0361 " fill="none" id="YamlNode-backto-YamlLiteral" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="575.875,402.5257,578.9375,380.6715,590.1667,399.6715,575.875,402.5257" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7a32146df0f83c0cea3910c19cc3c22a]
reverse link Named to YamlNode--><path codeLine="49" d="M557.2917,123.7549 C557.2917,136.0049 557.2917,149.8174 557.2917,163.9424 " fill="none" id="Named-backto-YamlNode" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="550,124.234,557.2917,103.4007,564.5833,124.234,550,124.234" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[37cb950b669d7cd1f5c0a21138fddc5e]
reverse link YamlNode to YamlScalar--><path codeLine="72" d="M675.0729,360.8903 C708.1146,386.3486 743.8021,414.4736 776.0417,441.2028 C781.8229,445.9945 787.6771,450.9111 793.5729,455.9111 " fill="none" id="YamlNode-backto-YamlScalar" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="670.8854,366.8695,658.8021,348.4007,679.7708,355.2965,670.8854,366.8695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d7a34088c78bab034e2b883b58cdc5cb]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.data.formats.yaml.model"
    
    interface Named
    interface YamlNodeContainer
    
    YamlNode <|- - YamlArray
    YamlNodeContainer <|- - YamlArray
    class YamlArray
    {
        - -
        +YamlNode get(int index)
        - -(collection)- -
        +YamlArray array()
        +YamlArray array(String name)
        +YamlArray copy()
        +Count count()
        +YamlArray with(YamlNode)
    }
    
    YamlNode <|- - YamlBlock
    YamlNodeContainer <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlBlock block()
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlBlock with(YamlNode)
        - -(collection)- -
        +void addReference(String type)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -
        +YamlLiteral literal(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        #YamlNode(YamlNode)
        +YamlNode(String)
        - -
        +void parent(YamlNode parent)
        +YamlNode parent()
        - -(checks)- -
        +boolean isNamed()
        +boolean isUnnamed()
    }
    
    interface YamlNodeContainer
    {
        - -
        +YamlNode prepending(YamlNode element)
        - -(collection)- -
        +ObjectList<YamlNode> elements()
        +int size()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -
        +YamlScalar enumValue(String name)
        +Number number()
        +YamlScalar scalar(String name, String value)
        +YamlScalar scalar(String name, Number value)
        +YamlScalar scalar(String name, Boolean value)
        +String string()
        +boolean truth()
        - -(checks)- -
        +boolean isBoolean()
        +boolean isEnum()
        +boolean isNumber()
        +boolean isString()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.data.formats.yaml.model"
    
    interface Named
    interface YamlNodeContainer
    
    YamlNode <|- - YamlArray
    YamlNodeContainer <|- - YamlArray
    class YamlArray
    {
        - -
        +YamlNode get(int index)
        - -(collection)- -
        +YamlArray array()
        +YamlArray array(String name)
        +YamlArray copy()
        +Count count()
        +YamlArray with(YamlNode)
    }
    
    YamlNode <|- - YamlBlock
    YamlNodeContainer <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlBlock block()
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlBlock with(YamlNode)
        - -(collection)- -
        +void addReference(String type)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -
        +YamlLiteral literal(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        #YamlNode(YamlNode)
        +YamlNode(String)
        - -
        +void parent(YamlNode parent)
        +YamlNode parent()
        - -(checks)- -
        +boolean isNamed()
        +boolean isUnnamed()
    }
    
    interface YamlNodeContainer
    {
        - -
        +YamlNode prepending(YamlNode element)
        - -(collection)- -
        +ObjectList<YamlNode> elements()
        +int size()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -
        +YamlScalar enumValue(String name)
        +Number number()
        +YamlScalar scalar(String name, String value)
        +YamlScalar scalar(String name, Number value)
        +YamlScalar scalar(String name, Boolean value)
        +String string()
        +boolean truth()
        - -(checks)- -
        +boolean isBoolean()
        +boolean isEnum()
        +boolean isNumber()
        +boolean isString()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>