<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="630.2083px" preserveAspectRatio="none" style="width:719px;height:630px;background:#333333;" version="1.1" viewBox="0 0 719 630" width="719.7917px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="516.6667" x="94.2708" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="493.75" x="105.7292" y="30.5583">com.telenav.kivakit.primitive.collections.list.store</text><!--MD5=[8e77cc9e8b0fad1c97ac2816c10a6f4a]
class PrimitiveListStore--><rect codeLine="49" fill="#282828" height="103.123" id="PrimitiveListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="170.8333" x="275" y="188.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="170.8333" x="275" y="188.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="170.8333" x="275" y="211.1328"/><rect codeLine="49" fill="none" height="103.123" id="PrimitiveListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="170.8333" x="275" y="188.0778"/><ellipse cx="298.0208" cy="203.772" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M297.6139,200.474 L296.7655,204.2033 L298.4684,204.2033 Z M296.5153,198.8261 L298.7187,198.8261 L301.1784,207.9386 L299.3778,207.9386 L298.8163,205.6864 L296.4054,205.6864 L295.8561,207.9386 L294.0556,207.9386 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="114.5833" x="316.5625" y="208.4961">PrimitiveListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="276.0417" x2="444.7917" y1="219.4661" y2="219.4661"/><polygon fill="#FFFF44" points="286.4583,249.6277,290.625,253.7944,286.4583,257.961,282.2917,253.7944" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="297.9167" y="261.7472">PrimitiveListStore()</text><polygon fill="#FFFF44" points="286.4583,269.3726,290.625,273.5392,286.4583,277.7059,282.2917,273.5392" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="297.9167" y="281.4921">PrimitiveListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="316.6667" y1="237.6719" y2="237.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="319.7917" y="241.4815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="404.1667" x2="444.7917" y1="237.6719" y2="237.6719"/><!--MD5=[75065b1bcb02c7fff44ff872d59c0201]
class IntLinkedListStore--><rect codeLine="8" fill="#282828" height="245.5037" id="IntLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="9.375" y="377.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="9.375" y="377.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="9.375" y="400.7161"/><rect codeLine="8" fill="none" height="245.5037" id="IntLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="9.375" y="377.6611"/><ellipse cx="109.375" cy="393.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M111.2854,397.7804 Q110.8582,398.0001 110.3882,398.1099 Q109.9182,398.2198 109.3994,398.2198 Q107.5562,398.2198 106.5857,397.0052 Q105.6152,395.7906 105.6152,393.4957 Q105.6152,391.1947 106.5857,389.9801 Q107.5562,388.7655 109.3994,388.7655 Q109.9182,388.7655 110.3943,388.8753 Q110.8704,388.9852 111.2854,389.2049 L111.2854,391.2069 Q110.8215,390.7796 110.3851,390.5813 Q109.9487,390.3829 109.4849,390.3829 Q108.4961,390.3829 107.9926,391.1672 Q107.489,391.9515 107.489,393.4957 Q107.489,395.0338 107.9926,395.8181 Q108.4961,396.6024 109.4849,396.6024 Q109.9487,396.6024 110.3851,396.404 Q110.8215,396.2056 111.2854,395.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="118.75" x="132.2917" y="398.0794">IntLinkedListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="341.6667" y1="409.0495" y2="409.0495"/><polygon fill="#FFFF44" points="20.8333,439.211,25,443.3777,20.8333,447.5444,16.6667,443.3777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="32.2917" y="451.3306">IntLinkedListStore()</text><ellipse cx="20.8333" cy="464.1642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="32.2917" y="471.0754">IntLinkedListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="132.2917" y1="427.2552" y2="427.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="135.4167" y="431.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="219.7917" x2="341.6667" y1="427.2552" y2="427.2552"/><ellipse cx="20.8333" cy="507.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="32.2917" y="514.7319">int add(int list, int value)</text><ellipse cx="20.8333" cy="527.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="32.2917" y="534.4767">int addAll(int list, int[] values)</text><ellipse cx="20.8333" cy="547.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="32.2917" y="554.2216">int addAll(int list, IntArray values)</text><ellipse cx="20.8333" cy="567.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="32.2917" y="573.9665">int addAll(int list, List&lt;? extends LongValued&gt; values)</text><ellipse cx="20.8333" cy="586.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="32.2917" y="593.7113">IntIterator list(int list)</text><ellipse cx="20.8333" cy="606.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="32.2917" y="613.4562">int remove(int list, int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="141.6667" y1="490.6565" y2="490.6565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="144.7917" y="494.4661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="210.4167" x2="341.6667" y1="490.6565" y2="490.6565"/><!--MD5=[b1ad2c09d1ed1c99f3fced075aa7735e]
class LongLinkedListStore--><rect codeLine="23" fill="#282828" height="245.5037" id="LongLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="379.1667" y="377.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="379.1667" y="377.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="379.1667" y="400.7161"/><rect codeLine="23" fill="none" height="245.5037" id="LongLinkedListStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="379.1667" y="377.6611"/><ellipse cx="471.875" cy="393.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M473.7854,397.7804 Q473.3582,398.0001 472.8882,398.1099 Q472.4182,398.2198 471.8994,398.2198 Q470.0562,398.2198 469.0857,397.0052 Q468.1152,395.7906 468.1152,393.4957 Q468.1152,391.1947 469.0857,389.9801 Q470.0562,388.7655 471.8994,388.7655 Q472.4182,388.7655 472.8943,388.8753 Q473.3704,388.9852 473.7854,389.2049 L473.7854,391.2069 Q473.3215,390.7796 472.8851,390.5813 Q472.4487,390.3829 471.9849,390.3829 Q470.9961,390.3829 470.4926,391.1672 Q469.989,391.9515 469.989,393.4957 Q469.989,395.0338 470.4926,395.8181 Q470.9961,396.6024 471.9849,396.6024 Q472.4487,396.6024 472.8851,396.404 Q473.3215,396.2056 473.7854,395.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="494.7917" y="398.0794">LongLinkedListStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="380.2083" x2="711.4583" y1="409.0495" y2="409.0495"/><polygon fill="#FFFF44" points="390.625,439.211,394.7917,443.3777,390.625,447.5444,386.4583,443.3777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="402.0833" y="451.3306">LongLinkedListStore()</text><ellipse cx="390.625" cy="464.1642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="402.0833" y="471.0754">LongLinkedListStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="380.2083" x2="502.0833" y1="427.2552" y2="427.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="505.2083" y="431.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="589.5833" x2="711.4583" y1="427.2552" y2="427.2552"/><ellipse cx="390.625" cy="507.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="402.0833" y="514.7319">int add(int list, long value)</text><ellipse cx="390.625" cy="527.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="402.0833" y="534.4767">int addAll(int list, LongArray values)</text><ellipse cx="390.625" cy="547.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="402.0833" y="554.2216">int addAll(int list, List&lt;? extends LongValued&gt; values)</text><ellipse cx="390.625" cy="567.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="402.0833" y="573.9665">int addAll(int list, long[] values)</text><ellipse cx="390.625" cy="586.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="402.0833" y="593.7113">LongIterator list(int list)</text><ellipse cx="390.625" cy="606.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="402.0833" y="613.4562">int remove(int list, long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="380.2083" x2="511.4583" y1="490.6565" y2="490.6565"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="514.5833" y="494.4661">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="580.2083" x2="711.4583" y1="490.6565" y2="490.6565"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect fill="#282828" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="392.7083" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="392.7083" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="392.7083" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="392.7083" y="53.7028"/><ellipse cx="407.2917" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M409.2021,73.822 Q408.7748,74.0417 408.3049,74.1516 Q407.8349,74.2615 407.3161,74.2615 Q405.4728,74.2615 404.5024,73.0469 Q403.5319,71.8323 403.5319,69.5374 Q403.5319,67.2363 404.5024,66.0217 Q405.4728,64.8071 407.3161,64.8071 Q407.8349,64.8071 408.311,64.917 Q408.787,65.0269 409.2021,65.2466 L409.2021,67.2485 Q408.7382,66.8213 408.3018,66.6229 Q407.8654,66.4246 407.4015,66.4246 Q406.4128,66.4246 405.9092,67.2089 Q405.4057,67.9932 405.4057,69.5374 Q405.4057,71.0754 405.9092,71.8597 Q406.4128,72.644 407.4015,72.644 Q407.8654,72.644 408.3018,72.4457 Q408.7382,72.2473 409.2021,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="423.9583" y="74.1211">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="393.75" x2="552.0833" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="393.75" x2="552.0833" y1="93.4245" y2="93.4245"/><!--MD5=[a192263c379fea8353f33469688a3a00]
class PackedStringStore--><rect codeLine="38" fill="#282828" height="150.946" id="PackedStringStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="205.2083" x="482.8125" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="205.2083" x="482.8125" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="205.2083" x="482.8125" y="187.1745"/><rect codeLine="38" fill="none" height="150.946" id="PackedStringStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="205.2083" x="482.8125" y="164.1195"/><ellipse cx="520.3646" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M522.275,184.2387 Q521.8477,184.4584 521.3778,184.5683 Q520.9078,184.6781 520.389,184.6781 Q518.5457,184.6781 517.5753,183.4635 Q516.6048,182.2489 516.6048,179.954 Q516.6048,177.653 517.5753,176.4384 Q518.5457,175.2238 520.389,175.2238 Q520.9078,175.2238 521.3839,175.3337 Q521.8599,175.4435 522.275,175.6632 L522.275,177.6652 Q521.8111,177.238 521.3747,177.0396 Q520.9383,176.8412 520.4744,176.8412 Q519.4857,176.8412 518.9821,177.6255 Q518.4786,178.4098 518.4786,179.954 Q518.4786,181.4921 518.9821,182.2764 Q519.4857,183.0607 520.4744,183.0607 Q520.9383,183.0607 521.3747,182.8623 Q521.8111,182.664 522.275,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="116.6667" x="542.1354" y="184.5378">PackedStringStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="483.8542" x2="686.9792" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="494.2708,225.6694,498.4375,229.836,494.2708,234.0027,490.1042,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="505.7292" y="237.7889">PackedStringStore()</text><ellipse cx="494.2708" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="505.7292" y="257.5338">PackedStringStore(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.8542" x2="541.6667" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="544.7917" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="629.1667" x2="686.9792" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.8542" x2="686.9792" y1="267.2424" y2="267.2424"/><ellipse cx="494.2708" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="505.7292" y="285.612">String get(int index)</text><ellipse cx="494.2708" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="505.7292" y="305.3569">void set(int index, String value)</text><!--MD5=[287f07e99e3168d8bf4806b9d451a57b]
reverse link PrimitiveListStore to IntLinkedListStore--><path codeLine="7" d="M311.4271,309.4632 C296.5521,330.3382 279.7396,353.9424 263.1563,377.234 " fill="none" id="PrimitiveListStore-backto-IntLinkedListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="305.2708,305.5361,323.2917,292.7965,317.1458,313.9945,305.2708,305.5361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[439f4a22ea250237543f85a4b5bf6a2d]
reverse link PrimitiveListStore to LongLinkedListStore--><path codeLine="22" d="M409.6875,309.4632 C424.6354,330.3382 441.5417,353.9424 458.2292,377.234 " fill="none" id="PrimitiveListStore-backto-LongLinkedListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="403.9479,313.984,397.75,292.7965,415.8021,305.484,403.9479,313.984" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[679faf84d1bf0fad9c2144a3e0ee22c6]
reverse link PrimitiveCollection to PackedStringStore--><path codeLine="37" d="M501.9271,119.932 C511.3333,133.2965 522.0729,148.5674 532.6563,163.609 " fill="none" id="PrimitiveCollection-backto-PackedStringStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="496.2083,124.4736,490.1875,103.2445,508.1354,116.0882,496.2083,124.4736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5b01147b9696bc5e513fdf087ac8028b]
reverse link PrimitiveCollection to PrimitiveListStore--><path codeLine="48" d="M443.8021,120.0778 C429.3125,140.682 411.6458,165.7861 396.3125,187.5778 " fill="none" id="PrimitiveCollection-backto-PrimitiveListStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="437.6979,116.0882,455.6458,103.2445,449.625,124.4736,437.6979,116.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[af9c4c0a69186e3d48973037db62c0a2]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.primitive.collections.list.store"
    
    PrimitiveListStore <|- - IntLinkedListStore
    class IntLinkedListStore
    {
        - -(constructors)- -
        #IntLinkedListStore()
        +IntLinkedListStore(String)
        - -(collection)- -
        +int add(int list, int value)
        +int addAll(int list, int[] values)
        +int addAll(int list, IntArray values)
        +int addAll(int list, List<? extends LongValued> values)
        +IntIterator list(int list)
        +int remove(int list, int value)
    }
    
    PrimitiveListStore <|- - LongLinkedListStore
    class LongLinkedListStore
    {
        - -(constructors)- -
        #LongLinkedListStore()
        +LongLinkedListStore(String)
        - -(collection)- -
        +int add(int list, long value)
        +int addAll(int list, LongArray values)
        +int addAll(int list, List<? extends LongValued> values)
        +int addAll(int list, long[] values)
        +LongIterator list(int list)
        +int remove(int list, long value)
    }
    
    PrimitiveCollection <|- - PackedStringStore
    class PackedStringStore
    {
        - -(constructors)- -
        #PackedStringStore()
        +PackedStringStore(String)
        - -
        +String get(int index)
        +void set(int index, String value)
    }
    
    PrimitiveCollection <|- - PrimitiveListStore
    abstract class PrimitiveListStore
    {
        - -(constructors)- -
        #PrimitiveListStore()
        #PrimitiveListStore(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.primitive.collections.list.store"
    
    PrimitiveListStore <|- - IntLinkedListStore
    class IntLinkedListStore
    {
        - -(constructors)- -
        #IntLinkedListStore()
        +IntLinkedListStore(String)
        - -(collection)- -
        +int add(int list, int value)
        +int addAll(int list, int[] values)
        +int addAll(int list, IntArray values)
        +int addAll(int list, List<? extends LongValued> values)
        +IntIterator list(int list)
        +int remove(int list, int value)
    }
    
    PrimitiveListStore <|- - LongLinkedListStore
    class LongLinkedListStore
    {
        - -(constructors)- -
        #LongLinkedListStore()
        +LongLinkedListStore(String)
        - -(collection)- -
        +int add(int list, long value)
        +int addAll(int list, LongArray values)
        +int addAll(int list, List<? extends LongValued> values)
        +int addAll(int list, long[] values)
        +LongIterator list(int list)
        +int remove(int list, long value)
    }
    
    PrimitiveCollection <|- - PackedStringStore
    class PackedStringStore
    {
        - -(constructors)- -
        #PackedStringStore()
        +PackedStringStore(String)
        - -
        +String get(int index)
        +void set(int index, String value)
    }
    
    PrimitiveCollection <|- - PrimitiveListStore
    abstract class PrimitiveListStore
    {
        - -(constructors)- -
        #PrimitiveListStore()
        #PrimitiveListStore(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>