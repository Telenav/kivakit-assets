<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="859.375px" preserveAspectRatio="none" style="width:1094px;height:859px;background:#333333;" version="1.1" viewBox="0 0 1094 859" width="1094.7917px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="484.375" x="297.9167" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="461.4583" x="309.375" y="30.5583">com.telenav.kivakit.microservice.internal.yaml</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="7" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="445.3125" y="207.8695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="445.3125" y="207.8695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="445.3125" y="230.9245"/><rect codeLine="7" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="445.3125" y="207.8695"/><ellipse cx="459.8958" cy="223.5636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M457.2998,220.7255 L457.2998,219.1386 L462.7258,219.1386 L462.7258,220.7255 L460.9131,220.7255 L460.9131,226.6642 L462.7258,226.6642 L462.7258,228.2511 L457.2998,228.2511 L457.2998,226.6642 L459.1125,226.6642 L459.1125,220.7255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="476.5625" y="228.2878">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="446.3542" x2="526.5625" y1="239.2578" y2="239.2578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="446.3542" x2="526.5625" y1="247.5911" y2="247.5911"/><!--MD5=[8553026b4a6b5c78b2332de6d31fce90]
class Yaml--><rect codeLine="9" fill="#282828" height="356.7281" id="Yaml" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="265.625" x="564.0625" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="265.625" x="564.0625" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="265.625" x="564.0625" y="76.7578"/><rect codeLine="9" fill="none" height="356.7281" id="Yaml" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="265.625" x="564.0625" y="53.7028"/><ellipse cx="673.4375" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M675.3479,73.822 Q674.9207,74.0417 674.4507,74.1516 Q673.9807,74.2615 673.4619,74.2615 Q671.6187,74.2615 670.6482,73.0469 Q669.6777,71.8323 669.6777,69.5374 Q669.6777,67.2363 670.6482,66.0217 Q671.6187,64.8071 673.4619,64.8071 Q673.9807,64.8071 674.4568,64.917 Q674.9329,65.0269 675.3479,65.2466 L675.3479,67.2485 Q674.884,66.8213 674.4476,66.6229 Q674.0112,66.4246 673.5474,66.4246 Q672.5586,66.4246 672.0551,67.2089 Q671.5515,67.9932 671.5515,69.5374 Q671.5515,71.0754 672.0551,71.8597 Q672.5586,72.644 673.5474,72.644 Q674.0112,72.644 674.4476,72.4457 Q674.884,72.2473 675.3479,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="32.2917" x="696.3542" y="74.1211">Yaml</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="565.1042" x2="828.6458" y1="85.0911" y2="85.0911"/><ellipse cx="575.5208" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="586.9792" y="127.3722">Yaml(Yaml)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="565.1042" x2="653.125" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="656.25" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="740.625" x2="828.6458" y1="103.2969" y2="103.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="565.1042" x2="828.6458" y1="137.0809" y2="137.0809"/><ellipse cx="575.5208" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="586.9792" y="155.4504">Yaml with(String text)</text><ellipse cx="575.5208" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="586.9792" y="175.1953">Yaml yaml()</text><ellipse cx="575.5208" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="586.9792" y="218.8517">Yaml copy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="565.1042" x2="661.4583" y1="194.7764" y2="194.7764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="664.5833" y="198.586">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="732.2917" x2="828.6458" y1="194.7764" y2="194.7764"/><ellipse cx="575.5208" cy="255.5969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="87.5" x="586.9792" y="262.5081">Yaml indented()</text><ellipse cx="575.5208" cy="275.3418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="586.9792" y="282.253">Yaml outdented()</text><ellipse cx="575.5208" cy="295.0867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="586.9792" y="301.9979">Yaml withBlock(String label, Yaml)</text><ellipse cx="575.5208" cy="314.8315" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="586.9792" y="321.7428">Yaml withLabel(String text)</text><ellipse cx="575.5208" cy="334.5764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="586.9792" y="341.4876">Yaml withLiteral(String key, String value)</text><ellipse cx="575.5208" cy="354.3213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="586.9792" y="361.2325">Yaml withPrefixed(String prefix, Yaml)</text><ellipse cx="575.5208" cy="374.0662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="233.3333" x="586.9792" y="380.9774">Yaml withScalar(String key, Number value)</text><ellipse cx="575.5208" cy="393.811" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="586.9792" y="400.7222">Yaml withScalar(String key, String value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="565.1042" x2="661.4583" y1="238.4328" y2="238.4328"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="664.5833" y="242.2424">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="732.2917" x2="828.6458" y1="238.4328" y2="238.4328"/><!--MD5=[c7b9874db900c11613f4491a9cd3e758]
class YamlNode--><rect codeLine="61" fill="#282828" height="127.0345" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="421.3542" y="472.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="421.3542" y="472.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="421.3542" y="495.5078"/><rect codeLine="61" fill="none" height="127.0345" id="YamlNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="421.3542" y="472.4528"/><ellipse cx="448.125" cy="488.147" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M447.7181,484.849 L446.8697,488.5783 L448.5726,488.5783 Z M446.6195,483.2011 L448.8228,483.2011 L451.2826,492.3136 L449.482,492.3136 L448.9205,490.0614 L446.5096,490.0614 L445.9603,492.3136 L444.1597,492.3136 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="467.5" y="492.8711">YamlNode</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="422.3958" x2="550.5208" y1="503.8411" y2="503.8411"/><ellipse cx="432.8125" cy="539.211" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="444.2708" y="546.1222">YamlNode(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="422.3958" x2="442.7083" y1="522.0469" y2="522.0469"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="445.8333" y="525.8565">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="530.2083" x2="550.5208" y1="522.0469" y2="522.0469"/><polygon fill="#FFFF44" points="432.8125,577.6591,436.9792,581.8258,432.8125,585.9924,428.6458,581.8258" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="444.2708" y="589.7786">Yaml asYaml()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="422.3958" x2="447.9167" y1="565.7033" y2="565.7033"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="451.0417" y="569.5129">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525" x2="550.5208" y1="565.7033" y2="565.7033"/><!--MD5=[b6458320635909f60e208a8315da07f3]
class YamlArray--><rect codeLine="30" fill="#282828" height="122.8678" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="695.8903"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="695.8903"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="718.9453"/><rect codeLine="30" fill="none" height="122.8678" id="YamlArray" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="197.9167" x="7.2917" y="695.8903"/><ellipse cx="65.625" cy="711.5845" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M67.5354,716.0095 Q67.1082,716.2292 66.6382,716.3391 Q66.1682,716.449 65.6494,716.449 Q63.8062,716.449 62.8357,715.2344 Q61.8652,714.0198 61.8652,711.7249 Q61.8652,709.4238 62.8357,708.2092 Q63.8062,706.9946 65.6494,706.9946 Q66.1682,706.9946 66.6443,707.1045 Q67.1204,707.2144 67.5354,707.4341 L67.5354,709.436 Q67.0715,709.0088 66.6351,708.8104 Q66.1987,708.6121 65.7349,708.6121 Q64.7461,708.6121 64.2426,709.3964 Q63.739,710.1807 63.739,711.7249 Q63.739,713.2629 64.2426,714.0472 Q64.7461,714.8315 65.7349,714.8315 Q66.1987,714.8315 66.6351,714.6332 Q67.0715,714.4348 67.5354,714.0076 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="88.5417" y="716.3086">YamlArray</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="204.1667" y1="727.2786" y2="727.2786"/><ellipse cx="18.75" cy="762.6485" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="30.2083" y="769.5597">YamlArray array(String name)</text><ellipse cx="18.75" cy="782.3934" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="30.2083" y="789.3046">YamlArray copy()</text><ellipse cx="18.75" cy="802.1383" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="30.2083" y="809.0495">YamlArray with(YamlNode)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="71.875" y1="745.4844" y2="745.4844"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="75" y="749.294">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="140.625" x2="204.1667" y1="745.4844" y2="745.4844"/><!--MD5=[66a25c763ed576eb2bc685155ff31bb7]
class YamlBlock--><rect codeLine="39" fill="#282828" height="190.4358" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="209.375" x="242.1875" y="662.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="209.375" x="242.1875" y="662.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="209.375" x="242.1875" y="685.0911"/><rect codeLine="39" fill="none" height="190.4358" id="YamlBlock" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="209.375" x="242.1875" y="662.0361"/><ellipse cx="305.7292" cy="677.7303" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M307.6396,682.1554 Q307.2123,682.3751 306.7424,682.4849 Q306.2724,682.5948 305.7536,682.5948 Q303.9103,682.5948 302.9399,681.3802 Q301.9694,680.1656 301.9694,677.8707 Q301.9694,675.5697 302.9399,674.3551 Q303.9103,673.1405 305.7536,673.1405 Q306.2724,673.1405 306.7485,673.2503 Q307.2245,673.3602 307.6396,673.5799 L307.6396,675.5819 Q307.1757,675.1546 306.7393,674.9563 Q306.3029,674.7579 305.839,674.7579 Q304.8503,674.7579 304.3467,675.5422 Q303.8432,676.3265 303.8432,677.8707 Q303.8432,679.4088 304.3467,680.1931 Q304.8503,680.9774 305.839,680.9774 Q306.3029,680.9774 306.7393,680.779 Q307.1757,680.5806 307.6396,680.1534 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="67.7083" x="328.6458" y="682.4544">YamlBlock</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="243.2292" x2="450.5208" y1="693.4245" y2="693.4245"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="243.2292" x2="450.5208" y1="701.7578" y2="701.7578"/><ellipse cx="253.6458" cy="713.2161" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="265.1042" y="720.1274">YamlBlock block(String name)</text><ellipse cx="253.6458" cy="732.961" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="265.1042" y="739.8722">YamlBlock block()</text><ellipse cx="253.6458" cy="752.7059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="265.1042" y="759.6171">YamlNode get(String name)</text><ellipse cx="253.6458" cy="772.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="265.1042" y="779.362">boolean has(String name)</text><ellipse cx="253.6458" cy="792.1956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="265.1042" y="799.1069">YamlBlock with(YamlNode child)</text><ellipse cx="253.6458" cy="835.8521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="265.1042" y="842.7633">YamlBlock copy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="243.2292" x2="311.4583" y1="818.6879" y2="818.6879"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="314.5833" y="822.4976">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="382.2917" x2="450.5208" y1="818.6879" y2="818.6879"/><!--MD5=[f1b95bf9207b3eab74dd96efa6f5af2f]
class YamlLiteral--><rect codeLine="52" fill="#282828" height="111.4563" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="488.5417" y="701.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="488.5417" y="701.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="488.5417" y="724.6745"/><rect codeLine="52" fill="none" height="111.4563" id="YamlLiteral" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="488.5417" y="701.6195"/><ellipse cx="582.2917" cy="717.3136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M584.2021,721.7387 Q583.7748,721.9584 583.3049,722.0683 Q582.8349,722.1781 582.3161,722.1781 Q580.4728,722.1781 579.5024,720.9635 Q578.5319,719.7489 578.5319,717.454 Q578.5319,715.153 579.5024,713.9384 Q580.4728,712.7238 582.3161,712.7238 Q582.8349,712.7238 583.311,712.8337 Q583.787,712.9435 584.2021,713.1632 L584.2021,715.1652 Q583.7382,714.738 583.3018,714.5396 Q582.8654,714.3412 582.4015,714.3412 Q581.4128,714.3412 580.9092,715.1255 Q580.4057,715.9098 580.4057,717.454 Q580.4057,718.9921 580.9092,719.7764 Q581.4128,720.5607 582.4015,720.5607 Q582.8654,720.5607 583.3018,720.3623 Q583.7382,720.164 584.2021,719.7367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="72.9167" x="605.2083" y="722.0378">YamlLiteral</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="489.5833" x2="762.5" y1="733.0078" y2="733.0078"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="489.5833" x2="762.5" y1="741.3411" y2="741.3411"/><ellipse cx="500" cy="752.7995" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="242.7083" x="511.4583" y="759.7107">YamlLiteral literal(String name, String value)</text><ellipse cx="500" cy="796.4559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="511.4583" y="803.3671">String value()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="489.5833" x2="591.6667" y1="779.2918" y2="779.2918"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="594.7917" y="783.1014">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="660.4167" x2="762.5" y1="779.2918" y2="779.2918"/><!--MD5=[0af342a0315717a4a2eee0dd5076e71f]
class YamlScalar--><rect codeLine="70" fill="#282828" height="170.6909" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="800" y="671.932"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="800" y="671.932"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="800" y="694.987"/><rect codeLine="70" fill="none" height="170.6909" id="YamlScalar" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="800" y="671.932"/><ellipse cx="901.5625" cy="687.6261" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M903.4729,692.0512 Q903.0457,692.2709 902.5757,692.3808 Q902.1057,692.4906 901.5869,692.4906 Q899.7437,692.4906 898.7732,691.276 Q897.8027,690.0614 897.8027,687.7665 Q897.8027,685.4655 898.7732,684.2509 Q899.7437,683.0363 901.5869,683.0363 Q902.1057,683.0363 902.5818,683.1462 Q903.0579,683.256 903.4729,683.4757 L903.4729,685.4777 Q903.009,685.0505 902.5726,684.8521 Q902.1362,684.6537 901.6724,684.6537 Q900.6836,684.6537 900.1801,685.438 Q899.6765,686.2223 899.6765,687.7665 Q899.6765,689.3046 900.1801,690.0889 Q900.6836,690.8732 901.6724,690.8732 Q902.1362,690.8732 902.5726,690.6748 Q903.009,690.4765 903.4729,690.0492 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="69.7917" x="924.4792" y="692.3503">YamlScalar</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="801.0417" x2="1086.4583" y1="703.3203" y2="703.3203"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="801.0417" x2="1086.4583" y1="711.6536" y2="711.6536"/><ellipse cx="811.4583" cy="723.112" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="822.9167" y="730.0232">Number number()</text><ellipse cx="811.4583" cy="742.8569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="822.9167" y="749.7681">YamlScalar scalar(String name, String value)</text><ellipse cx="811.4583" cy="762.6017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="822.9167" y="769.5129">YamlScalar scalar(String name, Number value)</text><ellipse cx="811.4583" cy="782.3466" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="822.9167" y="789.2578">String string()</text><ellipse cx="811.4583" cy="826.003" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="822.9167" y="832.9142">boolean isNumber()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="801.0417" x2="917.1875" y1="808.8389" y2="808.8389"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="920.3125" y="812.6485">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="970.3125" x2="1086.4583" y1="808.8389" y2="808.8389"/><!--MD5=[db743fea5dab9d20fcb78988eea025c0]
reverse link YamlNode to YamlArray--><path codeLine="29" d="M400.4583,571.9736 C347.8958,594.7861 280.1875,626.7965 223.9583,662.0361 C208.0938,671.9736 191.9167,683.7236 176.8229,695.484 " fill="none" id="YamlNode-backto-YamlArray" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="397.4167,565.3486,419.4375,563.8695,403.1458,578.7549,397.4167,565.3486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[045de639329415ff06ee9d76e86ea190]
reverse link YamlNode to YamlBlock--><path codeLine="38" d="M434.5938,618.5049 C425.6667,632.5361 416.3125,647.234 407.1771,661.5778 " fill="none" id="YamlNode-backto-YamlBlock" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="428.2708,614.859,445.6146,601.2028,440.5729,622.6924,428.2708,614.859" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfb97e969cafb16af26be83e042869b9]
reverse link YamlNode to YamlLiteral--><path codeLine="51" d="M538.3021,618.4736 C555.875,646.0778 575.0729,676.2445 591.0208,701.2965 " fill="none" id="YamlNode-backto-YamlLiteral" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="532.3438,622.6924,527.3021,601.2028,544.6458,614.859,532.3438,622.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7a32146df0f83c0cea3910c19cc3c22a]
reverse link Named to YamlNode--><path codeLine="60" d="M486.4583,278.1611 C486.4583,329.7236 486.4583,414.2861 486.4583,472.182 " fill="none" id="Named-backto-YamlNode" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="479.1667,278.484,486.4583,257.6507,493.75,278.484,479.1667,278.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[37cb950b669d7cd1f5c0a21138fddc5e]
reverse link YamlNode to YamlScalar--><path codeLine="69" d="M572.4792,569.9736 C632.2292,593.682 713.1979,627.4528 782.2917,662.0361 C788.3854,665.0882 794.5729,668.2757 800.7813,671.5465 " fill="none" id="YamlNode-backto-YamlScalar" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="570.0729,576.8695,553.3542,562.4528,575.4063,563.2965,570.0729,576.8695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6b34b37a0a0ed6f6832cca038c139d74]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.microservice.internal.yaml"
    
    interface Named
    
    class Yaml
    {
        - -(constructors)- -
        +Yaml(Yaml)
        - -
        +Yaml with(String text)
        +Yaml yaml()
        - -(filesystem)- -
        +Yaml copy()
        - -(functional)- -
        +Yaml indented()
        +Yaml outdented()
        +Yaml withBlock(String label, Yaml)
        +Yaml withLabel(String text)
        +Yaml withLiteral(String key, String value)
        +Yaml withPrefixed(String prefix, Yaml)
        +Yaml withScalar(String key, Number value)
        +Yaml withScalar(String key, String value)
    }
    
    YamlNode <|- - YamlArray
    class YamlArray
    {
        - -(collection)- -
        +YamlArray array(String name)
        +YamlArray copy()
        +YamlArray with(YamlNode)
    }
    
    YamlNode <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlBlock block()
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlBlock with(YamlNode child)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -
        +YamlLiteral literal(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        +YamlNode(String)
        - -(conversion)- -
        #Yaml asYaml()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -
        +Number number()
        +YamlScalar scalar(String name, String value)
        +YamlScalar scalar(String name, Number value)
        +String string()
        - -(checks)- -
        +boolean isNumber()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.microservice.internal.yaml"
    
    interface Named
    
    class Yaml
    {
        - -(constructors)- -
        +Yaml(Yaml)
        - -
        +Yaml with(String text)
        +Yaml yaml()
        - -(filesystem)- -
        +Yaml copy()
        - -(functional)- -
        +Yaml indented()
        +Yaml outdented()
        +Yaml withBlock(String label, Yaml)
        +Yaml withLabel(String text)
        +Yaml withLiteral(String key, String value)
        +Yaml withPrefixed(String prefix, Yaml)
        +Yaml withScalar(String key, Number value)
        +Yaml withScalar(String key, String value)
    }
    
    YamlNode <|- - YamlArray
    class YamlArray
    {
        - -(collection)- -
        +YamlArray array(String name)
        +YamlArray copy()
        +YamlArray with(YamlNode)
    }
    
    YamlNode <|- - YamlBlock
    class YamlBlock
    {
        - -
        +YamlBlock block(String name)
        +YamlBlock block()
        +YamlNode get(String name)
        +boolean has(String name)
        +YamlBlock with(YamlNode child)
        - -(filesystem)- -
        +YamlBlock copy()
    }
    
    YamlNode <|- - YamlLiteral
    class YamlLiteral
    {
        - -
        +YamlLiteral literal(String name, String value)
        - -(collection)- -
        +String value()
    }
    
    Named <|- - YamlNode
    abstract class YamlNode
    {
        - -(constructors)- -
        +YamlNode(String)
        - -(conversion)- -
        #Yaml asYaml()
    }
    
    YamlNode <|- - YamlScalar
    class YamlScalar
    {
        - -
        +Number number()
        +YamlScalar scalar(String name, String value)
        +YamlScalar scalar(String name, Number value)
        +String string()
        - -(checks)- -
        +boolean isNumber()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>