<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1131.25px" preserveAspectRatio="none" style="width:1851px;height:1131px;background:#333333;" version="1.1" viewBox="0 0 1851 1131" width="1851.0417px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="214.5833" x="810.9375" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="191.6667" x="822.3958" y="30.5583">diagram-collection</text><!--MD5=[5e463fd67dc3ff32b2d11c76d194be76]
class SpaceLimited--><rect codeLine="82" fill="#282828" height="48.055" id="SpaceLimited" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="122.9167" x="760.4167" y="94.3278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="122.9167" x="760.4167" y="94.3278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="122.9167" x="760.4167" y="117.3828"/><rect codeLine="82" fill="none" height="48.055" id="SpaceLimited" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="122.9167" x="760.4167" y="94.3278"/><ellipse cx="775" cy="110.022" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M772.404,107.1838 L772.404,105.5969 L777.83,105.5969 L777.83,107.1838 L776.0173,107.1838 L776.0173,113.1226 L777.83,113.1226 L777.83,114.7095 L772.404,114.7095 L772.404,113.1226 L774.2167,113.1226 L774.2167,107.1838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="85.4167" x="791.6667" y="114.7461">SpaceLimited</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="882.2917" y1="125.7161" y2="125.7161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="882.2917" y1="134.0495" y2="134.0495"/><!--MD5=[93b6c7fd318afcbb262a6b60625b068e]
class Addable--><rect codeLine="9" fill="#282828" height="280.8268" id="Addable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="444.7917" x="138.0208" y="339.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="444.7917" x="138.0208" y="339.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="444.7917" x="138.0208" y="362.1745"/><rect codeLine="9" fill="none" height="280.8268" id="Addable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="444.7917" x="138.0208" y="339.1195"/><ellipse cx="303.6458" cy="354.8136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M301.0498,351.9755 L301.0498,350.3886 L306.4758,350.3886 L306.4758,351.9755 L304.6631,351.9755 L304.6631,357.9142 L306.4758,357.9142 L306.4758,359.5011 L301.0498,359.5011 L301.0498,357.9142 L302.8625,357.9142 L302.8625,351.9755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="53.125" x="326.5625" y="359.5378">Addable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="542.1875" y="335.9945"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="546.3542" y="352.2461">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="139.0625" x2="581.7708" y1="370.5078" y2="370.5078"/><ellipse cx="149.4792" cy="405.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="160.9375" y="412.7889">boolean add(Value)</text><ellipse cx="149.4792" cy="425.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="291.6667" x="160.9375" y="432.5338">boolean addAll(Collection&lt;? extends Value&gt; values)</text><ellipse cx="149.4792" cy="445.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="160.9375" y="452.2786">boolean addAll(Iterator&lt;? extends Value&gt; values)</text><ellipse cx="149.4792" cy="465.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="168.75" x="160.9375" y="472.0235">boolean addAll(Value[] values)</text><ellipse cx="149.4792" cy="484.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="160.9375" y="491.7684">boolean addAll(Iterable&lt;? extends Value&gt; values)</text><ellipse cx="149.4792" cy="504.6021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="397.9167" x="160.9375" y="511.5133">int addAllMatching(Iterable&lt;? extends Value&gt; values, Matcher&lt;Value&gt;)</text><ellipse cx="149.4792" cy="524.3469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="412.5" x="160.9375" y="531.2581">int addAllMatching(Collection&lt;? extends Value&gt; values, Matcher&lt;Value&gt;)</text><ellipse cx="149.4792" cy="544.0918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="160.9375" y="551.003">int addAllMatching(Value[] values, Matcher&lt;Value&gt;)</text><ellipse cx="149.4792" cy="563.8367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="397.9167" x="160.9375" y="570.7479">int addAllMatching(Iterator&lt;? extends Value&gt; values, Matcher&lt;Value&gt;)</text><ellipse cx="149.4792" cy="583.5815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="160.9375" y="590.4928">boolean addIfNotNull(Value)</text><ellipse cx="149.4792" cy="603.3264" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="160.9375" y="610.2376">boolean onAdd(Value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="139.0625" x2="326.0417" y1="388.7136" y2="388.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="329.1667" y="392.5232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="394.7917" x2="581.7708" y1="388.7136" y2="388.7136"/><!--MD5=[59312cb208dc5ccc3a278aa57714242f]
class Appendable--><rect codeLine="27" fill="#282828" height="313.0717" id="Appendable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="619.7917" y="322.9736"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="619.7917" y="322.9736"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="404.1667" x="619.7917" y="346.0286"/><rect codeLine="27" fill="none" height="313.0717" id="Appendable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="404.1667" x="619.7917" y="322.9736"/><ellipse cx="753.125" cy="338.6678" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M750.529,335.8297 L750.529,334.2428 L755.955,334.2428 L755.955,335.8297 L754.1423,335.8297 L754.1423,341.7684 L755.955,341.7684 L755.955,343.3553 L750.529,343.3553 L750.529,341.7684 L752.3417,341.7684 L752.3417,335.8297 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="77.0833" x="776.0417" y="343.3919">Appendable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="983.3333" y="319.8486"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="987.5" y="336.1003">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="620.8333" x2="1022.9167" y1="354.362" y2="354.362"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="620.8333" x2="1022.9167" y1="362.6953" y2="362.6953"/><ellipse cx="631.25" cy="374.1536" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="642.7083" y="381.0649">boolean append(Value)</text><ellipse cx="631.25" cy="393.8985" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="642.7083" y="400.8097">boolean appendAll(Collection&lt;? extends Value&gt; values)</text><ellipse cx="631.25" cy="413.6434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="642.7083" y="420.5546">boolean appendAll(Iterable&lt;? extends Value&gt; values)</text><ellipse cx="631.25" cy="433.3883" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="642.7083" y="440.2995">boolean appendAll(Value[] values)</text><ellipse cx="631.25" cy="453.1331" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="642.7083" y="460.0444">boolean appendAll(Iterator&lt;? extends Value&gt; values)</text><ellipse cx="631.25" cy="472.878" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="642.7083" y="479.7892">boolean appendIfNotNull(Value)</text><ellipse cx="631.25" cy="492.6229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="216.6667" x="642.7083" y="499.5341">Appendable&lt;Value&gt; appending(Value)</text><ellipse cx="631.25" cy="512.3678" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="371.875" x="642.7083" y="519.279">Appendable&lt;Value&gt; appending(Iterable&lt;? extends Value&gt; values)</text><ellipse cx="631.25" cy="532.1126" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="265.625" x="642.7083" y="539.0238">Appendable&lt;Value&gt; appendingIfNotNull(Value)</text><ellipse cx="631.25" cy="575.769" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="642.7083" y="582.6803">void push(Value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="620.8333" x2="787.5" y1="558.6049" y2="558.6049"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="790.625" y="562.4146">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="856.25" x2="1022.9167" y1="558.6049" y2="558.6049"/><ellipse cx="631.25" cy="619.4255" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="642.7083" y="626.3367">boolean onAppend(Value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="620.8333" x2="767.7083" y1="602.2614" y2="602.2614"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="770.8333" y="606.071">(extension points)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="876.0417" x2="1022.9167" y1="602.2614" y2="602.2614"/><!--MD5=[f7c8027e5fe893b551cd400892f8837b]
class Clearable--><rect codeLine="45" fill="#282828" height="83.3781" id="Clearable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="97.9167" x="7.2917" y="76.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="97.9167" x="7.2917" y="76.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="97.9167" x="7.2917" y="99.6745"/><rect codeLine="45" fill="none" height="83.3781" id="Clearable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="97.9167" x="7.2917" y="76.6195"/><ellipse cx="21.875" cy="92.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M19.279,89.4755 L19.279,87.8886 L24.705,87.8886 L24.705,89.4755 L22.8923,89.4755 L22.8923,95.4142 L24.705,95.4142 L24.705,97.0011 L19.279,97.0011 L19.279,95.4142 L21.0917,95.4142 L21.0917,89.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60.4167" x="38.5417" y="97.0378">Clearable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="104.1667" y1="108.0078" y2="108.0078"/><ellipse cx="18.75" cy="143.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="30.2083" y="150.2889">void clear()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="21.875" y1="126.2136" y2="126.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="25" y="130.0232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="90.625" x2="104.1667" y1="126.2136" y2="126.2136"/><!--MD5=[8dd69abe0a0990be8af5a76a28248f99]
class Contains--><rect codeLine="51" fill="#282828" height="122.8678" id="Contains" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="294.7917" x="142.1875" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="294.7917" x="142.1875" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="294.7917" x="142.1875" y="79.8828"/><rect codeLine="51" fill="none" height="122.8678" id="Contains" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="294.7917" x="142.1875" y="56.8278"/><ellipse cx="230.2083" cy="72.522" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M227.6123,69.6838 L227.6123,68.0969 L233.0383,68.0969 L233.0383,69.6838 L231.2256,69.6838 L231.2256,75.6226 L233.0383,75.6226 L233.0383,77.2095 L227.6123,77.2095 L227.6123,75.6226 L229.425,75.6226 L229.425,69.6838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="58.3333" x="253.125" y="77.2461">Contains</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="396.3542" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="400.5208" y="69.9544">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="143.2292" x2="435.9375" y1="88.2161" y2="88.2161"/><ellipse cx="153.6458" cy="123.586" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="165.1042" y="130.4972">boolean contains(Value)</text><ellipse cx="153.6458" cy="143.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="165.1042" y="150.2421">boolean containsAll(Iterable&lt;Value&gt; values)</text><ellipse cx="153.6458" cy="163.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="165.1042" y="169.987">boolean containsNone(Iterable&lt;Value&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="143.2292" x2="255.2083" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="258.3333" y="110.2315">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="323.9583" x2="435.9375" y1="106.4219" y2="106.4219"/><!--MD5=[896702bfce61b73dfbf765415205a76e]
class Sequence--><rect codeLine="101" fill="#282828" height="475.1973" id="Sequence" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1556.25" y="242.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1556.25" y="242.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1556.25" y="265.2995"/><rect codeLine="101" fill="none" height="475.1973" id="Sequence" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1556.25" y="242.2445"/><ellipse cx="1637.5" cy="257.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1634.904,255.1005 L1634.904,253.5136 L1640.33,253.5136 L1640.33,255.1005 L1638.5173,255.1005 L1638.5173,261.0392 L1640.33,261.0392 L1640.33,262.6261 L1634.904,262.6261 L1634.904,261.0392 L1636.7167,261.0392 L1636.7167,255.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60.4167" x="1660.4167" y="262.6628">Sequence</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="1798.9583" y="239.1195"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="1803.125" y="255.3711">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1557.2917" x2="1838.5417" y1="273.6328" y2="273.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1557.2917" x2="1838.5417" y1="281.9661" y2="281.9661"/><ellipse cx="1567.7083" cy="293.4245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1579.1667" y="300.3357">Set&lt;Value&gt; asSet()</text><ellipse cx="1567.7083" cy="313.1694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="1579.1667" y="320.0806">Value head()</text><ellipse cx="1567.7083" cy="356.8258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="1579.1667" y="363.737">boolean isEqualTo(Sequence&lt;Value&gt; that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1557.2917" x2="1671.3542" y1="339.6617" y2="339.6617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1674.4792" y="343.4713">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1724.4792" x2="1838.5417" y1="339.6617" y2="339.6617"/><ellipse cx="1567.7083" cy="400.4822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1579.1667" y="407.3934">int asHashCode()</text><ellipse cx="1567.7083" cy="420.2271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="1579.1667" y="427.1383">Iterable&lt;Value&gt; asIterable()</text><ellipse cx="1567.7083" cy="439.9719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="1579.1667" y="446.8831">Iterable&lt;Value&gt; asIterable(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="459.7168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="1579.1667" y="466.628">Iterator&lt;Value&gt; asIterator()</text><ellipse cx="1567.7083" cy="479.4617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="1579.1667" y="486.3729">Iterator&lt;Value&gt; asIterator(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="499.2065" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1579.1667" y="506.1178">List&lt;Value&gt; asList()</text><ellipse cx="1567.7083" cy="518.9514" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="1579.1667" y="525.8626">Value findFirst(Class&lt;? extends Value&gt; type)</text><ellipse cx="1567.7083" cy="538.6963" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="1579.1667" y="545.6075">Value findFirst(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="558.4412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1579.1667" y="565.3524">Value first()</text><ellipse cx="1567.7083" cy="578.186" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="1579.1667" y="585.0972">int indexOfFirst(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="597.9309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="1579.1667" y="604.8421">int indexOfFirst(Value)</text><ellipse cx="1567.7083" cy="617.6758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="1579.1667" y="624.587">List&lt;Value&gt; tail()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1557.2917" x2="1663.5417" y1="383.3181" y2="383.3181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1666.6667" y="387.1277">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1732.2917" x2="1838.5417" y1="383.3181" y2="383.3181"/><ellipse cx="1567.7083" cy="661.3322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="1579.1667" y="668.2434">boolean allMatch(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="681.0771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="1579.1667" y="687.9883">boolean anyMatch(Matcher&lt;Value&gt;)</text><ellipse cx="1567.7083" cy="700.8219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="1579.1667" y="707.7332">boolean noneMatch(Matcher&lt;Value&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1557.2917" x2="1664.5833" y1="644.1681" y2="644.1681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="1667.7083" y="647.9777">(matching)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1731.25" x2="1838.5417" y1="644.1681" y2="644.1681"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="60" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1447.3958" y="455.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1447.3958" y="455.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1447.3958" y="478.8411"/><rect codeLine="60" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1447.3958" y="455.7861"/><ellipse cx="1461.9792" cy="471.4803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1459.3831,468.6422 L1459.3831,467.0553 L1464.8092,467.0553 L1464.8092,468.6422 L1462.9964,468.6422 L1462.9964,474.5809 L1464.8092,474.5809 L1464.8092,476.1678 L1459.3831,476.1678 L1459.3831,474.5809 L1461.1959,474.5809 L1461.1959,468.6422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="1478.6458" y="476.2044">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1448.4375" x2="1518.2292" y1="487.1745" y2="487.1745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1448.4375" x2="1518.2292" y1="495.5078" y2="495.5078"/><!--MD5=[c18f7ed30c23a7bda252089dc60b3328]
class Indexable--><rect codeLine="127" fill="#282828" height="214.3473" id="Indexable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1439.0625" y="779.7445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1439.0625" y="779.7445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1439.0625" y="802.7995"/><rect codeLine="127" fill="none" height="214.3473" id="Indexable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1439.0625" y="779.7445"/><ellipse cx="1529.1667" cy="795.4386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1526.5706,792.6005 L1526.5706,791.0136 L1531.9967,791.0136 L1531.9967,792.6005 L1530.1839,792.6005 L1530.1839,798.5392 L1531.9967,798.5392 L1531.9967,800.1261 L1526.5706,800.1261 L1526.5706,798.5392 L1528.3834,798.5392 L1528.3834,792.6005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="62.5" x="1552.0833" y="800.1628">Indexable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="1701.5625" y="776.6195"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="1705.7292" y="792.8711">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1440.1042" x2="1741.1458" y1="811.1328" y2="811.1328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1440.1042" x2="1741.1458" y1="819.4661" y2="819.4661"/><ellipse cx="1450.5208" cy="830.9245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="1461.9792" y="837.8357">Value get(int index)</text><ellipse cx="1450.5208" cy="850.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1461.9792" y="857.5806">Value getOrDefault(int index, Value defaultValue)</text><ellipse cx="1450.5208" cy="894.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="1461.9792" y="901.237">boolean endsWith(Indexable&lt;Value&gt; that)</text><ellipse cx="1450.5208" cy="914.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="1461.9792" y="920.9819">boolean isEqualTo(Indexable&lt;Value&gt; that)</text><ellipse cx="1450.5208" cy="933.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="240.625" x="1461.9792" y="940.7267">boolean startsWith(Indexable&lt;Value&gt; that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1440.1042" x2="1564.0625" y1="877.1617" y2="877.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1567.1875" y="880.9713">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1617.1875" x2="1741.1458" y1="877.1617" y2="877.1617"/><ellipse cx="1450.5208" cy="977.4719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="1461.9792" y="984.3831">Value last()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1440.1042" x2="1556.25" y1="960.3078" y2="960.3078"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1559.375" y="964.1174">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1625" x2="1741.1458" y1="960.3078" y2="960.3078"/><!--MD5=[3aae2d7aa0bdc66eea6603f88bae3ecb]
class Indexed--><rect codeLine="76" fill="#282828" height="83.3781" id="Indexed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="89.5833" x="11.4583" y="438.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="89.5833" x="11.4583" y="438.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="89.5833" x="11.4583" y="461.1328"/><rect codeLine="76" fill="none" height="83.3781" id="Indexed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="89.5833" x="11.4583" y="438.0778"/><ellipse cx="26.5104" cy="453.772" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M23.9144,450.9338 L23.9144,449.3469 L29.3404,449.3469 L29.3404,450.9338 L27.5277,450.9338 L27.5277,456.8726 L29.3404,456.8726 L29.3404,458.4595 L23.9144,458.4595 L23.9144,456.8726 L25.7271,456.8726 L25.7271,450.9338 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="51.0417" x="43.2813" y="458.4961">Indexed</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="12.5" x2="100" y1="469.4661" y2="469.4661"/><ellipse cx="22.9167" cy="504.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="34.375" y="511.7472">int index()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="12.5" x2="21.875" y1="487.6719" y2="487.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="25" y="491.4815">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="90.625" x2="100" y1="487.6719" y2="487.6719"/><!--MD5=[907811d53bb830eb9f659a5586ffffb9]
class Prependable--><rect codeLine="84" fill="#282828" height="210.1807" id="Prependable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="350" x="1060.4167" y="374.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="350" x="1060.4167" y="374.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="350" x="1060.4167" y="397.5911"/><rect codeLine="84" fill="none" height="210.1807" id="Prependable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="350" x="1060.4167" y="374.5361"/><ellipse cx="1165.625" cy="390.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1163.029,387.3922 L1163.029,385.8053 L1168.455,385.8053 L1168.455,387.3922 L1166.6423,387.3922 L1166.6423,393.3309 L1168.455,393.3309 L1168.455,394.9178 L1163.029,394.9178 L1163.029,393.3309 L1164.8417,393.3309 L1164.8417,387.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="1188.5417" y="394.9544">Prependable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="1369.7917" y="371.4111"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="1373.9583" y="387.6628">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1061.4583" x2="1409.375" y1="405.9245" y2="405.9245"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1061.4583" x2="1409.375" y1="414.2578" y2="414.2578"/><ellipse cx="1071.875" cy="425.7161" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="1083.3333" y="432.6274">boolean prepend(Value)</text><ellipse cx="1071.875" cy="445.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="1083.3333" y="452.3722">boolean prependAll(Iterator&lt;? extends Value&gt; values)</text><ellipse cx="1071.875" cy="465.2059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="317.7083" x="1083.3333" y="472.1171">boolean prependAll(Collection&lt;? extends Value&gt; values)</text><ellipse cx="1071.875" cy="484.9508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="1083.3333" y="491.862">boolean prependAll(Iterable&lt;? extends Value&gt; values)</text><ellipse cx="1071.875" cy="504.6956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="1083.3333" y="511.6069">boolean prependAll(Value[] values)</text><ellipse cx="1071.875" cy="524.4405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="1083.3333" y="531.3517">boolean prependIfNotNull(Value)</text><ellipse cx="1071.875" cy="568.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="1083.3333" y="575.0081">boolean onPrepend(Value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1061.4583" x2="1181.25" y1="550.9328" y2="550.9328"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="1184.375" y="554.7424">(extension points)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1289.5833" x2="1409.375" y1="550.9328" y2="550.9328"/><!--MD5=[47de47a8b5f06cbc5e036fae0a9149b7]
class Iterable--><rect codeLine="97" fill="#282828" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="132.2917" x="1557.8125" y="94.3278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="132.2917" x="1557.8125" y="94.3278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="132.2917" x="1557.8125" y="117.3828"/><rect codeLine="97" fill="none" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="132.2917" x="1557.8125" y="94.3278"/><ellipse cx="1572.3958" cy="110.022" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1569.7998,107.1838 L1569.7998,105.5969 L1575.2258,105.5969 L1575.2258,107.1838 L1573.4131,107.1838 L1573.4131,113.1226 L1575.2258,113.1226 L1575.2258,114.7095 L1569.7998,114.7095 L1569.7998,113.1226 L1571.6125,113.1226 L1571.6125,107.1838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1589.0625" y="114.7461">Iterable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="1649.4792" y="91.2028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="1653.6458" y="107.4544">Value</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1558.8542" x2="1689.0625" y1="125.7161" y2="125.7161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1558.8542" x2="1689.0625" y1="134.0495" y2="134.0495"/><!--MD5=[263187b48e10dd6c7af50c40a2af90e0]
class Joinable--><rect codeLine="98" fill="#282828" height="48.055" id="Joinable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="90.625" x="1726.5625" y="94.3278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="90.625" x="1726.5625" y="94.3278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="90.625" x="1726.5625" y="117.3828"/><rect codeLine="98" fill="none" height="48.055" id="Joinable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="90.625" x="1726.5625" y="94.3278"/><ellipse cx="1741.1458" cy="110.022" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1738.5498,107.1838 L1738.5498,105.5969 L1743.9758,105.5969 L1743.9758,107.1838 L1742.1631,107.1838 L1742.1631,113.1226 L1743.9758,113.1226 L1743.9758,114.7095 L1738.5498,114.7095 L1738.5498,113.1226 L1740.3625,113.1226 L1740.3625,107.1838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="53.125" x="1757.8125" y="114.7461">Joinable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1727.6042" x2="1816.1458" y1="125.7161" y2="125.7161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1727.6042" x2="1816.1458" y1="134.0495" y2="134.0495"/><!--MD5=[ba891938f57e9cc16cfc4c1193a3a1b1]
class WriteIndexable--><rect codeLine="129" fill="#282828" height="67.7999" id="WriteIndexable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="179.1667" x="1501.0417" y="1056.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="179.1667" x="1501.0417" y="1056.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="179.1667" x="1501.0417" y="1079.8828"/><rect codeLine="129" fill="none" height="67.7999" id="WriteIndexable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="179.1667" x="1501.0417" y="1056.8278"/><ellipse cx="1515.625" cy="1072.522" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1513.029,1069.6838 L1513.029,1068.0969 L1518.455,1068.0969 L1518.455,1069.6838 L1516.6423,1069.6838 L1516.6423,1075.6226 L1518.455,1075.6226 L1518.455,1077.2095 L1513.029,1077.2095 L1513.029,1075.6226 L1514.8417,1075.6226 L1514.8417,1069.6838 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="1532.2917" y="1077.2461">WriteIndexable</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="43.75" x="1639.5833" y="1053.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="35.4167" x="1643.75" y="1069.9544">Value</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1502.0833" x2="1679.1667" y1="1088.2161" y2="1088.2161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1502.0833" x2="1679.1667" y1="1096.5495" y2="1096.5495"/><ellipse cx="1512.5" cy="1108.0078" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="1523.9583" y="1114.919">Value set(int index, Value)</text><!--MD5=[ab9b8ae6fdae36629d376b0c8811f81e]
reverse link SpaceLimited to Addable--><path codeLine="8" d="M751.4063,152.4111 C706.5208,174.9424 648.1563,206.9945 601.0417,242.2445 C562.8229,270.8382 524.5417,305.1924 490.125,338.7445 " fill="none" id="SpaceLimited-backto-Addable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="747.9792,145.9736,769.8958,143.2965,754.4271,159.057,747.9792,145.9736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[aadc5d5daa8d6a492edd944fb570508b]
reverse link SpaceLimited to Appendable--><path codeLine="26" d="M821.875,164.9007 C821.875,204.859 821.875,265.3382 821.875,322.5778 " fill="none" id="SpaceLimited-backto-Appendable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="814.5833,165.0361,821.875,144.2028,829.1667,165.0361,814.5833,165.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b23136f5db6dee15d92ef86275440f41]
reverse link Sized to Indexable--><path codeLine="61" d="M1492.5417,525.859 C1502.5625,573.6299 1519.5625,651.1611 1537.5,717.2445 C1542.9688,737.4007 1549.2813,758.7549 1555.6042,779.2445 " fill="none" id="Sized-backto-Indexable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1485.4375,527.5257,1488.3438,505.6403,1499.7188,524.557,1485.4375,527.5257" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c411ad673c3c86b1d790e359954a6a43]
reverse link Sequence to Indexable--><path codeLine="62" d="M1629.5208,739.0986 C1625.8229,753.0465 1622.2396,766.609 1618.8229,779.5049 " fill="none" id="Sequence-backto-Indexable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1622.4063,737.4632,1634.7917,719.1924,1636.5104,741.2028,1622.4063,737.4632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[78db9c4c4eec8b9186161a5f5246d5d1]
reverse link SpaceLimited to Prependable--><path codeLine="83" d="M895.9688,152.0674 C940.7813,173.9007 997.5833,205.3278 1041.6667,242.2445 C1087.0313,280.234 1129.6354,329.9945 1163.2813,374.057 " fill="none" id="SpaceLimited-backto-Prependable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="893.1146,158.7861,877.4271,143.2549,899.3646,145.609,893.1146,158.7861" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[88e7644962103135c8430c617e2ac3d5]
reverse link Iterable to Sequence--><path codeLine="99" d="M1633.2083,164.2861 C1637.5833,185.5465 1643.1771,212.7028 1649.2292,242.1403 " fill="none" id="Iterable-backto-Sequence" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1626.125,166.0465,1629.0729,144.1715,1640.4167,163.109,1626.125,166.0465" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[cfb1170d47eb984b25b4f168da527cb1]
reverse link Joinable to Sequence--><path codeLine="100" d="M1762.625,164.2861 C1758.25,185.5465 1752.6563,212.7028 1746.6042,242.1403 " fill="none" id="Joinable-backto-Sequence" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1755.4167,163.109,1766.7604,144.1715,1769.7083,166.0465,1755.4167,163.109" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[f244c3ba957d4223714887263a3f0f7d]
reverse link Indexable to WriteIndexable--><path codeLine="128" d="M1590.625,1017.109 C1590.625,1031.5257 1590.625,1045.0986 1590.625,1056.5153 " fill="none" id="Indexable-backto-WriteIndexable" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1583.3333,1017.1715,1590.625,996.3382,1597.9167,1017.1715,1583.3333,1017.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b560558825f4e105afd5013b0274ed1e]
link Clearable to Contains--><!--MD5=[474ac1e805a35a8054568a290c2be676]
link Clearable to Indexed--><!--MD5=[800ccee78b892aaf51a0cb0defa9902d]
@startuml

    !include lexakai.theme
    
    title "diagram-collection"
    
    interface SpaceLimited
    SpaceLimited <|- - Addable
    interface Addable<Value>
    {
        - -(collection)- -
        +boolean add(Value)
        +boolean addAll(Collection<? extends Value> values)
        +boolean addAll(Iterator<? extends Value> values)
        +boolean addAll(Value[] values)
        +boolean addAll(Iterable<? extends Value> values)
        +int addAllMatching(Iterable<? extends Value> values, Matcher<Value>)
        +int addAllMatching(Collection<? extends Value> values, Matcher<Value>)
        +int addAllMatching(Value[] values, Matcher<Value>)
        +int addAllMatching(Iterator<? extends Value> values, Matcher<Value>)
        +boolean addIfNotNull(Value)
        +boolean onAdd(Value)
    }
    
    interface SpaceLimited
    SpaceLimited <|- - Appendable
    interface Appendable<Value>
    {
        - -
        +boolean append(Value)
        +boolean appendAll(Collection<? extends Value> values)
        +boolean appendAll(Iterable<? extends Value> values)
        +boolean appendAll(Value[] values)
        +boolean appendAll(Iterator<? extends Value> values)
        +boolean appendIfNotNull(Value)
        +Appendable<Value> appending(Value)
        +Appendable<Value> appending(Iterable<? extends Value> values)
        +Appendable<Value> appendingIfNotNull(Value)
        - -(collection)- -
        +void push(Value)
        - -(extension points)- -
        +boolean onAppend(Value)
    }
    
    interface Clearable
    {
        - -(collection)- -
        +void clear()
    }
    
    interface Contains<Value>
    {
        - -(collection)- -
        +boolean contains(Value)
        +boolean containsAll(Iterable<Value> values)
        +boolean containsNone(Iterable<Value> values)
    }
    
    interface Sequence
    interface Sized
    Sized <|- - Indexable
    Sequence <|- - Indexable
    interface Indexable<Value>
    {
        - -
        +Value get(int index)
        +Value getOrDefault(int index, Value defaultValue)
        - -(checks)- -
        +boolean endsWith(Indexable<Value> that)
        +boolean isEqualTo(Indexable<Value> that)
        +boolean startsWith(Indexable<Value> that)
        - -(collection)- -
        +Value last()
    }
    
    interface Indexed
    {
        - -(collection)- -
        +int index()
    }
    
    interface SpaceLimited
    SpaceLimited <|- - Prependable
    interface Prependable<Value>
    {
        - -
        +boolean prepend(Value)
        +boolean prependAll(Iterator<? extends Value> values)
        +boolean prependAll(Collection<? extends Value> values)
        +boolean prependAll(Iterable<? extends Value> values)
        +boolean prependAll(Value[] values)
        +boolean prependIfNotNull(Value)
        - -(extension points)- -
        +boolean onPrepend(Value)
    }
    
    interface Iterable<Value>
    interface Joinable
    Iterable <|- - Sequence
    Joinable <|- - Sequence
    interface Sequence<Value>
    {
        - -
        +Set<Value> asSet()
        +Value head()
        - -(checks)- -
        +boolean isEqualTo(Sequence<Value> that)
        - -(collection)- -
        +int asHashCode()
        +Iterable<Value> asIterable()
        +Iterable<Value> asIterable(Matcher<Value>)
        +Iterator<Value> asIterator()
        +Iterator<Value> asIterator(Matcher<Value>)
        +List<Value> asList()
        +Value findFirst(Class<? extends Value> type)
        +Value findFirst(Matcher<Value>)
        +Value first()
        +int indexOfFirst(Matcher<Value>)
        +int indexOfFirst(Value)
        +List<Value> tail()
        - -(matching)- -
        +boolean allMatch(Matcher<Value>)
        +boolean anyMatch(Matcher<Value>)
        +boolean noneMatch(Matcher<Value>)
    }
    
    interface Indexable
    Indexable <|- - WriteIndexable
    interface WriteIndexable<Value>
    {
        - -
        +Value set(int index, Value)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "diagram-collection"
    
    interface SpaceLimited
    SpaceLimited <|- - Addable
    interface Addable<Value>
    {
        - -(collection)- -
        +boolean add(Value)
        +boolean addAll(Collection<? extends Value> values)
        +boolean addAll(Iterator<? extends Value> values)
        +boolean addAll(Value[] values)
        +boolean addAll(Iterable<? extends Value> values)
        +int addAllMatching(Iterable<? extends Value> values, Matcher<Value>)
        +int addAllMatching(Collection<? extends Value> values, Matcher<Value>)
        +int addAllMatching(Value[] values, Matcher<Value>)
        +int addAllMatching(Iterator<? extends Value> values, Matcher<Value>)
        +boolean addIfNotNull(Value)
        +boolean onAdd(Value)
    }
    
    interface SpaceLimited
    SpaceLimited <|- - Appendable
    interface Appendable<Value>
    {
        - -
        +boolean append(Value)
        +boolean appendAll(Collection<? extends Value> values)
        +boolean appendAll(Iterable<? extends Value> values)
        +boolean appendAll(Value[] values)
        +boolean appendAll(Iterator<? extends Value> values)
        +boolean appendIfNotNull(Value)
        +Appendable<Value> appending(Value)
        +Appendable<Value> appending(Iterable<? extends Value> values)
        +Appendable<Value> appendingIfNotNull(Value)
        - -(collection)- -
        +void push(Value)
        - -(extension points)- -
        +boolean onAppend(Value)
    }
    
    interface Clearable
    {
        - -(collection)- -
        +void clear()
    }
    
    interface Contains<Value>
    {
        - -(collection)- -
        +boolean contains(Value)
        +boolean containsAll(Iterable<Value> values)
        +boolean containsNone(Iterable<Value> values)
    }
    
    interface Sequence
    interface Sized
    Sized <|- - Indexable
    Sequence <|- - Indexable
    interface Indexable<Value>
    {
        - -
        +Value get(int index)
        +Value getOrDefault(int index, Value defaultValue)
        - -(checks)- -
        +boolean endsWith(Indexable<Value> that)
        +boolean isEqualTo(Indexable<Value> that)
        +boolean startsWith(Indexable<Value> that)
        - -(collection)- -
        +Value last()
    }
    
    interface Indexed
    {
        - -(collection)- -
        +int index()
    }
    
    interface SpaceLimited
    SpaceLimited <|- - Prependable
    interface Prependable<Value>
    {
        - -
        +boolean prepend(Value)
        +boolean prependAll(Iterator<? extends Value> values)
        +boolean prependAll(Collection<? extends Value> values)
        +boolean prependAll(Iterable<? extends Value> values)
        +boolean prependAll(Value[] values)
        +boolean prependIfNotNull(Value)
        - -(extension points)- -
        +boolean onPrepend(Value)
    }
    
    interface Iterable<Value>
    interface Joinable
    Iterable <|- - Sequence
    Joinable <|- - Sequence
    interface Sequence<Value>
    {
        - -
        +Set<Value> asSet()
        +Value head()
        - -(checks)- -
        +boolean isEqualTo(Sequence<Value> that)
        - -(collection)- -
        +int asHashCode()
        +Iterable<Value> asIterable()
        +Iterable<Value> asIterable(Matcher<Value>)
        +Iterator<Value> asIterator()
        +Iterator<Value> asIterator(Matcher<Value>)
        +List<Value> asList()
        +Value findFirst(Class<? extends Value> type)
        +Value findFirst(Matcher<Value>)
        +Value first()
        +int indexOfFirst(Matcher<Value>)
        +int indexOfFirst(Value)
        +List<Value> tail()
        - -(matching)- -
        +boolean allMatch(Matcher<Value>)
        +boolean anyMatch(Matcher<Value>)
        +boolean noneMatch(Matcher<Value>)
    }
    
    interface Indexable
    Indexable <|- - WriteIndexable
    interface WriteIndexable<Value>
    {
        - -
        +Value set(int index, Value)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>