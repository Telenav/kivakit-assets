<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1844.7917px" preserveAspectRatio="none" style="width:2734px;height:1844px;background:#333333;" version="1.1" viewBox="0 0 2734 1844" width="2734.375px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="169.7917" x="1275.2552" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="146.875" x="1286.7135" y="30.5583">Primitive Maps</text><!--MD5=[aff4b5caafd4910c5c8c1fb6650f9b6b]
class PrimitiveScalarMap--><rect codeLine="206" fill="#282828" height="194.6025" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="240.625" x="450.5104" y="646.4111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="240.625" x="450.5104" y="646.4111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="240.625" x="450.5104" y="669.4661"/><rect codeLine="206" fill="none" height="194.6025" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="240.625" x="450.5104" y="646.4111"/><ellipse cx="502.5938" cy="662.1053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M499.9977,659.2672 L499.9977,657.6803 L505.4237,657.6803 L505.4237,659.2672 L503.611,659.2672 L503.611,665.2059 L505.4237,665.2059 L505.4237,666.7928 L499.9977,666.7928 L499.9977,665.2059 L501.8105,665.2059 L501.8105,659.2672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="121.875" x="525.5104" y="666.8294">PrimitiveScalarMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="451.5521" x2="690.0938" y1="677.7995" y2="677.7995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="451.5521" x2="690.0938" y1="686.1328" y2="686.1328"/><ellipse cx="461.9688" cy="697.5911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="473.4271" y="704.5024">long getScalar(long key)</text><ellipse cx="461.9688" cy="741.2476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="473.4271" y="748.1588">boolean isScalarValueNull(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="451.5521" x2="544.2604" y1="724.0835" y2="724.0835"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="547.3854" y="727.8931">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="597.3854" x2="690.0938" y1="724.0835" y2="724.0835"/><ellipse cx="461.9688" cy="784.904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="473.4271" y="791.8152">boolean isScalarKeyNull(long key)</text><ellipse cx="461.9688" cy="804.6488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="473.4271" y="811.5601">void putScalar(long key, LongValued)</text><ellipse cx="461.9688" cy="824.3937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="473.4271" y="831.3049">void putScalar(long key, long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="451.5521" x2="536.4479" y1="767.7399" y2="767.7399"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="539.5729" y="771.5495">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="605.1979" x2="690.0938" y1="767.7399" y2="767.7399"/><!--MD5=[671a1279844fa3fe982a569b5ebd1ae8]
class HashingStrategy--><rect codeLine="20" fill="#282828" height="210.1807" id="HashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="278.125" x="1894.2604" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="278.125" x="1894.2604" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="278.125" x="1894.2604" y="76.7578"/><rect codeLine="20" fill="none" height="210.1807" id="HashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="278.125" x="1894.2604" y="53.7028"/><ellipse cx="1972.9063" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1970.3102,66.5588 L1970.3102,64.9719 L1975.7362,64.9719 L1975.7362,66.5588 L1973.9235,66.5588 L1973.9235,72.4976 L1975.7362,72.4976 L1975.7362,74.0845 L1970.3102,74.0845 L1970.3102,72.4976 L1972.123,72.4976 L1972.123,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="106.25" x="1995.8229" y="74.1211">HashingStrategy</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1895.3021" x2="2171.3438" y1="85.0911" y2="85.0911"/><ellipse cx="1905.7188" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="1917.1771" y="127.3722">Count rehashThreshold()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1895.3021" x2="1998.9479" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2002.0729" y="107.1065">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2067.6979" x2="2171.3438" y1="103.2969" y2="103.2969"/><ellipse cx="1905.7188" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1917.1771" y="171.0286">Estimate recommendedSize()</text><ellipse cx="1905.7188" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="245.8333" x="1917.1771" y="190.7735">HashingStrategy withCapacity(Estimate size)</text><ellipse cx="1905.7188" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="1917.1771" y="210.5184">HashingStrategy withIncreasedCapacity()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1895.3021" x2="1997.9063" y1="146.9533" y2="146.9533"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="2001.0313" y="150.7629">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2068.7396" x2="2171.3438" y1="146.9533" y2="146.9533"/><ellipse cx="1905.7188" cy="247.2636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1917.1771" y="254.1748">Percent maximumOccupancy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1895.3021" x2="2011.9688" y1="230.0995" y2="230.0995"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="2015.0938" y="233.9091">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2054.6771" x2="2171.3438" y1="230.0995" y2="230.0995"/><!--MD5=[b463c1a193e15eab4d9aa79d3e80d632]
class DefaultHashingStrategy--><rect codeLine="11" fill="#282828" height="131.2012" id="DefaultHashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="569.7917" x="1748.4271" y="678.182"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="569.7917" x="1748.4271" y="678.182"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="569.7917" x="1748.4271" y="701.237"/><rect codeLine="11" fill="none" height="131.2012" id="DefaultHashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="569.7917" x="1748.4271" y="678.182"/><ellipse cx="1948.9479" cy="693.8761" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1950.8583,698.3012 Q1950.4311,698.5209 1949.9611,698.6308 Q1949.4911,698.7406 1948.9723,698.7406 Q1947.1291,698.7406 1946.1586,697.526 Q1945.1882,696.3114 1945.1882,694.0165 Q1945.1882,691.7155 1946.1586,690.5009 Q1947.1291,689.2863 1948.9723,689.2863 Q1949.4911,689.2863 1949.9672,689.3962 Q1950.4433,689.506 1950.8583,689.7257 L1950.8583,691.7277 Q1950.3944,691.3005 1949.958,691.1021 Q1949.5216,690.9037 1949.0578,690.9037 Q1948.069,690.9037 1947.5655,691.688 Q1947.0619,692.4723 1947.0619,694.0165 Q1947.0619,695.5546 1947.5655,696.3389 Q1948.069,697.1232 1949.0578,697.1232 Q1949.5216,697.1232 1949.958,696.9248 Q1950.3944,696.7265 1950.8583,696.2992 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="154.1667" x="1971.8646" y="698.6003">DefaultHashingStrategy</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1749.4688" x2="2317.1771" y1="709.5703" y2="709.5703"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1749.4688" x2="2317.1771" y1="717.9036" y2="717.9036"/><ellipse cx="1759.8854" cy="729.362" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="537.5" x="1771.3438" y="736.2732">DefaultHashingStrategy defaultHashingStrategy(Estimate capacity, Percent maximumOccupancy)</text><ellipse cx="1759.8854" cy="749.1069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="368.75" x="1771.3438" y="756.0181">DefaultHashingStrategy defaultHashingStrategy(Estimate capacity)</text><ellipse cx="1759.8854" cy="792.7633" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="1771.3438" y="799.6745">Percent defaultMaximumOccupancy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1749.4688" x2="2011.9688" y1="775.5992" y2="775.5992"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="2015.0938" y="779.4088">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2054.6771" x2="2317.1771" y1="775.5992" y2="775.5992"/><!--MD5=[7dc83dba370c73a9f85e44bd982e6617]
class PrimitiveMap--><rect codeLine="162" fill="#282828" height="834.7717" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="1377.5938" y="326.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="1377.5938" y="326.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="1377.5938" y="349.6745"/><rect codeLine="162" fill="none" height="834.7717" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="1377.5938" y="326.6195"/><ellipse cx="1495.3021" cy="342.3136" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1494.8952,339.0157 L1494.0468,342.745 L1495.7497,342.745 Z M1493.7965,337.3678 L1495.9999,337.3678 L1498.4596,346.4803 L1496.6591,346.4803 L1496.0976,344.2281 L1493.6867,344.2281 L1493.1374,346.4803 L1491.3368,346.4803 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="1518.2188" y="347.0378">PrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1378.6354" x2="1710.9271" y1="358.0078" y2="358.0078"/><polygon fill="#FFFF44" points="1389.0521,388.1694,1393.2188,392.336,1389.0521,396.5027,1384.8854,392.336" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="1400.5104" y="400.2889">PrimitiveMap()</text><polygon fill="#FFFF44" points="1389.0521,407.9142,1393.2188,412.0809,1389.0521,416.2476,1384.8854,412.0809" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1400.5104" y="420.0338">PrimitiveMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1378.6354" x2="1501.0313" y1="376.2136" y2="376.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1504.1563" y="380.0232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1588.5313" x2="1710.9271" y1="376.2136" y2="376.2136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1378.6354" x2="1710.9271" y1="429.7424" y2="429.7424"/><polygon fill="#FFFF44" points="1389.0521,435.9924,1393.2188,440.1591,1389.0521,444.3258,1384.8854,440.1591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="1400.5104" y="448.112">void compare(PrimitiveMap that)</text><polygon fill="#FFFF44" points="1389.0521,455.7373,1393.2188,459.904,1389.0521,464.0706,1384.8854,459.904" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="1400.5104" y="467.8569">HashingStrategy hashingStrategy()</text><polygon fill="#FFFF44" points="1389.0521,475.4822,1393.2188,479.6488,1389.0521,483.8155,1384.8854,479.6488" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="1400.5104" y="487.6017">int slots()</text><polygon fill="#FFFF44" points="1389.0521,519.1386,1393.2188,523.3053,1389.0521,527.4719,1384.8854,523.3053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="1400.5104" y="531.2581">boolean isTombstone(int key)</text><polygon fill="#FFFF44" points="1389.0521,538.8835,1393.2188,543.0501,1389.0521,547.2168,1384.8854,543.0501" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1400.5104" y="551.003">boolean isTombstone(Object key)</text><polygon fill="#FFFF44" points="1389.0521,558.6283,1393.2188,562.795,1389.0521,566.9617,1384.8854,562.795" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="1400.5104" y="570.7479">boolean isTombstone(long key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1378.6354" x2="1518.2188" y1="507.1828" y2="507.1828"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1521.3438" y="510.9924">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1571.3438" x2="1710.9271" y1="507.1828" y2="507.1828"/><ellipse cx="1389.0521" cy="607.4931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="1400.5104" y="614.4043">boolean contains(long[] values, long value)</text><ellipse cx="1389.0521" cy="627.238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="1400.5104" y="634.1492">boolean contains(T[] values, T value)</text><ellipse cx="1389.0521" cy="646.9828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="218.75" x="1400.5104" y="653.894">boolean contains(int[] values, int value)</text><ellipse cx="1389.0521" cy="666.7277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="1400.5104" y="673.6389">boolean isEmpty(long key)</text><ellipse cx="1389.0521" cy="686.4726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="1400.5104" y="693.3838">boolean isEmpty(byte key)</text><ellipse cx="1389.0521" cy="706.2174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="1400.5104" y="713.1287">boolean isEmpty(int key)</text><ellipse cx="1389.0521" cy="725.9623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="1400.5104" y="732.8735">boolean isEmpty(String key)</text><polygon fill="#FFFF44" points="1389.0521,740.4989,1393.2188,744.6655,1389.0521,748.8322,1384.8854,744.6655" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="1400.5104" y="752.6184">int hash(long value)</text><polygon fill="#FFFF44" points="1389.0521,760.2437,1393.2188,764.4104,1389.0521,768.5771,1384.8854,764.4104" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="1400.5104" y="772.3633">int hash(int value)</text><polygon fill="#FFFF44" points="1389.0521,779.9886,1393.2188,784.1553,1389.0521,788.3219,1384.8854,784.1553" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="1400.5104" y="792.1082">PrimitiveMap hashingStrategy(HashingStrategy)</text><polygon fill="#FFFF44" points="1389.0521,799.7335,1393.2188,803.9001,1389.0521,808.0668,1384.8854,803.9001" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="1400.5104" y="811.853">void increaseSize()</text><polygon fill="#FFFF44" points="1389.0521,819.4784,1393.2188,823.645,1389.0521,827.8117,1384.8854,823.645" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="1400.5104" y="831.5979">long index(long hash)</text><polygon fill="#FFFF44" points="1389.0521,839.2232,1393.2188,843.3899,1389.0521,847.5566,1384.8854,843.3899" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1400.5104" y="851.3428">int index(int index)</text><polygon fill="#FFFF44" points="1389.0521,858.9681,1393.2188,863.1348,1389.0521,867.3014,1384.8854,863.1348" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1400.5104" y="871.0876">int index(long[] values, long value)</text><polygon fill="#FFFF44" points="1389.0521,878.713,1393.2188,882.8796,1389.0521,887.0463,1384.8854,882.8796" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="1400.5104" y="890.8325">int index(int[] values, int value)</text><polygon fill="#FFFF44" points="1389.0521,898.4578,1393.2188,902.6245,1389.0521,906.7912,1384.8854,902.6245" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="1400.5104" y="910.5774">int index(Object[] values, Object value)</text><polygon fill="#FFFF44" points="1389.0521,918.2027,1393.2188,922.3694,1389.0521,926.5361,1384.8854,922.3694" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="1400.5104" y="930.3223">PrimitiveMap newMap()</text><polygon fill="#FFFF44" points="1389.0521,937.9476,1393.2188,942.1143,1389.0521,946.2809,1384.8854,942.1143" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="1400.5104" y="950.0671">IntIterator nonEmptyIndexes(byte[] values)</text><polygon fill="#FFFF44" points="1389.0521,957.6925,1393.2188,961.8591,1389.0521,966.0258,1384.8854,961.8591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="1400.5104" y="969.812">IntIterator nonEmptyIndexes(long[] values)</text><polygon fill="#FFFF44" points="1389.0521,977.4373,1393.2188,981.604,1389.0521,985.7707,1384.8854,981.604" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="1400.5104" y="989.5569">IntIterator nonEmptyIndexes(int[] values)</text><polygon fill="#FFFF44" points="1389.0521,997.1822,1393.2188,1001.3489,1389.0521,1005.5155,1384.8854,1001.3489" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="1400.5104" y="1009.3018">IntIterator nonEmptyIndexes(T[] values)</text><polygon fill="#FFFF44" points="1389.0521,1016.9271,1393.2188,1021.0938,1389.0521,1025.2604,1384.8854,1021.0938" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="245.8333" x="1400.5104" y="1029.0466">LongIterator nonEmptyValues(long[] values)</text><polygon fill="#FFFF44" points="1389.0521,1036.672,1393.2188,1040.8386,1389.0521,1045.0053,1384.8854,1040.8386" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="1400.5104" y="1048.7915">IntIterator nonEmptyValues(int[] values)</text><polygon fill="#FFFF44" points="1389.0521,1056.4168,1393.2188,1060.5835,1389.0521,1064.7502,1384.8854,1060.5835" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="1400.5104" y="1068.5364">ByteIterator nonEmptyValues(byte[] values)</text><polygon fill="#FFFF44" points="1389.0521,1076.1617,1393.2188,1080.3284,1389.0521,1084.495,1384.8854,1080.3284" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="1400.5104" y="1088.2813">Iterator&lt;T&gt; nonEmptyValues(T[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1378.6354" x2="1510.4063" y1="590.329" y2="590.329"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1513.5313" y="594.1386">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1579.1563" x2="1710.9271" y1="590.329" y2="590.329"/><polygon fill="#FFFF44" points="1389.0521,1119.8181,1393.2188,1123.9848,1389.0521,1128.1514,1384.8854,1123.9848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="158.3333" x="1400.5104" y="1131.9377">void copy(PrimitiveMap that)</text><polygon fill="#FFFF44" points="1389.0521,1139.563,1393.2188,1143.7297,1389.0521,1147.8963,1384.8854,1143.7297" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="1400.5104" y="1151.6825">void copyEntries(PrimitiveMap that, ProgressReporter)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1378.6354" x2="1509.3646" y1="1107.8623" y2="1107.8623"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1512.4896" y="1111.672">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1580.1979" x2="1710.9271" y1="1107.8623" y2="1107.8623"/><!--MD5=[ef5612d368b38e27117e27a3ed6e3abc]
class IntToByteMap--><rect codeLine="34" fill="#282828" height="297.4935" id="IntToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="206.25" x="840.6146" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="206.25" x="840.6146" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="206.25" x="840.6146" y="1246.5495"/><rect codeLine="34" fill="none" height="297.4935" id="IntToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="206.25" x="840.6146" y="1223.4945"/><ellipse cx="891.6563" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M893.5667,1243.6137 Q893.1394,1243.8334 892.6694,1243.9433 Q892.1995,1244.0531 891.6807,1244.0531 Q889.8374,1244.0531 888.8669,1242.8385 Q887.8965,1241.6239 887.8965,1239.329 Q887.8965,1237.028 888.8669,1235.8134 Q889.8374,1234.5988 891.6807,1234.5988 Q892.1995,1234.5988 892.6755,1234.7087 Q893.1516,1234.8185 893.5667,1235.0382 L893.5667,1237.0402 Q893.1028,1236.613 892.6664,1236.4146 Q892.23,1236.2162 891.7661,1236.2162 Q890.7773,1236.2162 890.2738,1237.0005 Q889.7703,1237.7848 889.7703,1239.329 Q889.7703,1240.8671 890.2738,1241.6514 Q890.7773,1242.4357 891.7661,1242.4357 Q892.23,1242.4357 892.6664,1242.2373 Q893.1028,1242.039 893.5667,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="89.5833" x="914.5729" y="1243.9128">IntToByteMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="841.6563" x2="1045.8229" y1="1254.8828" y2="1254.8828"/><ellipse cx="852.0729" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="863.5313" y="1297.1639">IntToByteMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="841.6563" x2="899.9896" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="903.1146" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="987.4896" x2="1045.8229" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="841.6563" x2="1045.8229" y1="1306.8726" y2="1306.8726"/><ellipse cx="852.0729" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="863.5313" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="852.0729" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="863.5313" y="1344.987">byte get(int key)</text><ellipse cx="852.0729" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="863.5313" y="1388.6434">boolean containsKey(int key)</text><ellipse cx="852.0729" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="863.5313" y="1408.3883">IntIterator keys()</text><ellipse cx="852.0729" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="863.5313" y="1428.1331">boolean put(int key, byte value)</text><ellipse cx="852.0729" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="863.5313" y="1447.878">boolean remove(int key)</text><ellipse cx="852.0729" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="863.5313" y="1467.6229">ByteIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="841.6563" x2="909.3646" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="912.4896" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="978.1146" x2="1045.8229" y1="1364.5681" y2="1364.5681"/><ellipse cx="852.0729" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="863.5313" y="1511.2793">void increment(int key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="841.6563" x2="922.3854" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="925.5104" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="965.0938" x2="1045.8229" y1="1487.204" y2="1487.204"/><!--MD5=[d09f63e4fbc1173efb8cd0161f1da320]
class IntToIntMap--><rect codeLine="53" fill="#282828" height="297.4935" id="IntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="196.875" x="1083.8438" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="196.875" x="1083.8438" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="196.875" x="1083.8438" y="1246.5495"/><rect codeLine="53" fill="none" height="297.4935" id="IntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="196.875" x="1083.8438" y="1223.4945"/><ellipse cx="1135.4063" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1137.3167,1243.6137 Q1136.8894,1243.8334 1136.4194,1243.9433 Q1135.9495,1244.0531 1135.4307,1244.0531 Q1133.5874,1244.0531 1132.6169,1242.8385 Q1131.6465,1241.6239 1131.6465,1239.329 Q1131.6465,1237.028 1132.6169,1235.8134 Q1133.5874,1234.5988 1135.4307,1234.5988 Q1135.9495,1234.5988 1136.4255,1234.7087 Q1136.9016,1234.8185 1137.3167,1235.0382 L1137.3167,1237.0402 Q1136.8528,1236.613 1136.4164,1236.4146 Q1135.98,1236.2162 1135.5161,1236.2162 Q1134.5273,1236.2162 1134.0238,1237.0005 Q1133.5203,1237.7848 1133.5203,1239.329 Q1133.5203,1240.8671 1134.0238,1241.6514 Q1134.5273,1242.4357 1135.5161,1242.4357 Q1135.98,1242.4357 1136.4164,1242.2373 Q1136.8528,1242.039 1137.3167,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="1158.3229" y="1243.9128">IntToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1084.8854" x2="1279.6771" y1="1254.8828" y2="1254.8828"/><ellipse cx="1095.3021" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="1106.7604" y="1297.1639">IntToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1084.8854" x2="1138.5313" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1141.6563" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1226.0313" x2="1279.6771" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1084.8854" x2="1279.6771" y1="1306.8726" y2="1306.8726"/><ellipse cx="1095.3021" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1106.7604" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="1095.3021" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="1106.7604" y="1344.987">int get(int key)</text><ellipse cx="1095.3021" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1106.7604" y="1388.6434">boolean containsKey(int key)</text><ellipse cx="1095.3021" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1106.7604" y="1408.3883">IntIterator keys()</text><ellipse cx="1095.3021" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="1106.7604" y="1428.1331">boolean put(int key, int value)</text><ellipse cx="1095.3021" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1106.7604" y="1447.878">boolean remove(int key)</text><ellipse cx="1095.3021" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1106.7604" y="1467.6229">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1084.8854" x2="1147.9063" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1151.0313" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1216.6563" x2="1279.6771" y1="1364.5681" y2="1364.5681"/><ellipse cx="1095.3021" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1106.7604" y="1511.2793">void increment(int key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1084.8854" x2="1160.9271" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1164.0521" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1203.6354" x2="1279.6771" y1="1487.204" y2="1487.204"/><!--MD5=[a660b783948adcc946c38b67487156c9]
class IntToLongMap--><rect codeLine="72" fill="#282828" height="297.4935" id="IntToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="207.2917" x="1317.1771" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="207.2917" x="1317.1771" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="207.2917" x="1317.1771" y="1246.5495"/><rect codeLine="72" fill="none" height="297.4935" id="IntToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="207.2917" x="1317.1771" y="1223.4945"/><ellipse cx="1366.6563" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1368.5667,1243.6137 Q1368.1394,1243.8334 1367.6694,1243.9433 Q1367.1995,1244.0531 1366.6807,1244.0531 Q1364.8374,1244.0531 1363.8669,1242.8385 Q1362.8965,1241.6239 1362.8965,1239.329 Q1362.8965,1237.028 1363.8669,1235.8134 Q1364.8374,1234.5988 1366.6807,1234.5988 Q1367.1995,1234.5988 1367.6755,1234.7087 Q1368.1516,1234.8185 1368.5667,1235.0382 L1368.5667,1237.0402 Q1368.1028,1236.613 1367.6664,1236.4146 Q1367.23,1236.2162 1366.7661,1236.2162 Q1365.7773,1236.2162 1365.2738,1237.0005 Q1364.7703,1237.7848 1364.7703,1239.329 Q1364.7703,1240.8671 1365.2738,1241.6514 Q1365.7773,1242.4357 1366.7661,1242.4357 Q1367.23,1242.4357 1367.6664,1242.2373 Q1368.1028,1242.039 1368.5667,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="93.75" x="1389.5729" y="1243.9128">IntToLongMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1318.2188" x2="1523.4271" y1="1254.8828" y2="1254.8828"/><ellipse cx="1328.6354" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1340.0938" y="1297.1639">IntToLongMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1318.2188" x2="1377.0729" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1380.1979" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1464.5729" x2="1523.4271" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1318.2188" x2="1523.4271" y1="1306.8726" y2="1306.8726"/><ellipse cx="1328.6354" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1340.0938" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="1328.6354" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="1340.0938" y="1344.987">long get(int key)</text><ellipse cx="1328.6354" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1340.0938" y="1388.6434">boolean containsKey(int key)</text><ellipse cx="1328.6354" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1340.0938" y="1408.3883">IntIterator keys()</text><ellipse cx="1328.6354" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="1340.0938" y="1428.1331">boolean put(int key, long value)</text><ellipse cx="1328.6354" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1340.0938" y="1447.878">boolean remove(int key)</text><ellipse cx="1328.6354" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="1340.0938" y="1467.6229">LongIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1318.2188" x2="1386.4479" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1389.5729" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1455.1979" x2="1523.4271" y1="1364.5681" y2="1364.5681"/><ellipse cx="1328.6354" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1340.0938" y="1511.2793">void increment(int key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1318.2188" x2="1399.4688" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1402.5938" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1442.1771" x2="1523.4271" y1="1487.204" y2="1487.204"/><!--MD5=[fc5ee94715f2b86b0866bd4cdffd8652]
class LongToByteMap--><rect codeLine="91" fill="#282828" height="297.4935" id="LongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="216.6667" x="1561.4479" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="216.6667" x="1561.4479" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="216.6667" x="1561.4479" y="1246.5495"/><rect codeLine="91" fill="none" height="297.4935" id="LongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="216.6667" x="1561.4479" y="1223.4945"/><ellipse cx="1610.4063" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1612.3167,1243.6137 Q1611.8894,1243.8334 1611.4194,1243.9433 Q1610.9495,1244.0531 1610.4307,1244.0531 Q1608.5874,1244.0531 1607.6169,1242.8385 Q1606.6465,1241.6239 1606.6465,1239.329 Q1606.6465,1237.028 1607.6169,1235.8134 Q1608.5874,1234.5988 1610.4307,1234.5988 Q1610.9495,1234.5988 1611.4255,1234.7087 Q1611.9016,1234.8185 1612.3167,1235.0382 L1612.3167,1237.0402 Q1611.8528,1236.613 1611.4164,1236.4146 Q1610.98,1236.2162 1610.5161,1236.2162 Q1609.5273,1236.2162 1609.0238,1237.0005 Q1608.5203,1237.7848 1608.5203,1239.329 Q1608.5203,1240.8671 1609.0238,1241.6514 Q1609.5273,1242.4357 1610.5161,1242.4357 Q1610.98,1242.4357 1611.4164,1242.2373 Q1611.8528,1242.039 1612.3167,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="104.1667" x="1633.3229" y="1243.9128">LongToByteMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1562.4896" x2="1777.0729" y1="1254.8828" y2="1254.8828"/><ellipse cx="1572.9063" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="1584.3646" y="1297.1639">LongToByteMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1562.4896" x2="1626.0313" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1629.1563" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1713.5313" x2="1777.0729" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1562.4896" x2="1777.0729" y1="1306.8726" y2="1306.8726"/><ellipse cx="1572.9063" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1584.3646" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="1572.9063" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="1584.3646" y="1344.987">byte get(long key)</text><ellipse cx="1572.9063" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1584.3646" y="1388.6434">boolean containsKey(long key)</text><ellipse cx="1572.9063" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1584.3646" y="1408.3883">LongIterator keys()</text><ellipse cx="1572.9063" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="184.375" x="1584.3646" y="1428.1331">boolean put(long key, byte value)</text><ellipse cx="1572.9063" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1584.3646" y="1447.878">boolean remove(long key)</text><ellipse cx="1572.9063" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="1584.3646" y="1467.6229">ByteIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1562.4896" x2="1635.4063" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1638.5313" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1704.1563" x2="1777.0729" y1="1364.5681" y2="1364.5681"/><ellipse cx="1572.9063" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="1584.3646" y="1511.2793">void increment(long key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1562.4896" x2="1648.4271" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1651.5521" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1691.1354" x2="1777.0729" y1="1487.204" y2="1487.204"/><!--MD5=[a8003e0c8cc48aef597fa692f3c1fc9d]
class LongToIntMap--><rect codeLine="110" fill="#282828" height="297.4935" id="LongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="207.2917" x="342.1771" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="207.2917" x="342.1771" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="207.2917" x="342.1771" y="1246.5495"/><rect codeLine="110" fill="none" height="297.4935" id="LongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="207.2917" x="342.1771" y="1223.4945"/><ellipse cx="391.6563" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M393.5667,1243.6137 Q393.1394,1243.8334 392.6694,1243.9433 Q392.1995,1244.0531 391.6807,1244.0531 Q389.8374,1244.0531 388.8669,1242.8385 Q387.8965,1241.6239 387.8965,1239.329 Q387.8965,1237.028 388.8669,1235.8134 Q389.8374,1234.5988 391.6807,1234.5988 Q392.1995,1234.5988 392.6755,1234.7087 Q393.1516,1234.8185 393.5667,1235.0382 L393.5667,1237.0402 Q393.1028,1236.613 392.6664,1236.4146 Q392.23,1236.2162 391.7661,1236.2162 Q390.7773,1236.2162 390.2738,1237.0005 Q389.7703,1237.7848 389.7703,1239.329 Q389.7703,1240.8671 390.2738,1241.6514 Q390.7773,1242.4357 391.7661,1242.4357 Q392.23,1242.4357 392.6664,1242.2373 Q393.1028,1242.039 393.5667,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="93.75" x="414.5729" y="1243.9128">LongToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="343.2188" x2="548.4271" y1="1254.8828" y2="1254.8828"/><ellipse cx="353.6354" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="365.0938" y="1297.1639">LongToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="343.2188" x2="402.0729" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="405.1979" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="489.5729" x2="548.4271" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="343.2188" x2="548.4271" y1="1306.8726" y2="1306.8726"/><ellipse cx="353.6354" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="365.0938" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="353.6354" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="365.0938" y="1344.987">int get(long key)</text><ellipse cx="353.6354" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="365.0938" y="1388.6434">boolean containsKey(long key)</text><ellipse cx="353.6354" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="365.0938" y="1408.3883">LongIterator keys()</text><ellipse cx="353.6354" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="365.0938" y="1428.1331">boolean put(long key, int value)</text><ellipse cx="353.6354" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="365.0938" y="1447.878">boolean remove(long key)</text><ellipse cx="353.6354" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="365.0938" y="1467.6229">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="343.2188" x2="411.4479" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="414.5729" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="480.1979" x2="548.4271" y1="1364.5681" y2="1364.5681"/><ellipse cx="353.6354" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="365.0938" y="1511.2793">void increment(long key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="343.2188" x2="424.4688" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="427.5938" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="467.1771" x2="548.4271" y1="1487.204" y2="1487.204"/><!--MD5=[50475e85135ca79a415960d0ea19f118]
class LongToLongMap--><rect codeLine="129" fill="#282828" height="297.4935" id="LongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="217.7083" x="585.9271" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="217.7083" x="585.9271" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="217.7083" x="585.9271" y="1246.5495"/><rect codeLine="129" fill="none" height="297.4935" id="LongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="217.7083" x="585.9271" y="1223.4945"/><ellipse cx="633.3229" cy="1239.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M635.2333,1243.6137 Q634.8061,1243.8334 634.3361,1243.9433 Q633.8661,1244.0531 633.3473,1244.0531 Q631.5041,1244.0531 630.5336,1242.8385 Q629.5632,1241.6239 629.5632,1239.329 Q629.5632,1237.028 630.5336,1235.8134 Q631.5041,1234.5988 633.3473,1234.5988 Q633.8661,1234.5988 634.3422,1234.7087 Q634.8183,1234.8185 635.2333,1235.0382 L635.2333,1237.0402 Q634.7694,1236.613 634.333,1236.4146 Q633.8966,1236.2162 633.4328,1236.2162 Q632.444,1236.2162 631.9405,1237.0005 Q631.4369,1237.7848 631.4369,1239.329 Q631.4369,1240.8671 631.9405,1241.6514 Q632.444,1242.4357 633.4328,1242.4357 Q633.8966,1242.4357 634.333,1242.2373 Q634.7694,1242.039 635.2333,1241.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="108.3333" x="656.2396" y="1243.9128">LongToLongMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="586.9688" x2="802.5938" y1="1254.8828" y2="1254.8828"/><ellipse cx="597.3854" cy="1290.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="608.8438" y="1297.1639">LongToLongMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.9688" x2="651.0313" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="654.1563" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="738.5313" x2="802.5938" y1="1273.0886" y2="1273.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.9688" x2="802.5938" y1="1306.8726" y2="1306.8726"/><ellipse cx="597.3854" cy="1318.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="608.8438" y="1325.2421">void entries(EntryVisitor)</text><ellipse cx="597.3854" cy="1338.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="608.8438" y="1344.987">long get(long key)</text><ellipse cx="597.3854" cy="1381.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="608.8438" y="1388.6434">boolean containsKey(long key)</text><ellipse cx="597.3854" cy="1401.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="608.8438" y="1408.3883">LongIterator keys()</text><ellipse cx="597.3854" cy="1421.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="185.4167" x="608.8438" y="1428.1331">boolean put(long key, long value)</text><ellipse cx="597.3854" cy="1440.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="608.8438" y="1447.878">boolean remove(long key)</text><ellipse cx="597.3854" cy="1460.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="608.8438" y="1467.6229">LongIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.9688" x2="660.4063" y1="1364.5681" y2="1364.5681"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="663.5313" y="1368.3777">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="729.1563" x2="802.5938" y1="1364.5681" y2="1364.5681"/><ellipse cx="597.3854" cy="1504.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="608.8438" y="1511.2793">void increment(long key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="586.9688" x2="673.4271" y1="1487.204" y2="1487.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="676.5521" y="1491.0136">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="716.1354" x2="802.5938" y1="1487.204" y2="1487.204"/><!--MD5=[4638eaeddc242ba8228b788b78e4f0b0]
class LongToObjectMap--><rect codeLine="147" fill="#282828" height="234.0922" id="LongToObjectMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="203.125" x="2020.3021" y="1255.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="203.125" x="2020.3021" y="1255.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="203.125" x="2020.3021" y="1278.3203"/><rect codeLine="147" fill="none" height="234.0922" id="LongToObjectMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="203.125" x="2020.3021" y="1255.2653"/><ellipse cx="2048.0104" cy="1270.9595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2049.9208,1275.3845 Q2049.4936,1275.6042 2049.0236,1275.7141 Q2048.5536,1275.824 2048.0348,1275.824 Q2046.1916,1275.824 2045.2211,1274.6094 Q2044.2507,1273.3948 2044.2507,1271.0999 Q2044.2507,1268.7988 2045.2211,1267.5842 Q2046.1916,1266.3696 2048.0348,1266.3696 Q2048.5536,1266.3696 2049.0297,1266.4795 Q2049.5058,1266.5894 2049.9208,1266.8091 L2049.9208,1268.811 Q2049.4569,1268.3838 2049.0205,1268.1854 Q2048.5841,1267.9871 2048.1203,1267.9871 Q2047.1315,1267.9871 2046.628,1268.7714 Q2046.1244,1269.5557 2046.1244,1271.0999 Q2046.1244,1272.6379 2046.628,1273.4222 Q2047.1315,1274.2065 2048.1203,1274.2065 Q2048.5841,1274.2065 2049.0205,1274.0082 Q2049.4569,1273.8098 2049.9208,1273.3826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="117.7083" x="2067.5938" y="1275.6836">LongToObjectMap</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="2209.8854" y="1252.1403"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="2214.0521" y="1268.3919">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2021.3438" x2="2222.3854" y1="1286.6536" y2="1286.6536"/><ellipse cx="2031.7604" cy="1322.0235" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="2043.2188" y="1328.9347">LongToObjectMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2021.3438" x2="2078.1146" y1="1304.8594" y2="1304.8594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2081.2396" y="1308.669">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2165.6146" x2="2222.3854" y1="1304.8594" y2="1304.8594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2021.3438" x2="2222.3854" y1="1338.6434" y2="1338.6434"/><ellipse cx="2031.7604" cy="1350.1017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="2043.2188" y="1357.0129">T get(long key)</text><ellipse cx="2031.7604" cy="1393.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="2043.2188" y="1400.6694">boolean containsKey(long key)</text><ellipse cx="2031.7604" cy="1413.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="2043.2188" y="1420.4142">LongIterator keys()</text><ellipse cx="2031.7604" cy="1433.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="2043.2188" y="1440.1591">boolean put(long key, T value)</text><ellipse cx="2031.7604" cy="1452.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="2043.2188" y="1459.904">void remove(long key)</text><ellipse cx="2031.7604" cy="1472.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="2043.2188" y="1479.6488">Iterator&lt;T&gt; values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2021.3438" x2="2087.4896" y1="1376.594" y2="1376.594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2090.6146" y="1380.4036">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2156.2396" x2="2222.3854" y1="1376.594" y2="1376.594"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect fill="#282828" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="1464.5729" y="134.9528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="1464.5729" y="134.9528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="1464.5729" y="158.0078"/><rect fill="none" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="1464.5729" y="134.9528"/><ellipse cx="1479.1563" cy="150.647" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1481.0667,155.072 Q1480.6394,155.2917 1480.1694,155.4016 Q1479.6995,155.5115 1479.1807,155.5115 Q1477.3374,155.5115 1476.3669,154.2969 Q1475.3965,153.0823 1475.3965,150.7874 Q1475.3965,148.4863 1476.3669,147.2717 Q1477.3374,146.0571 1479.1807,146.0571 Q1479.6995,146.0571 1480.1755,146.167 Q1480.6516,146.2769 1481.0667,146.4966 L1481.0667,148.4985 Q1480.6028,148.0713 1480.1664,147.8729 Q1479.73,147.6746 1479.2661,147.6746 Q1478.2773,147.6746 1477.7738,148.4589 Q1477.2703,149.2432 1477.2703,150.7874 Q1477.2703,152.3254 1477.7738,153.1097 Q1478.2773,153.894 1479.2661,153.894 Q1479.73,153.894 1480.1664,153.6957 Q1480.6028,153.4973 1481.0667,153.0701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="1495.8229" y="155.3711">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1465.6146" x2="1623.9479" y1="166.3411" y2="166.3411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1465.6146" x2="1623.9479" y1="174.6745" y2="174.6745"/><!--MD5=[7570133d8164067c1a3a4c75d824a8d3]
class SplitPrimitiveMap--><rect codeLine="287" fill="#282828" height="103.123" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="1814.5729" y="1320.8903"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="1814.5729" y="1320.8903"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="1814.5729" y="1343.9453"/><rect codeLine="287" fill="none" height="103.123" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="1814.5729" y="1320.8903"/><ellipse cx="1837.125" cy="1336.5845" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1836.7181,1333.2865 L1835.8697,1337.0158 L1837.5726,1337.0158 Z M1835.6195,1331.6386 L1837.8228,1331.6386 L1840.2826,1340.7511 L1838.482,1340.7511 L1837.9205,1338.4989 L1835.5096,1338.4989 L1834.9603,1340.7511 L1833.1597,1340.7511 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="113.5417" x="1855.5625" y="1341.3086">SplitPrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1815.6146" x2="1982.2813" y1="1352.2786" y2="1352.2786"/><polygon fill="#FFFF44" points="1826.0313,1382.4402,1830.1979,1386.6069,1826.0313,1390.7735,1821.8646,1386.6069" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1837.4896" y="1394.5597">SplitPrimitiveMap()</text><polygon fill="#FFFF44" points="1826.0313,1402.1851,1830.1979,1406.3517,1826.0313,1410.5184,1821.8646,1406.3517" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="1837.4896" y="1414.3046">SplitPrimitiveMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1815.6146" x2="1855.1979" y1="1370.4844" y2="1370.4844"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1858.3229" y="1374.294">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1942.6979" x2="1982.2813" y1="1370.4844" y2="1370.4844"/><!--MD5=[ab32211fbb9f0f10fe3c4d06d29fe61f]
class SplitIntToIntMap--><rect codeLine="220" fill="#282828" height="253.8371" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="1718.7396" y="1583.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="1718.7396" y="1583.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="1718.7396" y="1606.9661"/><rect codeLine="220" fill="none" height="253.8371" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="1718.7396" y="1583.9111"/><ellipse cx="1778.1146" cy="1599.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1780.025,1604.0304 Q1779.5977,1604.2501 1779.1278,1604.3599 Q1778.6578,1604.4698 1778.139,1604.4698 Q1776.2957,1604.4698 1775.3253,1603.2552 Q1774.3548,1602.0406 1774.3548,1599.7457 Q1774.3548,1597.4447 1775.3253,1596.2301 Q1776.2957,1595.0155 1778.139,1595.0155 Q1778.6578,1595.0155 1779.1339,1595.1253 Q1779.6099,1595.2352 1780.025,1595.4549 L1780.025,1597.4569 Q1779.5611,1597.0296 1779.1247,1596.8313 Q1778.6883,1596.6329 1778.2244,1596.6329 Q1777.2357,1596.6329 1776.7321,1597.4172 Q1776.2286,1598.2015 1776.2286,1599.7457 Q1776.2286,1601.2838 1776.7321,1602.0681 Q1777.2357,1602.8524 1778.2244,1602.8524 Q1778.6883,1602.8524 1779.1247,1602.654 Q1779.5611,1602.4556 1780.025,1602.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="108.3333" x="1801.0313" y="1604.3294">SplitIntToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1719.7813" x2="1959.3646" y1="1615.2995" y2="1615.2995"/><ellipse cx="1730.1979" cy="1650.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="1741.6563" y="1657.5806">SplitIntToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1719.7813" x2="1795.8229" y1="1633.5052" y2="1633.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1798.9479" y="1637.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1883.3229" x2="1959.3646" y1="1633.5052" y2="1633.5052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1719.7813" x2="1959.3646" y1="1667.2892" y2="1667.2892"/><ellipse cx="1730.1979" cy="1678.7476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="1741.6563" y="1685.6588">void entries(IntToIntMap.EntryVisitor)</text><ellipse cx="1730.1979" cy="1698.4924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="1741.6563" y="1705.4036">int get(int key)</text><ellipse cx="1730.1979" cy="1742.1488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1741.6563" y="1749.0601">boolean containsKey(int key)</text><ellipse cx="1730.1979" cy="1761.8937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1741.6563" y="1768.8049">IntIterator keys()</text><ellipse cx="1730.1979" cy="1781.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="1741.6563" y="1788.5498">void put(int key, int value)</text><ellipse cx="1730.1979" cy="1801.3835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1741.6563" y="1808.2947">boolean remove(int key)</text><ellipse cx="1730.1979" cy="1821.1283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1741.6563" y="1828.0396">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1719.7813" x2="1805.1979" y1="1724.9847" y2="1724.9847"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1808.3229" y="1728.7944">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1873.9479" x2="1959.3646" y1="1724.9847" y2="1724.9847"/><!--MD5=[dfe124e4b4908e38b60aed9b25001332]
class SplitLongToByteMap--><rect codeLine="237" fill="#282828" height="253.8371" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="948.4271" y="1583.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="948.4271" y="1583.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="948.4271" y="1606.9661"/><rect codeLine="237" fill="none" height="253.8371" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="948.4271" y="1583.9111"/><ellipse cx="1006.2396" cy="1599.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1008.15,1604.0304 Q1007.7227,1604.2501 1007.2528,1604.3599 Q1006.7828,1604.4698 1006.264,1604.4698 Q1004.4207,1604.4698 1003.4503,1603.2552 Q1002.4798,1602.0406 1002.4798,1599.7457 Q1002.4798,1597.4447 1003.4503,1596.2301 Q1004.4207,1595.0155 1006.264,1595.0155 Q1006.7828,1595.0155 1007.2589,1595.1253 Q1007.7349,1595.2352 1008.15,1595.4549 L1008.15,1597.4569 Q1007.6861,1597.0296 1007.2497,1596.8313 Q1006.8133,1596.6329 1006.3494,1596.6329 Q1005.3607,1596.6329 1004.8571,1597.4172 Q1004.3536,1598.2015 1004.3536,1599.7457 Q1004.3536,1601.2838 1004.8571,1602.0681 Q1005.3607,1602.8524 1006.3494,1602.8524 Q1006.8133,1602.8524 1007.2497,1602.654 Q1007.6861,1602.4556 1008.15,1602.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="1029.1563" y="1604.3294">SplitLongToByteMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="949.4688" x2="1210.9271" y1="1615.2995" y2="1615.2995"/><ellipse cx="959.8854" cy="1650.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="971.3438" y="1657.5806">SplitLongToByteMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="949.4688" x2="1036.4479" y1="1633.5052" y2="1633.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1039.5729" y="1637.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1123.9479" x2="1210.9271" y1="1633.5052" y2="1633.5052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="949.4688" x2="1210.9271" y1="1667.2892" y2="1667.2892"/><ellipse cx="959.8854" cy="1678.7476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="971.3438" y="1685.6588">void entries(LongToByteMap.EntryVisitor)</text><ellipse cx="959.8854" cy="1698.4924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="971.3438" y="1705.4036">byte get(long key)</text><ellipse cx="959.8854" cy="1742.1488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="971.3438" y="1749.0601">boolean containsKey(long key)</text><ellipse cx="959.8854" cy="1761.8937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="971.3438" y="1768.8049">LongIterator keys()</text><ellipse cx="959.8854" cy="1781.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="971.3438" y="1788.5498">void put(long key, byte value)</text><ellipse cx="959.8854" cy="1801.3835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="971.3438" y="1808.2947">boolean remove(long key)</text><ellipse cx="959.8854" cy="1821.1283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="971.3438" y="1828.0396">ByteIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="949.4688" x2="1045.8229" y1="1724.9847" y2="1724.9847"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1048.9479" y="1728.7944">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1114.5729" x2="1210.9271" y1="1724.9847" y2="1724.9847"/><!--MD5=[ef14bcef69138822e1b48ba4f12b63f3]
class SplitLongToIntMap--><rect codeLine="254" fill="#282828" height="253.8371" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="1367.1771" y="1583.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="1367.1771" y="1583.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="1367.1771" y="1606.9661"/><rect codeLine="254" fill="none" height="253.8371" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="1367.1771" y="1583.9111"/><ellipse cx="1426.0313" cy="1599.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1427.9417,1604.0304 Q1427.5144,1604.2501 1427.0444,1604.3599 Q1426.5745,1604.4698 1426.0557,1604.4698 Q1424.2124,1604.4698 1423.2419,1603.2552 Q1422.2715,1602.0406 1422.2715,1599.7457 Q1422.2715,1597.4447 1423.2419,1596.2301 Q1424.2124,1595.0155 1426.0557,1595.0155 Q1426.5745,1595.0155 1427.0505,1595.1253 Q1427.5266,1595.2352 1427.9417,1595.4549 L1427.9417,1597.4569 Q1427.4778,1597.0296 1427.0414,1596.8313 Q1426.605,1596.6329 1426.1411,1596.6329 Q1425.1523,1596.6329 1424.6488,1597.4172 Q1424.1453,1598.2015 1424.1453,1599.7457 Q1424.1453,1601.2838 1424.6488,1602.0681 Q1425.1523,1602.8524 1426.1411,1602.8524 Q1426.605,1602.8524 1427.0414,1602.654 Q1427.4778,1602.4556 1427.9417,1602.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="1448.9479" y="1604.3294">SplitLongToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1368.2188" x2="1621.3438" y1="1615.2995" y2="1615.2995"/><ellipse cx="1378.6354" cy="1650.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="1390.0938" y="1657.5806">SplitLongToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1368.2188" x2="1451.0313" y1="1633.5052" y2="1633.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1454.1563" y="1637.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1538.5313" x2="1621.3438" y1="1633.5052" y2="1633.5052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1368.2188" x2="1621.3438" y1="1667.2892" y2="1667.2892"/><ellipse cx="1378.6354" cy="1678.7476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="1390.0938" y="1685.6588">void entries(LongToIntMap.EntryVisitor)</text><ellipse cx="1378.6354" cy="1698.4924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="1390.0938" y="1705.4036">int get(long key)</text><ellipse cx="1378.6354" cy="1742.1488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1390.0938" y="1749.0601">boolean containsKey(long key)</text><ellipse cx="1378.6354" cy="1761.8937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1390.0938" y="1768.8049">LongIterator keys()</text><ellipse cx="1378.6354" cy="1781.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="1390.0938" y="1788.5498">void put(long key, int value)</text><ellipse cx="1378.6354" cy="1801.3835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1390.0938" y="1808.2947">boolean remove(long key)</text><ellipse cx="1378.6354" cy="1821.1283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1390.0938" y="1828.0396">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1368.2188" x2="1460.4063" y1="1724.9847" y2="1724.9847"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1463.5313" y="1728.7944">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1529.1563" x2="1621.3438" y1="1724.9847" y2="1724.9847"/><!--MD5=[52afe792c50e067479042a27d2114020]
class SplitLongToLongMap--><rect codeLine="271" fill="#282828" height="253.8371" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="405.1979" y="1583.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="405.1979" y="1583.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="405.1979" y="1606.9661"/><rect codeLine="271" fill="none" height="253.8371" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="405.1979" y="1583.9111"/><ellipse cx="463.5313" cy="1599.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M465.4417,1604.0304 Q465.0144,1604.2501 464.5444,1604.3599 Q464.0745,1604.4698 463.5557,1604.4698 Q461.7124,1604.4698 460.7419,1603.2552 Q459.7715,1602.0406 459.7715,1599.7457 Q459.7715,1597.4447 460.7419,1596.2301 Q461.7124,1595.0155 463.5557,1595.0155 Q464.0745,1595.0155 464.5505,1595.1253 Q465.0266,1595.2352 465.4417,1595.4549 L465.4417,1597.4569 Q464.9778,1597.0296 464.5414,1596.8313 Q464.105,1596.6329 463.6411,1596.6329 Q462.6523,1596.6329 462.1488,1597.4172 Q461.6453,1598.2015 461.6453,1599.7457 Q461.6453,1601.2838 462.1488,1602.0681 Q462.6523,1602.8524 463.6411,1602.8524 Q464.105,1602.8524 464.5414,1602.654 Q464.9778,1602.4556 465.4417,1602.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="137.5" x="486.4479" y="1604.3294">SplitLongToLongMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="406.2396" x2="672.9063" y1="1615.2995" y2="1615.2995"/><ellipse cx="416.6563" cy="1650.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="428.1146" y="1657.5806">SplitLongToLongMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="406.2396" x2="495.8229" y1="1633.5052" y2="1633.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="498.9479" y="1637.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="583.3229" x2="672.9063" y1="1633.5052" y2="1633.5052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="406.2396" x2="672.9063" y1="1667.2892" y2="1667.2892"/><ellipse cx="416.6563" cy="1678.7476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="428.1146" y="1685.6588">void entries(LongToLongMap.EntryVisitor)</text><ellipse cx="416.6563" cy="1698.4924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="428.1146" y="1705.4036">long get(long key)</text><ellipse cx="416.6563" cy="1742.1488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="428.1146" y="1749.0601">boolean containsKey(long key)</text><ellipse cx="416.6563" cy="1761.8937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="428.1146" y="1768.8049">LongIterator keys()</text><ellipse cx="416.6563" cy="1781.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="428.1146" y="1788.5498">void put(long key, long value)</text><ellipse cx="416.6563" cy="1801.3835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="428.1146" y="1808.2947">boolean remove(long key)</text><ellipse cx="416.6563" cy="1821.1283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="428.1146" y="1828.0396">LongIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="406.2396" x2="505.1979" y1="1724.9847" y2="1724.9847"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="508.3229" y="1728.7944">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="573.9479" x2="672.9063" y1="1724.9847" y2="1724.9847"/><!--MD5=[e135e717202c57d1af1e40f21fab24a0]
class StringToIntMap--><rect codeLine="295" fill="#282828" height="234.0922" id="StringToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="2259.8854" y="1255.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="2259.8854" y="1255.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="2259.8854" y="1278.3203"/><rect codeLine="295" fill="none" height="234.0922" id="StringToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="2259.8854" y="1255.2653"/><ellipse cx="2310.4063" cy="1270.9595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2312.3167,1275.3845 Q2311.8894,1275.6042 2311.4194,1275.7141 Q2310.9495,1275.824 2310.4307,1275.824 Q2308.5874,1275.824 2307.6169,1274.6094 Q2306.6465,1273.3948 2306.6465,1271.0999 Q2306.6465,1268.7988 2307.6169,1267.5842 Q2308.5874,1266.3696 2310.4307,1266.3696 Q2310.9495,1266.3696 2311.4255,1266.4795 Q2311.9016,1266.5894 2312.3167,1266.8091 L2312.3167,1268.811 Q2311.8528,1268.3838 2311.4164,1268.1854 Q2310.98,1267.9871 2310.5161,1267.9871 Q2309.5273,1267.9871 2309.0238,1268.7714 Q2308.5203,1269.5557 2308.5203,1271.0999 Q2308.5203,1272.6379 2309.0238,1273.4222 Q2309.5273,1274.2065 2310.5161,1274.2065 Q2310.98,1274.2065 2311.4164,1274.0082 Q2311.8528,1273.8098 2312.3167,1273.3826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="100" x="2333.3229" y="1275.6836">StringToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2260.9271" x2="2474.4688" y1="1286.6536" y2="1286.6536"/><ellipse cx="2271.3438" cy="1322.0235" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="2282.8021" y="1328.9347">StringToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2260.9271" x2="2323.9479" y1="1304.8594" y2="1304.8594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2327.0729" y="1308.669">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2411.4479" x2="2474.4688" y1="1304.8594" y2="1304.8594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2260.9271" x2="2474.4688" y1="1338.6434" y2="1338.6434"/><ellipse cx="2271.3438" cy="1350.1017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="2282.8021" y="1357.0129">int get(String key)</text><ellipse cx="2271.3438" cy="1393.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2282.8021" y="1400.6694">boolean containsKey(String key)</text><ellipse cx="2271.3438" cy="1413.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="2282.8021" y="1420.4142">Iterator&lt;String&gt; keys()</text><ellipse cx="2271.3438" cy="1433.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2282.8021" y="1440.1591">boolean put(String key, int value)</text><ellipse cx="2271.3438" cy="1452.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="2282.8021" y="1459.904">boolean remove(String key)</text><ellipse cx="2271.3438" cy="1472.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="2282.8021" y="1479.6488">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2260.9271" x2="2333.3229" y1="1376.594" y2="1376.594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2336.4479" y="1380.4036">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2402.0729" x2="2474.4688" y1="1376.594" y2="1376.594"/><!--MD5=[8d531d0cbf17c61be57944b1351ca314]
class StringToObjectMap--><rect codeLine="310" fill="#282828" height="234.0922" id="StringToObjectMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="211.4583" x="2511.9688" y="1255.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="211.4583" x="2511.9688" y="1255.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="211.4583" x="2511.9688" y="1278.3203"/><rect codeLine="310" fill="none" height="234.0922" id="StringToObjectMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="211.4583" x="2511.9688" y="1255.2653"/><ellipse cx="2540.6146" cy="1270.9595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2542.525,1275.3845 Q2542.0977,1275.6042 2541.6278,1275.7141 Q2541.1578,1275.824 2540.639,1275.824 Q2538.7957,1275.824 2537.8253,1274.6094 Q2536.8548,1273.3948 2536.8548,1271.0999 Q2536.8548,1268.7988 2537.8253,1267.5842 Q2538.7957,1266.3696 2540.639,1266.3696 Q2541.1578,1266.3696 2541.6339,1266.4795 Q2542.1099,1266.5894 2542.525,1266.8091 L2542.525,1268.811 Q2542.0611,1268.3838 2541.6247,1268.1854 Q2541.1883,1267.9871 2540.7244,1267.9871 Q2539.7357,1267.9871 2539.2321,1268.7714 Q2538.7286,1269.5557 2538.7286,1271.0999 Q2538.7286,1272.6379 2539.2321,1273.4222 Q2539.7357,1274.2065 2540.7244,1274.2065 Q2541.1883,1274.2065 2541.6247,1274.0082 Q2542.0611,1273.8098 2542.525,1273.3826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="2560.4063" y="1275.6836">StringToObjectMap</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="2709.8854" y="1252.1403"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="2714.0521" y="1268.3919">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2513.0104" x2="2722.3854" y1="1286.6536" y2="1286.6536"/><ellipse cx="2523.4271" cy="1322.0235" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="2534.8854" y="1328.9347">StringToObjectMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2513.0104" x2="2573.9479" y1="1304.8594" y2="1304.8594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2577.0729" y="1308.669">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2661.4479" x2="2722.3854" y1="1304.8594" y2="1304.8594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2513.0104" x2="2722.3854" y1="1338.6434" y2="1338.6434"/><ellipse cx="2523.4271" cy="1350.1017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="2534.8854" y="1357.0129">T get(String key)</text><ellipse cx="2523.4271" cy="1393.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2534.8854" y="1400.6694">boolean containsKey(String key)</text><ellipse cx="2523.4271" cy="1413.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="2534.8854" y="1420.4142">Iterator&lt;String&gt; keys()</text><ellipse cx="2523.4271" cy="1433.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="2534.8854" y="1440.1591">void put(String key, T value)</text><ellipse cx="2523.4271" cy="1452.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="2534.8854" y="1459.904">boolean remove(String key)</text><ellipse cx="2523.4271" cy="1472.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="2534.8854" y="1479.6488">Iterator&lt;T&gt; values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2513.0104" x2="2583.3229" y1="1376.594" y2="1376.594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2586.4479" y="1380.4036">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2652.0729" x2="2722.3854" y1="1376.594" y2="1376.594"/><!--MD5=[0754655fb52758b3ad82002fbd402b68]
reverse link HashingStrategy to DefaultHashingStrategy--><path codeLine="10" d="M2033.3229,286.682 C2033.3229,407.234 2033.3229,583.7549 2033.3229,677.932 " fill="none" id="HashingStrategy-backto-DefaultHashingStrategy" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2026.0313,286.8903,2033.3229,266.057,2040.6146,286.8903,2026.0313,286.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d6d62817bcac8e36c96b4ccdb5302943]
reverse link PrimitiveMap to IntToByteMap--><path codeLine="32" d="M1361.3229,919.9007 C1270.2708,1008.8174 1159.8854,1119.7445 1065.6146,1223.4945 C1059.5729,1230.1403 1053.4479,1237.0361 1047.3229,1244.0465 " fill="none" id="PrimitiveMap-backto-IntToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1356.0729,914.8278,1376.0833,905.5049,1366.2604,925.2757,1356.0729,914.8278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b3edcd3ecebfdec630bfe78d7109e115]
reverse link PrimitiveScalarMap to IntToByteMap--><path codeLine="33" d="M639.8646,860.8486 C700.6354,962.9632 789.4792,1112.234 855.4167,1223.0153 " fill="none" id="PrimitiveScalarMap-backto-IntToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="633.6667,864.7028,629.2813,843.0778,646.1979,857.2445,633.6667,864.7028" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[76f5ec106d81c5bf9858e27d0207abdb]
reverse link PrimitiveMap to IntToIntMap--><path codeLine="51" d="M1366.2188,1053.484 C1331.9896,1112.6507 1297.625,1172.0465 1268.0208,1223.2132 " fill="none" id="PrimitiveMap-backto-IntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1359.7917,1050.0361,1376.5313,1035.6507,1372.4167,1057.3382,1359.7917,1050.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7f278e1b51658c783131fb9dd9d2cd1b]
reverse link PrimitiveScalarMap to IntToIntMap--><path codeLine="52" d="M694.6354,856.5257 C797.1979,950.984 944.9896,1091.6195 1064.5729,1223.4945 C1070.8542,1230.4215 1077.1979,1237.6403 1083.5104,1245.0049 " fill="none" id="PrimitiveScalarMap-backto-IntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="689.8229,862.0153,679.4167,842.5465,699.6875,851.2757,689.8229,862.0153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2821fea3c75eb2d7f7fdad1d5f4db6ec]
reverse link PrimitiveMap to IntToLongMap--><path codeLine="70" d="M1458.0417,1183.2965 C1455.3229,1197.0049 1452.6875,1210.3174 1450.1563,1223.1299 " fill="none" id="PrimitiveMap-backto-IntToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1450.8542,1182.0361,1462.0521,1163.0153,1465.1563,1184.8695,1450.8542,1182.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ddce4afa62136d18bd758d981f8903ed]
reverse link PrimitiveScalarMap to IntToLongMap--><path codeLine="71" d="M710.5,819.7965 C863.8646,905.7653 1113,1056.557 1298.9479,1223.4945 C1305.0104,1228.9424 1311.0313,1234.7028 1316.9583,1240.6611 " fill="none" id="PrimitiveScalarMap-backto-IntToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="707.3854,826.4007,692.7396,809.8903,714.4896,813.6611,707.3854,826.4007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[040870d85e7f7705f24976a14ef10a66]
reverse link PrimitiveMap to LongToByteMap--><path codeLine="89" d="M1632.25,1183.2965 C1634.9792,1197.0049 1637.6458,1210.3174 1640.1979,1223.1299 " fill="none" id="PrimitiveMap-backto-LongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1625.125,1184.8695,1628.2083,1163.0153,1639.4271,1182.0153,1625.125,1184.8695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[95705643c5315735915aa5f42918d38e]
reverse link PrimitiveScalarMap to LongToByteMap--><path codeLine="90" d="M710.8229,827.359 C865.9688,916.7445 1125.2396,1060.057 1359.3646,1160.9945 C1438.4167,1195.0778 1471.3958,1175.2549 1542.6979,1223.4945 C1549,1227.7653 1555.1875,1232.4215 1561.2188,1237.3695 " fill="none" id="PrimitiveScalarMap-backto-LongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="707.25,833.7236,692.8646,816.984,714.5521,821.0882,707.25,833.7236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[43d2883c617144fa6ee4ff234e205763]
reverse link PrimitiveMap to LongToIntMap--><path codeLine="108" d="M1357.4896,841.2757 C1188.9792,927.2861 934.0625,1055.5361 709.3646,1160.9945 C647.0625,1190.234 622.5417,1181.9215 567.6979,1223.4945 C561.5938,1228.1195 555.6146,1233.0986 549.7604,1238.3486 " fill="none" id="PrimitiveMap-backto-LongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1353.8229,834.9632,1375.6875,831.9736,1360.4583,847.9424,1353.8229,834.9632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dea75a0d8d2629fad16d69e4494b4bd7]
reverse link PrimitiveScalarMap to LongToIntMap--><path codeLine="109" d="M547.1667,863.4111 C526.8125,965.4424 497.3438,1113.1507 475.4271,1223.0153 " fill="none" id="PrimitiveScalarMap-backto-LongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="539.9583,862.2653,551.1875,843.2653,554.2604,865.1195,539.9583,862.2653" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fe21cdbf122257974c2ff0eaf3402d77]
reverse link PrimitiveMap to LongToLongMap--><path codeLine="127" d="M1358.1563,848.9007 C1205.9583,938.1924 989.5,1075.5882 821.8646,1223.4945 C815.8958,1228.7549 809.9583,1234.307 804.0833,1240.0257 " fill="none" id="PrimitiveMap-backto-LongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1354.2917,842.7132,1375.9583,838.5049,1361.6458,855.307,1354.2917,842.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dc740e68972780ea96cf7b8d3c66e190]
reverse link PrimitiveScalarMap to LongToLongMap--><path codeLine="128" d="M594.2813,863.4111 C614.4583,965.4424 643.6875,1113.1507 665.4167,1223.0153 " fill="none" id="PrimitiveScalarMap-backto-LongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="587.1771,865.1195,590.2917,843.2653,601.4896,862.2861,587.1771,865.1195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[de3e81bd370bbaf9133d0fea8d1e886f]
reverse link PrimitiveMap to LongToObjectMap--><path codeLine="146" d="M1729.0521,1160.0465 C1729.4375,1160.3695 1729.8125,1160.682 1730.1979,1160.9945 C1825.9167,1239.7965 1896.8958,1157.8486 2002.0729,1223.4945 C2015.9479,1232.1507 2028.9375,1242.9945 2040.8646,1254.8486 " fill="none" id="PrimitiveMap-backto-LongToObjectMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1724.3021,1165.5882,1713.625,1146.2653,1734.0208,1154.7132,1724.3021,1165.5882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[69733526af6d042158e0c4d64d9e320f]
reverse link PrimitiveCollection to PrimitiveMap--><path codeLine="161" d="M1544.7813,205.234 C1544.7813,235.234 1544.7813,277.8799 1544.7813,326.1924 " fill="none" id="PrimitiveCollection-backto-PrimitiveMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1537.4896,205.5674,1544.7813,184.734,1552.0729,205.5674,1537.4896,205.5674" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2dbf538002e9ad59efd038bad64db3a2]
reverse link SplitPrimitiveMap to SplitIntToIntMap--><path codeLine="218" d="M1886.125,1446.1611 C1879.0521,1486.2236 1870.0729,1537.0986 1861.8958,1583.4632 " fill="none" id="SplitPrimitiveMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1878.9167,1445.0361,1889.7188,1425.7861,1893.2813,1447.5674,1878.9167,1445.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9b8b15e161c7f422a47b215cbe12e445]
reverse link PrimitiveScalarMap to SplitIntToIntMap--><path codeLine="219" d="M491.3021,860.2028 C432.0938,953.4736 356.1771,1090.6715 323.9479,1223.4945 C292.7188,1352.1715 232.5625,1425.5882 323.9479,1521.4111 C425.0208,1627.4007 1500.9583,1539.7861 1640.6146,1583.9111 C1667.2188,1592.3174 1693.7813,1605.2028 1718.4375,1619.5778 " fill="none" id="PrimitiveScalarMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="485.0313,856.4736,502.4271,842.8903,497.2917,864.359,485.0313,856.4736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[42a18a6fd1c762375d2c47fe1d73e6dd]
reverse link SplitPrimitiveMap to SplitLongToByteMap--><path codeLine="235" d="M1866.6771,1443.734 C1849.9167,1472.3903 1826.6354,1503.0465 1796.8646,1521.4111 C1625.7813,1626.932 1541.6354,1526.7028 1348.9479,1583.9111 C1303,1597.5465 1254.9688,1617.9111 1212.4271,1638.3174 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1860.0938,1440.5674,1876.4792,1425.7757,1872.8958,1447.557,1860.0938,1440.5674" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7f4d3046b89bb9ae161467daade763f4]
reverse link PrimitiveScalarMap to SplitLongToByteMap--><path codeLine="236" d="M440.7813,856.6715 C268.5313,1017.9736 6.25,1318.7757 185.4063,1521.4111 C260.4896,1606.3382 580.9896,1559.3695 691.6563,1583.9111 C778.5417,1603.182 873.6146,1633.8486 947.9688,1660.109 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="435.7604,851.3903,456,842.5778,445.6667,862.0882,435.7604,851.3903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8447b494efe3cef70e5d6b1743be066c]
reverse link SplitPrimitiveMap to SplitLongToIntMap--><path codeLine="252" d="M1859.4167,1442.9424 C1842.3229,1469.3799 1820.7396,1498.609 1796.8646,1521.4111 C1792.9583,1525.1403 1703.2917,1580.984 1622.6667,1630.932 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1853,1439.4632,1870.2188,1425.6507,1865.375,1447.182,1853,1439.4632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2a36385a340796500f8d19ec27c5a970]
reverse link PrimitiveScalarMap to SplitLongToIntMap--><path codeLine="253" d="M458.5521,857.932 C308.2292,1022.7861 80.0938,1330.2236 259.3646,1521.4111 C333.3021,1600.2653 1125.5833,1556.7028 1230.1979,1583.9111 C1276.6042,1595.984 1324.7083,1616.2445 1366.9583,1637.0361 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="453.1875,852.984,472.6771,842.6195,463.9063,862.8799,453.1875,852.984" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d0a1b7ac5b8eda5e2aa3281b0eb70717]
reverse link SplitPrimitiveMap to SplitLongToLongMap--><path codeLine="269" d="M1867.5938,1444.057 C1850.9271,1473.0778 1827.4583,1503.9215 1796.8646,1521.4111 C1629.2292,1617.2445 1119.7396,1547.057 930.1979,1583.9111 C843.2813,1600.807 748.7188,1630.9945 674.4063,1657.5882 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1861.0729,1440.7965,1877.3229,1425.8486,1873.9479,1447.6611,1861.0729,1440.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[47c292327a2f38ddd5846813bb5c62d1]
reverse link PrimitiveScalarMap to SplitLongToLongMap--><path codeLine="270" d="M432.2708,841.1507 C321.9688,926.9736 175.7917,1063.5257 111.4479,1223.4945 C62.0313,1346.3382 39.1042,1410.5153 111.4479,1521.4111 C175.8958,1620.2132 305.0313,1667.5986 404.7083,1690.0986 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="427.7708,835.4007,448.7396,828.5049,436.6563,846.9736,427.7708,835.4007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5d0e7a1d6ed25fb4431f591a99579779]
reverse link PrimitiveMap to SplitPrimitiveMap--><path codeLine="286" d="M1724.8229,1153.3278 C1726.6042,1155.9007 1728.3958,1158.4632 1730.1979,1160.9945 C1753.7396,1194.0882 1770.3646,1192.7132 1796.8646,1223.4945 C1823.0208,1253.8799 1848.6458,1291.0257 1867.6667,1320.4945 " fill="none" id="PrimitiveMap-backto-SplitPrimitiveMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1718.7813,1157.4111,1713.25,1136.0361,1730.8958,1149.2965,1718.7813,1157.4111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5f9a34b262ffd8f8cf99b013ffdddf93]
reverse link PrimitiveMap to StringToIntMap--><path codeLine="294" d="M1729.6146,1160.5674 C1729.8125,1160.7028 1730,1160.8486 1730.1979,1160.9945 C1914.3438,1297.1299 2039.9583,1115.0465 2241.6563,1223.4945 C2256.9583,1231.7236 2271.2083,1242.6299 2284.1979,1254.7965 " fill="none" id="PrimitiveMap-backto-StringToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1725.0521,1166.2549,1713.4271,1147.4945,1734.2188,1154.9007,1725.0521,1166.2549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ef56b1f5ea11821ef2c3b70f1e335cfb]
reverse link PrimitiveMap to StringToObjectMap--><path codeLine="309" d="M1729.9063,1160.7861 C1730,1160.859 1730.1042,1160.9215 1730.1979,1160.9945 C1869.0833,1259.4528 2342.5313,1145.2549 2493.7396,1223.4945 C2509.3646,1231.5778 2523.7917,1242.5674 2536.8542,1254.932 " fill="none" id="PrimitiveMap-backto-StringToObjectMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1725.6563,1166.7132,1713.6458,1148.1924,1734.5833,1155.182,1725.6563,1166.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e2d5118f852f568a547e3571e11429c4]
@startuml

    !include lexakai.theme
    
    title "Primitive Maps"
    
    interface PrimitiveScalarMap
    interface HashingStrategy
    
    HashingStrategy <|- - DefaultHashingStrategy
    class DefaultHashingStrategy
    {
        - -
        +DefaultHashingStrategy defaultHashingStrategy(Estimate capacity, Percent maximumOccupancy)
        +DefaultHashingStrategy defaultHashingStrategy(Estimate capacity)
        - -(math)- -
        +Percent defaultMaximumOccupancy()
    }
    
    interface HashingStrategy
    {
        - -(collection)- -
        +Count rehashThreshold()
        - -(functional)- -
        +Estimate recommendedSize()
        +HashingStrategy withCapacity(Estimate size)
        +HashingStrategy withIncreasedCapacity()
        - -(math)- -
        +Percent maximumOccupancy()
    }
    
    PrimitiveMap <|- - IntToByteMap
    PrimitiveScalarMap <|- - IntToByteMap
    class IntToByteMap
    {
        - -(constructors)- -
        +IntToByteMap(String)
        - -
        +void entries(EntryVisitor)
        +byte get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, byte value)
        +boolean remove(int key)
        +ByteIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - IntToIntMap
    PrimitiveScalarMap <|- - IntToIntMap
    class IntToIntMap
    {
        - -(constructors)- -
        +IntToIntMap(String)
        - -
        +void entries(EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - IntToLongMap
    PrimitiveScalarMap <|- - IntToLongMap
    class IntToLongMap
    {
        - -(constructors)- -
        +IntToLongMap(String)
        - -
        +void entries(EntryVisitor)
        +long get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, long value)
        +boolean remove(int key)
        +LongIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - LongToByteMap
    PrimitiveScalarMap <|- - LongToByteMap
    class LongToByteMap
    {
        - -(constructors)- -
        +LongToByteMap(String)
        - -
        +void entries(EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToIntMap
    PrimitiveScalarMap <|- - LongToIntMap
    class LongToIntMap
    {
        - -(constructors)- -
        +LongToIntMap(String)
        - -
        +void entries(EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToLongMap
    PrimitiveScalarMap <|- - LongToLongMap
    class LongToLongMap
    {
        - -(constructors)- -
        +LongToLongMap(String)
        - -
        +void entries(EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToObjectMap
    class LongToObjectMap<T>
    {
        - -(constructors)- -
        +LongToObjectMap(String)
        - -
        +T get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, T value)
        +void remove(long key)
        +Iterator<T> values()
    }
    
    PrimitiveCollection <|- - PrimitiveMap
    abstract class PrimitiveMap
    {
        - -(constructors)- -
        #PrimitiveMap()
        #PrimitiveMap(String)
        - -
        #void compare(PrimitiveMap that)
        #HashingStrategy hashingStrategy()
        #int slots()
        - -(checks)- -
        #boolean isTombstone(int key)
        #boolean isTombstone(Object key)
        #boolean isTombstone(long key)
        - -(collection)- -
        +boolean contains(long[] values, long value)
        +boolean contains(T[] values, T value)
        +boolean contains(int[] values, int value)
        +boolean isEmpty(long key)
        +boolean isEmpty(byte key)
        +boolean isEmpty(int key)
        +boolean isEmpty(String key)
        #int hash(long value)
        #int hash(int value)
        #PrimitiveMap hashingStrategy(HashingStrategy)
        #void increaseSize()
        #long index(long hash)
        #int index(int index)
        #int index(long[] values, long value)
        #int index(int[] values, int value)
        #int index(Object[] values, Object value)
        #PrimitiveMap newMap()
        #IntIterator nonEmptyIndexes(byte[] values)
        #IntIterator nonEmptyIndexes(long[] values)
        #IntIterator nonEmptyIndexes(int[] values)
        #IntIterator nonEmptyIndexes(T[] values)
        #LongIterator nonEmptyValues(long[] values)
        #IntIterator nonEmptyValues(int[] values)
        #ByteIterator nonEmptyValues(byte[] values)
        #Iterator<T> nonEmptyValues(T[] values)
        - -(filesystem)- -
        #void copy(PrimitiveMap that)
        #void copyEntries(PrimitiveMap that, ProgressReporter)
    }
    
    interface PrimitiveScalarMap
    {
        - -
        +long getScalar(long key)
        - -(checks)- -
        +boolean isScalarValueNull(long value)
        - -(collection)- -
        +boolean isScalarKeyNull(long key)
        +void putScalar(long key, LongValued)
        +void putScalar(long key, long value)
    }
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
    PrimitiveMap <|- - SplitPrimitiveMap
    abstract class SplitPrimitiveMap
    {
        - -(constructors)- -
        #SplitPrimitiveMap()
        #SplitPrimitiveMap(String)
    }
    
    PrimitiveMap <|- - StringToIntMap
    class StringToIntMap
    {
        - -(constructors)- -
        +StringToIntMap(String)
        - -
        +int get(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +boolean put(String key, int value)
        +boolean remove(String key)
        +IntIterator values()
    }
    
    PrimitiveMap <|- - StringToObjectMap
    class StringToObjectMap<T>
    {
        - -(constructors)- -
        +StringToObjectMap(String)
        - -
        +T get(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +void put(String key, T value)
        +boolean remove(String key)
        +Iterator<T> values()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Maps"
    
    interface PrimitiveScalarMap
    interface HashingStrategy
    
    HashingStrategy <|- - DefaultHashingStrategy
    class DefaultHashingStrategy
    {
        - -
        +DefaultHashingStrategy defaultHashingStrategy(Estimate capacity, Percent maximumOccupancy)
        +DefaultHashingStrategy defaultHashingStrategy(Estimate capacity)
        - -(math)- -
        +Percent defaultMaximumOccupancy()
    }
    
    interface HashingStrategy
    {
        - -(collection)- -
        +Count rehashThreshold()
        - -(functional)- -
        +Estimate recommendedSize()
        +HashingStrategy withCapacity(Estimate size)
        +HashingStrategy withIncreasedCapacity()
        - -(math)- -
        +Percent maximumOccupancy()
    }
    
    PrimitiveMap <|- - IntToByteMap
    PrimitiveScalarMap <|- - IntToByteMap
    class IntToByteMap
    {
        - -(constructors)- -
        +IntToByteMap(String)
        - -
        +void entries(EntryVisitor)
        +byte get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, byte value)
        +boolean remove(int key)
        +ByteIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - IntToIntMap
    PrimitiveScalarMap <|- - IntToIntMap
    class IntToIntMap
    {
        - -(constructors)- -
        +IntToIntMap(String)
        - -
        +void entries(EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - IntToLongMap
    PrimitiveScalarMap <|- - IntToLongMap
    class IntToLongMap
    {
        - -(constructors)- -
        +IntToLongMap(String)
        - -
        +void entries(EntryVisitor)
        +long get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +boolean put(int key, long value)
        +boolean remove(int key)
        +LongIterator values()
        - -(math)- -
        +void increment(int key)
    }
    
    PrimitiveMap <|- - LongToByteMap
    PrimitiveScalarMap <|- - LongToByteMap
    class LongToByteMap
    {
        - -(constructors)- -
        +LongToByteMap(String)
        - -
        +void entries(EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToIntMap
    PrimitiveScalarMap <|- - LongToIntMap
    class LongToIntMap
    {
        - -(constructors)- -
        +LongToIntMap(String)
        - -
        +void entries(EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToLongMap
    PrimitiveScalarMap <|- - LongToLongMap
    class LongToLongMap
    {
        - -(constructors)- -
        +LongToLongMap(String)
        - -
        +void entries(EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
        - -(math)- -
        +void increment(long key)
    }
    
    PrimitiveMap <|- - LongToObjectMap
    class LongToObjectMap<T>
    {
        - -(constructors)- -
        +LongToObjectMap(String)
        - -
        +T get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +boolean put(long key, T value)
        +void remove(long key)
        +Iterator<T> values()
    }
    
    PrimitiveCollection <|- - PrimitiveMap
    abstract class PrimitiveMap
    {
        - -(constructors)- -
        #PrimitiveMap()
        #PrimitiveMap(String)
        - -
        #void compare(PrimitiveMap that)
        #HashingStrategy hashingStrategy()
        #int slots()
        - -(checks)- -
        #boolean isTombstone(int key)
        #boolean isTombstone(Object key)
        #boolean isTombstone(long key)
        - -(collection)- -
        +boolean contains(long[] values, long value)
        +boolean contains(T[] values, T value)
        +boolean contains(int[] values, int value)
        +boolean isEmpty(long key)
        +boolean isEmpty(byte key)
        +boolean isEmpty(int key)
        +boolean isEmpty(String key)
        #int hash(long value)
        #int hash(int value)
        #PrimitiveMap hashingStrategy(HashingStrategy)
        #void increaseSize()
        #long index(long hash)
        #int index(int index)
        #int index(long[] values, long value)
        #int index(int[] values, int value)
        #int index(Object[] values, Object value)
        #PrimitiveMap newMap()
        #IntIterator nonEmptyIndexes(byte[] values)
        #IntIterator nonEmptyIndexes(long[] values)
        #IntIterator nonEmptyIndexes(int[] values)
        #IntIterator nonEmptyIndexes(T[] values)
        #LongIterator nonEmptyValues(long[] values)
        #IntIterator nonEmptyValues(int[] values)
        #ByteIterator nonEmptyValues(byte[] values)
        #Iterator<T> nonEmptyValues(T[] values)
        - -(filesystem)- -
        #void copy(PrimitiveMap that)
        #void copyEntries(PrimitiveMap that, ProgressReporter)
    }
    
    interface PrimitiveScalarMap
    {
        - -
        +long getScalar(long key)
        - -(checks)- -
        +boolean isScalarValueNull(long value)
        - -(collection)- -
        +boolean isScalarKeyNull(long key)
        +void putScalar(long key, LongValued)
        +void putScalar(long key, long value)
    }
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
    PrimitiveMap <|- - SplitPrimitiveMap
    abstract class SplitPrimitiveMap
    {
        - -(constructors)- -
        #SplitPrimitiveMap()
        #SplitPrimitiveMap(String)
    }
    
    PrimitiveMap <|- - StringToIntMap
    class StringToIntMap
    {
        - -(constructors)- -
        +StringToIntMap(String)
        - -
        +int get(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +boolean put(String key, int value)
        +boolean remove(String key)
        +IntIterator values()
    }
    
    PrimitiveMap <|- - StringToObjectMap
    class StringToObjectMap<T>
    {
        - -(constructors)- -
        +StringToObjectMap(String)
        - -
        +T get(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +Iterator<String> keys()
        +void put(String key, T value)
        +boolean remove(String key)
        +Iterator<T> values()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>