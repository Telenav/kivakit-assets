@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.filesystems.s3fs"
    
    abstract BaseWritableResource
    
    interface FileSystemService
    interface FileSystemObjectService
    interface FileService
    interface FolderService
    
    S3FileSystemObject <|-- S3File
    FileService <|-- S3File
    class S3File
    {
        --(constructors)--
        +S3File(FilePath)
        +S3File(String)
        --(filesystem)--
        +boolean renameTo(S3File that)
        --(write)--
        +void write(String line)
    }
    
    BaseWritableResource <|-- S3FileSystemObject
    FileSystemObjectService <|-- S3FileSystemObject
    abstract class S3FileSystemObject
    {
        --(collection)--
        #ListObjectsRequest listRequest(String bucketName, String keyName)
        --(filesystem)--
        #FilePath path(Listener, String scheme, String bucketName, String keyName)
        --(filtering)--
        +boolean accepts(String path)
        --(naming)--
        +String name()
    }
    
    Project <|-- S3FileSystemProject
    class S3FileSystemProject
    {
        --(constructors)--
        #S3FileSystemProject()
        --(filesystem)--
        +S3FileSystemProject get()
    }
    
    FileSystemService <|-- S3FileSystemService
    S3FileSystemService --> S3File : "provides"
    S3FileSystemService --> S3Folder : "provides"
    class S3FileSystemService
    {
        --(filesystem)--
        +^S3File fileService(FilePath)
        +^S3Folder folderService(FilePath)
    }
    
    S3FileSystemObject <|-- S3Folder
    FolderService <|-- S3Folder
    class S3Folder
    {
        --(constructors)--
        +S3Folder(FilePath)
        +S3Folder(String)
        --(filesystem)--
        +boolean hasFiles()
        +boolean hasSubFolders()
        +boolean renameTo(S3Folder that)
    }
    
    OutputStream <|-- S3Output
    class S3Output
    {
        --(constructors)--
        #S3Output(S3FileSystemObject)
    }
    
@enduml

