<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1383.3333px" preserveAspectRatio="none" style="width:1138px;height:1383px;background:#333333;" version="1.1" viewBox="0 0 1138 1383" width="1138.5417px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="325" x="399.4792" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="302.0833" x="410.9375" y="30.5583">Language - Collections - Lists</text><!--MD5=[316f1d94fe56cbf3a3cb43f921dee55e]
class BaseList--><rect codeLine="16" fill="#282828" height="894.0063" id="BaseList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="385.4167" x="698.9583" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="385.4167" x="698.9583" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="385.4167" x="698.9583" y="79.8828"/><rect codeLine="16" fill="none" height="894.0063" id="BaseList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="385.4167" x="698.9583" y="56.8278"/><ellipse cx="826.0417" cy="72.522" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M825.6348,69.224 L824.7864,72.9533 L826.4893,72.9533 Z M824.5361,67.5761 L826.7395,67.5761 L829.1992,76.6886 L827.3987,76.6886 L826.8372,74.4364 L824.4263,74.4364 L823.877,76.6886 L822.0764,76.6886 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="54.1667" x="848.9583" y="77.2461">BaseList</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="60.4167" x="1027.0833" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="1031.25" y="69.9544">Element</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="700" x2="1083.3333" y1="88.2161" y2="88.2161"/><polygon fill="#FFFF44" points="710.4167,118.3777,714.5833,122.5444,710.4167,126.711,706.25,122.5444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="721.875" y="130.4972">BaseList()</text><polygon fill="#FFFF44" points="710.4167,138.1226,714.5833,142.2892,710.4167,146.4559,706.25,142.2892" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="721.875" y="150.2421">BaseList(List&lt;Element&gt;)</text><polygon fill="#FFFF44" points="710.4167,157.8674,714.5833,162.0341,710.4167,166.2008,706.25,162.0341" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="721.875" y="169.987">BaseList(Maximum)</text><polygon fill="#FFFF44" points="710.4167,177.6123,714.5833,181.779,710.4167,185.9456,706.25,181.779" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="721.875" y="189.7319">BaseList(Maximum, List&lt;Element&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="700" x2="847.9167" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="851.0417" y="110.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="935.4167" x2="1083.3333" y1="106.4219" y2="106.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="700" x2="1083.3333" y1="199.4405" y2="199.4405"/><ellipse cx="710.4167" cy="210.8988" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="721.875" y="217.8101">String bracketed(int indent)</text><ellipse cx="710.4167" cy="230.6437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="721.875" y="237.5549">String bracketed()</text><ellipse cx="710.4167" cy="250.3886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="721.875" y="257.2998">String bulleted()</text><ellipse cx="710.4167" cy="270.1335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="721.875" y="277.0447">String bulleted(int indent)</text><ellipse cx="710.4167" cy="289.8783" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="721.875" y="296.7896">long[] quantized()</text><ellipse cx="710.4167" cy="309.6232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="721.875" y="316.5344">void reverse()</text><polygon fill="#FFFF44" points="710.4167,324.1597,714.5833,328.3264,710.4167,332.4931,706.25,328.3264" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="721.875" y="336.2793">void onOutOfRoom()</text><polygon fill="#FFFF44" points="710.4167,343.9046,714.5833,348.0713,710.4167,352.238,706.25,348.0713" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="721.875" y="356.0242">String separator()</text><ellipse cx="710.4167" cy="392.7694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="721.875" y="399.6806">boolean endsWith(BaseList&lt;Element&gt; that)</text><ellipse cx="710.4167" cy="412.5142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="244.7917" x="721.875" y="419.4255">boolean startsWith(BaseList&lt;Element&gt; that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="700" x2="865.1042" y1="375.6053" y2="375.6053"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="868.2292" y="379.4149">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="918.2292" x2="1083.3333" y1="375.6053" y2="375.6053"/><ellipse cx="710.4167" cy="456.1707" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="721.875" y="463.0819">boolean addAll(Element[] elements)</text><ellipse cx="710.4167" cy="475.9155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="721.875" y="482.8267">boolean addIfNotNull(Element)</text><ellipse cx="710.4167" cy="495.6604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="280.2083" x="721.875" y="502.5716">BaseList&lt;Element&gt; appendAll(Element[] elements)</text><ellipse cx="710.4167" cy="515.4053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="721.875" y="522.3165">Element[] asArray(Class&lt;Element&gt; type)</text><ellipse cx="710.4167" cy="535.1501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="721.875" y="542.0614">StringList asStringList()</text><ellipse cx="710.4167" cy="554.895" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="721.875" y="561.8062">BaseList&lt;Element&gt; copy()</text><ellipse cx="710.4167" cy="574.6399" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="721.875" y="581.5511">BaseList&lt;Element&gt; first(int count)</text><ellipse cx="710.4167" cy="594.3848" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="721.875" y="601.296">BaseList&lt;Element&gt; first(Count)</text><ellipse cx="710.4167" cy="614.1296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="721.875" y="621.0409">BaseList&lt;Element&gt; leftOf(int index)</text><ellipse cx="710.4167" cy="633.8745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="353.125" x="721.875" y="640.7857">BaseList&lt;Target&gt; mapped(Function&lt;Element,Target&gt; mapper)</text><ellipse cx="710.4167" cy="653.6194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="278.125" x="721.875" y="660.5306">BaseList&lt;Element&gt; matching(Matcher&lt;Element&gt;)</text><ellipse cx="710.4167" cy="673.3643" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="721.875" y="680.2755">Maximum maximumSize()</text><ellipse cx="710.4167" cy="693.1091" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="295.8333" x="721.875" y="700.0203">BaseList&lt;Element&gt; maybeReversed(boolean reverse)</text><ellipse cx="710.4167" cy="712.854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="77.0833" x="721.875" y="719.7652">Element pop()</text><ellipse cx="710.4167" cy="732.5989" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="721.875" y="739.5101">void push(Element)</text><ellipse cx="710.4167" cy="752.3438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="721.875" y="759.255">Element removeLast()</text><ellipse cx="710.4167" cy="772.0886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="721.875" y="778.9998">BaseList&lt;Element&gt; reversed()</text><ellipse cx="710.4167" cy="791.8335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="721.875" y="798.7447">BaseList&lt;Element&gt; rightOf(int index)</text><ellipse cx="710.4167" cy="811.5784" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="285.4167" x="721.875" y="818.4896">BaseList&lt;Element&gt; sorted(Comparator&lt;Element&gt;)</text><ellipse cx="710.4167" cy="831.3232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="721.875" y="838.2345">BaseList&lt;Element&gt; sorted()</text><ellipse cx="710.4167" cy="851.0681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="721.875" y="857.9793">BaseList&lt;Element&gt; uniqued()</text><ellipse cx="710.4167" cy="870.813" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="267.7083" x="721.875" y="877.7242">BaseList&lt;Element&gt; without(Matcher&lt;Element&gt;)</text><polygon fill="#FFFF44" points="710.4167,885.3495,714.5833,889.5162,710.4167,893.6829,706.25,889.5162" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="721.875" y="897.4691">boolean checkSizeIncrease(int increase)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="700" x2="857.2917" y1="439.0066" y2="439.0066"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="860.4167" y="442.8162">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="926.0417" x2="1083.3333" y1="439.0066" y2="439.0066"/><ellipse cx="710.4167" cy="934.2143" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="721.875" y="941.1255">String join()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="700" x2="861.9792" y1="917.0502" y2="917.0502"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="865.1042" y="920.8598">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="921.3542" x2="1083.3333" y1="917.0502" y2="917.0502"/><!--MD5=[0824ae22154e86ae2785deef2d0cfc09]
class Arrays--><rect codeLine="8" fill="#282828" height="107.2896" id="Arrays" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="450.057"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="450.057"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="473.112"/><rect codeLine="8" fill="none" height="107.2896" id="Arrays" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="450.057"/><ellipse cx="158.3333" cy="465.7511" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M160.2437,470.1762 Q159.8165,470.3959 159.3465,470.5058 Q158.8765,470.6156 158.3577,470.6156 Q156.5145,470.6156 155.544,469.401 Q154.5736,468.1864 154.5736,465.8915 Q154.5736,463.5905 155.544,462.3759 Q156.5145,461.1613 158.3577,461.1613 Q158.8765,461.1613 159.3526,461.2712 Q159.8287,461.381 160.2437,461.6007 L160.2437,463.6027 Q159.7799,463.1755 159.3435,462.9771 Q158.9071,462.7787 158.4432,462.7787 Q157.4544,462.7787 156.9509,463.563 Q156.4473,464.3473 156.4473,465.8915 Q156.4473,467.4296 156.9509,468.2139 Q157.4544,468.9982 158.4432,468.9982 Q158.9071,468.9982 159.3435,468.7998 Q159.7799,468.6015 160.2437,468.1742 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="41.6667" x="181.25" y="470.4753">Arrays</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="364.5833" y1="481.4453" y2="481.4453"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="364.5833" y1="489.7786" y2="489.7786"/><ellipse cx="18.75" cy="501.237" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="30.2083" y="508.1482">long[] reverse(long[] elements)</text><ellipse cx="18.75" cy="520.9819" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="30.2083" y="527.8931">int[] reverse(int[] elements)</text><ellipse cx="18.75" cy="540.7267" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="30.2083" y="547.6379">void reverseRange(long[] array, int fromIndex, int toIndex)</text><!--MD5=[29b67503f7198aadd7196478f844f86f]
class LinkedObjectList--><rect codeLine="63" fill="#282828" height="131.2012" id="LinkedObjectList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="259.375" x="402.6042" y="438.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="259.375" x="402.6042" y="438.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="259.375" x="402.6042" y="461.1328"/><rect codeLine="63" fill="none" height="131.2012" id="LinkedObjectList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="259.375" x="402.6042" y="438.0778"/><ellipse cx="460.9375" cy="453.772" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M462.8479,458.197 Q462.4207,458.4167 461.9507,458.5266 Q461.4807,458.6365 460.9619,458.6365 Q459.1187,458.6365 458.1482,457.4219 Q457.1777,456.2073 457.1777,453.9124 Q457.1777,451.6113 458.1482,450.3967 Q459.1187,449.1821 460.9619,449.1821 Q461.4807,449.1821 461.9568,449.292 Q462.4329,449.4019 462.8479,449.6216 L462.8479,451.6235 Q462.384,451.1963 461.9476,450.9979 Q461.5112,450.7996 461.0474,450.7996 Q460.0586,450.7996 459.5551,451.5839 Q459.0515,452.3682 459.0515,453.9124 Q459.0515,455.4504 459.5551,456.2347 Q460.0586,457.019 461.0474,457.019 Q461.5112,457.019 461.9476,456.8207 Q462.384,456.6223 462.8479,456.1951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="109.375" x="483.8542" y="458.4961">LinkedObjectList</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="648.4375" y="434.9528"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="652.6042" y="451.2044">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="403.6458" x2="660.9375" y1="469.4661" y2="469.4661"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="660.9375" y1="477.7995" y2="477.7995"/><ellipse cx="414.0625" cy="489.2578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="425.5208" y="496.169">boolean replace(T object, T replacement)</text><ellipse cx="414.0625" cy="532.9142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="425.5208" y="539.8254">Iterator&lt;T&gt; matching(Matcher&lt;T&gt;)</text><ellipse cx="414.0625" cy="552.6591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="425.5208" y="559.5703">Collection&lt;T&gt; remove(Matcher&lt;T&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="497.9167" y1="515.7501" y2="515.7501"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="501.0417" y="519.5597">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="566.6667" x2="660.9375" y1="515.7501" y2="515.7501"/><!--MD5=[5d1cc5807216f0e8084cf9b948201fc6]
class Lists--><rect codeLine="72" fill="#282828" height="83.3781" id="Lists" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="230.2083" x="71.3542" y="1153.182"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="230.2083" x="71.3542" y="1153.182"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="230.2083" x="71.3542" y="1176.237"/><rect codeLine="72" fill="none" height="83.3781" id="Lists" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="230.2083" x="71.3542" y="1153.182"/><ellipse cx="163.5417" cy="1168.8761" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M165.4521,1173.3012 Q165.0248,1173.5209 164.5549,1173.6308 Q164.0849,1173.7406 163.5661,1173.7406 Q161.7228,1173.7406 160.7524,1172.526 Q159.7819,1171.3114 159.7819,1169.0165 Q159.7819,1166.7155 160.7524,1165.5009 Q161.7228,1164.2863 163.5661,1164.2863 Q164.0849,1164.2863 164.561,1164.3962 Q165.037,1164.506 165.4521,1164.7257 L165.4521,1166.7277 Q164.9882,1166.3005 164.5518,1166.1021 Q164.1154,1165.9037 163.6515,1165.9037 Q162.6628,1165.9037 162.1592,1166.688 Q161.6557,1167.4723 161.6557,1169.0165 Q161.6557,1170.5546 162.1592,1171.3389 Q162.6628,1172.1232 163.6515,1172.1232 Q164.1154,1172.1232 164.5518,1171.9248 Q164.9882,1171.7265 165.4521,1171.2992 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="31.25" x="186.4583" y="1173.6003">Lists</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="72.3958" x2="300.5208" y1="1184.5703" y2="1184.5703"/><ellipse cx="82.8125" cy="1219.9402" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="94.2708" y="1226.8514">ArrayList&lt;T&gt; arrayList(T... objects)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="72.3958" x2="152.0833" y1="1202.7761" y2="1202.7761"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="155.2083" y="1206.5857">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="220.8333" x2="300.5208" y1="1202.7761" y2="1202.7761"/><!--MD5=[efa4f010a0e7c7395f45ac8dfaa8f5b8]
class ObjectList--><rect codeLine="79" fill="#282828" height="363.973" id="ObjectList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="470.8333" x="656.25" y="1013.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="470.8333" x="656.25" y="1013.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="470.8333" x="656.25" y="1036.1328"/><rect codeLine="79" fill="none" height="363.973" id="ObjectList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="470.8333" x="656.25" y="1013.0778"/><ellipse cx="820.3125" cy="1028.772" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M822.2229,1033.197 Q821.7957,1033.4167 821.3257,1033.5266 Q820.8557,1033.6365 820.3369,1033.6365 Q818.4937,1033.6365 817.5232,1032.4219 Q816.5527,1031.2073 816.5527,1028.9124 Q816.5527,1026.6113 817.5232,1025.3967 Q818.4937,1024.1821 820.3369,1024.1821 Q820.8557,1024.1821 821.3318,1024.292 Q821.8079,1024.4019 822.2229,1024.6216 L822.2229,1026.6235 Q821.759,1026.1963 821.3226,1025.9979 Q820.8862,1025.7996 820.4224,1025.7996 Q819.4336,1025.7996 818.9301,1026.5839 Q818.4265,1027.3682 818.4265,1028.9124 Q818.4265,1030.4504 818.9301,1031.2347 Q819.4336,1032.019 820.4224,1032.019 Q820.8862,1032.019 821.3226,1031.8207 Q821.759,1031.6223 822.2229,1031.1951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="843.2292" y="1033.4961">ObjectList</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="60.4167" x="1069.7917" y="1009.9528"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="1073.9583" y="1026.2044">Element</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="657.2917" x2="1126.0417" y1="1044.4661" y2="1044.4661"/><ellipse cx="667.7083" cy="1079.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="679.1667" y="1086.7472">ObjectList()</text><ellipse cx="667.7083" cy="1099.5809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="679.1667" y="1106.4921">ObjectList(List&lt;Element&gt;)</text><ellipse cx="667.7083" cy="1119.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="679.1667" y="1126.237">ObjectList(Maximum)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="657.2917" x2="847.9167" y1="1062.6719" y2="1062.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="851.0417" y="1066.4815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="935.4167" x2="1126.0417" y1="1062.6719" y2="1062.6719"/><ellipse cx="667.7083" cy="1162.9822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="282.2917" x="679.1667" y="1169.8934">StringList asStringList(StringConverter&lt;Element&gt;)</text><ellipse cx="667.7083" cy="1182.7271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="679.1667" y="1189.6383">ObjectList&lt;T&gt; emptyList()</text><ellipse cx="667.7083" cy="1202.4719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="679.1667" y="1209.3831">ObjectList&lt;T&gt; objectList(Iterable&lt;T&gt; values)</text><ellipse cx="667.7083" cy="1222.2168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="348.9583" x="679.1667" y="1229.128">ObjectList&lt;T&gt; objectList(Maximum maximumSize, T... objects)</text><ellipse cx="667.7083" cy="1241.9617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="438.5417" x="679.1667" y="1248.8729">ObjectList&lt;T&gt; objectList(Iterable&lt;Quantizable&gt; values, LongMapFactory&lt;T&gt;)</text><ellipse cx="667.7083" cy="1261.7065" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="679.1667" y="1268.6178">ObjectList&lt;T&gt; objectList(T... objects)</text><ellipse cx="667.7083" cy="1281.4514" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="267.7083" x="679.1667" y="1288.3626">ObjectList&lt;T&gt; objectListFromArray(T[] objects)</text><ellipse cx="667.7083" cy="1301.1963" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="371.875" x="679.1667" y="1308.1075">ObjectList&lt;T&gt; objectListFromInts(IntMapFactory&lt;T&gt;, int... values)</text><ellipse cx="667.7083" cy="1320.9412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="409.375" x="679.1667" y="1327.8524">ObjectList&lt;T&gt; objectListFromLongs(LongMapFactory&lt;T&gt;, long... values)</text><ellipse cx="667.7083" cy="1340.686" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="344.7917" x="679.1667" y="1347.5972">ObjectList&lt;ObjectList&lt;Element&gt;&gt; partition(Count partitions)</text><ellipse cx="667.7083" cy="1360.4309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="679.1667" y="1367.3421">ObjectList&lt;T&gt; with(T value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="657.2917" x2="857.2917" y1="1145.8181" y2="1145.8181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="860.4167" y="1149.6277">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="926.0417" x2="1126.0417" y1="1145.8181" y2="1145.8181"/><!--MD5=[b32fd4e7dc5b6ce3d7c2ac5361f10b89]
reverse link BaseList to ObjectList--><path codeLine="78" d="M891.6667,972.1715 C891.6667,986.0674 891.6667,999.6507 891.6667,1012.8174 " fill="none" id="BaseList-backto-ObjectList" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="884.375,971.7028,891.6667,950.8695,898.9583,971.7028,884.375,971.7028" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6ee23636dde4982fdb7a01192aea5edf]
link Arrays to LinkedObjectList--><!--MD5=[93a4c052d3812bd013a76078f6e27834]
link Arrays to Lists--><!--MD5=[407707e0ab22c721f82f687c5ba1b82d]
@startuml

    !include lexakai.theme
    
    title "Language - Collections - Lists"
    
    abstract BaseList
    
    class Arrays
    {
        - -
        +long[] reverse(long[] elements)
        +int[] reverse(int[] elements)
        +void reverseRange(long[] array, int fromIndex, int toIndex)
    }
    
    abstract class BaseList<Element>
    {
        - -(constructors)- -
        #BaseList()
        #BaseList(List<Element>)
        #BaseList(Maximum)
        #BaseList(Maximum, List<Element>)
        - -
        +String bracketed(int indent)
        +String bracketed()
        +String bulleted()
        +String bulleted(int indent)
        +long[] quantized()
        +void reverse()
        #void onOutOfRoom()
        #String separator()
        - -(checks)- -
        +boolean endsWith(BaseList<Element> that)
        +boolean startsWith(BaseList<Element> that)
        - -(collection)- -
        +boolean addAll(Element[] elements)
        +boolean addIfNotNull(Element)
        +BaseList<Element> appendAll(Element[] elements)
        +Element[] asArray(Class<Element> type)
        +StringList asStringList()
        +BaseList<Element> copy()
        +BaseList<Element> first(int count)
        +BaseList<Element> first(Count)
        +BaseList<Element> leftOf(int index)
        +BaseList<Target> mapped(Function<Element,Target> mapper)
        +BaseList<Element> matching(Matcher<Element>)
        +Maximum maximumSize()
        +BaseList<Element> maybeReversed(boolean reverse)
        +Element pop()
        +void push(Element)
        +Element removeLast()
        +BaseList<Element> reversed()
        +BaseList<Element> rightOf(int index)
        +BaseList<Element> sorted(Comparator<Element>)
        +BaseList<Element> sorted()
        +BaseList<Element> uniqued()
        +BaseList<Element> without(Matcher<Element>)
        #boolean checkSizeIncrease(int increase)
        - -(lifecycle)- -
        +String join()
    }
    
    class LinkedObjectList<T>
    {
        - -
        +boolean replace(T object, T replacement)
        - -(collection)- -
        +Iterator<T> matching(Matcher<T>)
        +Collection<T> remove(Matcher<T>)
    }
    
    class Lists
    {
        - -(collection)- -
        +ArrayList<T> arrayList(T... objects)
    }
    
    BaseList <|- - ObjectList
    class ObjectList<Element>
    {
        - -(constructors)- -
        +ObjectList()
        +ObjectList(List<Element>)
        +ObjectList(Maximum)
        - -(collection)- -
        +StringList asStringList(StringConverter<Element>)
        +ObjectList<T> emptyList()
        +ObjectList<T> objectList(Iterable<T> values)
        +ObjectList<T> objectList(Maximum maximumSize, T... objects)
        +ObjectList<T> objectList(Iterable<Quantizable> values, LongMapFactory<T>)
        +ObjectList<T> objectList(T... objects)
        +ObjectList<T> objectListFromArray(T[] objects)
        +ObjectList<T> objectListFromInts(IntMapFactory<T>, int... values)
        +ObjectList<T> objectListFromLongs(LongMapFactory<T>, long... values)
        +ObjectList<ObjectList<Element>> partition(Count partitions)
        +ObjectList<T> with(T value)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Language - Collections - Lists"
    
    abstract BaseList
    
    class Arrays
    {
        - -
        +long[] reverse(long[] elements)
        +int[] reverse(int[] elements)
        +void reverseRange(long[] array, int fromIndex, int toIndex)
    }
    
    abstract class BaseList<Element>
    {
        - -(constructors)- -
        #BaseList()
        #BaseList(List<Element>)
        #BaseList(Maximum)
        #BaseList(Maximum, List<Element>)
        - -
        +String bracketed(int indent)
        +String bracketed()
        +String bulleted()
        +String bulleted(int indent)
        +long[] quantized()
        +void reverse()
        #void onOutOfRoom()
        #String separator()
        - -(checks)- -
        +boolean endsWith(BaseList<Element> that)
        +boolean startsWith(BaseList<Element> that)
        - -(collection)- -
        +boolean addAll(Element[] elements)
        +boolean addIfNotNull(Element)
        +BaseList<Element> appendAll(Element[] elements)
        +Element[] asArray(Class<Element> type)
        +StringList asStringList()
        +BaseList<Element> copy()
        +BaseList<Element> first(int count)
        +BaseList<Element> first(Count)
        +BaseList<Element> leftOf(int index)
        +BaseList<Target> mapped(Function<Element,Target> mapper)
        +BaseList<Element> matching(Matcher<Element>)
        +Maximum maximumSize()
        +BaseList<Element> maybeReversed(boolean reverse)
        +Element pop()
        +void push(Element)
        +Element removeLast()
        +BaseList<Element> reversed()
        +BaseList<Element> rightOf(int index)
        +BaseList<Element> sorted(Comparator<Element>)
        +BaseList<Element> sorted()
        +BaseList<Element> uniqued()
        +BaseList<Element> without(Matcher<Element>)
        #boolean checkSizeIncrease(int increase)
        - -(lifecycle)- -
        +String join()
    }
    
    class LinkedObjectList<T>
    {
        - -
        +boolean replace(T object, T replacement)
        - -(collection)- -
        +Iterator<T> matching(Matcher<T>)
        +Collection<T> remove(Matcher<T>)
    }
    
    class Lists
    {
        - -(collection)- -
        +ArrayList<T> arrayList(T... objects)
    }
    
    BaseList <|- - ObjectList
    class ObjectList<Element>
    {
        - -(constructors)- -
        +ObjectList()
        +ObjectList(List<Element>)
        +ObjectList(Maximum)
        - -(collection)- -
        +StringList asStringList(StringConverter<Element>)
        +ObjectList<T> emptyList()
        +ObjectList<T> objectList(Iterable<T> values)
        +ObjectList<T> objectList(Maximum maximumSize, T... objects)
        +ObjectList<T> objectList(Iterable<Quantizable> values, LongMapFactory<T>)
        +ObjectList<T> objectList(T... objects)
        +ObjectList<T> objectListFromArray(T[] objects)
        +ObjectList<T> objectListFromInts(IntMapFactory<T>, int... values)
        +ObjectList<T> objectListFromLongs(LongMapFactory<T>, long... values)
        +ObjectList<ObjectList<Element>> partition(Count partitions)
        +ObjectList<T> with(T value)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>