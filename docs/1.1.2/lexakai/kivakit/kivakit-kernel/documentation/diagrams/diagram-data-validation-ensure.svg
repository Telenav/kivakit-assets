<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="910.4167px" preserveAspectRatio="none" style="width:646px;height:910px;background:#333333;" version="1.1" viewBox="0 0 646 910" width="646.875px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="250" x="191.1458" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="227.0833" x="202.6042" y="30.5583">Data - State Validation</text><!--MD5=[a9206357ac6517eaf62f4c0e10b22ef1]
class Ensure--><rect codeLine="7" fill="#282828" height="641.4897" id="Ensure" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="503.125" x="9.375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="503.125" x="9.375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="503.125" x="9.375" y="76.7578"/><rect codeLine="7" fill="none" height="641.4897" id="Ensure" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="503.125" x="9.375" y="53.7028"/><ellipse cx="231.7708" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M233.6812,73.822 Q233.254,74.0417 232.784,74.1516 Q232.314,74.2615 231.7952,74.2615 Q229.952,74.2615 228.9815,73.0469 Q228.0111,71.8323 228.0111,69.5374 Q228.0111,67.2363 228.9815,66.0217 Q229.952,64.8071 231.7952,64.8071 Q232.314,64.8071 232.7901,64.917 Q233.2662,65.0269 233.6812,65.2466 L233.6812,67.2485 Q233.2174,66.8213 232.781,66.6229 Q232.3446,66.4246 231.8807,66.4246 Q230.8919,66.4246 230.3884,67.2089 Q229.8848,67.9932 229.8848,69.5374 Q229.8848,71.0754 230.3884,71.8597 Q230.8919,72.644 231.8807,72.644 Q232.3446,72.644 232.781,72.4457 Q233.2174,72.2473 233.6812,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="43.75" x="254.6875" y="74.1211">Ensure</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="511.4583" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="511.4583" y1="93.4245" y2="93.4245"/><ellipse cx="20.8333" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="402.0833" x="32.2917" y="111.794">T ensure(Supplier&lt;Boolean&gt; valid, String message, Object... arguments)</text><ellipse cx="20.8333" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="32.2917" y="131.5389">T ensure(boolean condition, String message, Object... arguments)</text><ellipse cx="20.8333" cy="144.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="430.2083" x="32.2917" y="151.2838">T ensure(boolean condition, Throwable, String message, Object... arguments)</text><ellipse cx="20.8333" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="32.2917" y="171.0286">boolean ensure(boolean condition)</text><ellipse cx="20.8333" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="442.7083" x="32.2917" y="190.7735">void ensureWithin(double expected, double actual, double maximumDifference)</text><ellipse cx="20.8333" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="32.2917" y="210.5184">T illegalState(String message, Object... arguments)</text><ellipse cx="20.8333" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="343.75" x="32.2917" y="230.2633">T illegalState(Throwable, String message, Object... arguments)</text><polygon fill="#FFFF44" points="20.8333,237.8886,25,242.0553,20.8333,246.2219,16.6667,242.0553" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="333.3333" x="32.2917" y="250.0081">void ensureBetween(double actual, double low, double high)</text><ellipse cx="20.8333" cy="286.7533" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="403.125" x="32.2917" y="293.6646">T ensureEqual(T given, T expected, String message, Object... arguments)</text><ellipse cx="20.8333" cy="306.4982" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="32.2917" y="313.4094">T ensureEqual(T given, T expected)</text><ellipse cx="20.8333" cy="326.2431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="223.9583" x="32.2917" y="333.1543">boolean ensureFalse(boolean condition)</text><ellipse cx="20.8333" cy="345.988" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="32.2917" y="352.8992">T ensureNotEqual(T given, T expected)</text><ellipse cx="20.8333" cy="365.7328" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="351.0417" x="32.2917" y="372.644">T ensureNotNull(T object, String message, Object... arguments)</text><ellipse cx="20.8333" cy="385.4777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="32.2917" y="392.3889">T ensureNotNull(T object)</text><ellipse cx="20.8333" cy="405.2226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="331.25" x="32.2917" y="412.1338">T ensureNull(T object, String message, Object... arguments)</text><ellipse cx="20.8333" cy="424.9674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="32.2917" y="431.8787">T ensureNull(T object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="234.375" y1="269.5892" y2="269.5892"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="237.5" y="273.3988">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="287.5" x2="511.4583" y1="269.5892" y2="269.5892"/><ellipse cx="20.8333" cy="468.6239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="308.3333" x="32.2917" y="475.5351">T illegalArgument(String message, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="191.6667" y1="451.4598" y2="451.4598"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="194.7917" y="455.2694">(command line parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="330.2083" x2="511.4583" y1="451.4598" y2="451.4598"/><ellipse cx="20.8333" cy="512.2803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="32.2917" y="519.1915">T unimplemented()</text><ellipse cx="20.8333" cy="532.0251" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="32.2917" y="538.9364">T unsupported()</text><ellipse cx="20.8333" cy="551.77" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="32.2917" y="558.6812">T unsupported(String message, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="225.5208" y1="495.1162" y2="495.1162"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="228.6458" y="498.9258">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="296.3542" x2="511.4583" y1="495.1162" y2="495.1162"/><polygon fill="#FFFF44" points="20.8333,590.2181,25,594.3848,20.8333,598.5514,16.6667,594.3848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="470.8333" x="32.2917" y="602.3376">void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="248.4375" y1="578.2623" y2="578.2623"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="18.75" x="251.5625" y="582.0719">(io)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="273.4375" x2="511.4583" y1="578.2623" y2="578.2623"/><ellipse cx="20.8333" cy="639.0828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="32.2917" y="645.9941">T fail(Throwable, String message, Object... arguments)</text><ellipse cx="20.8333" cy="658.8277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="32.2917" y="665.7389">T fail()</text><ellipse cx="20.8333" cy="678.5726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="32.2917" y="685.4838">T fail(String message, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="236.4583" y1="621.9187" y2="621.9187"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="42.7083" x="239.5833" y="625.7284">(status)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="285.4167" x2="511.4583" y1="621.9187" y2="621.9187"/><!--MD5=[87d19ad86742fc735d02ea648a0e5af8]
class EnsureFailure--><rect codeLine="42" fill="#282828" height="122.8678" id="EnsureFailure" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="257.2917" x="298.9583" y="780.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="257.2917" x="298.9583" y="780.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="257.2917" x="298.9583" y="803.8411"/><rect codeLine="42" fill="none" height="122.8678" id="EnsureFailure" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="257.2917" x="298.9583" y="780.7861"/><ellipse cx="376.5625" cy="796.4803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M378.4729,800.9054 Q378.0457,801.1251 377.5757,801.2349 Q377.1057,801.3448 376.5869,801.3448 Q374.7437,801.3448 373.7732,800.1302 Q372.8027,798.9156 372.8027,796.6207 Q372.8027,794.3197 373.7732,793.1051 Q374.7437,791.8905 376.5869,791.8905 Q377.1057,791.8905 377.5818,792.0003 Q378.0579,792.1102 378.4729,792.3299 L378.4729,794.3319 Q378.009,793.9046 377.5726,793.7063 Q377.1362,793.5079 376.6724,793.5079 Q375.6836,793.5079 375.1801,794.2922 Q374.6765,795.0765 374.6765,796.6207 Q374.6765,798.1588 375.1801,798.9431 Q375.6836,799.7274 376.6724,799.7274 Q377.1362,799.7274 377.5726,799.529 Q378.009,799.3306 378.4729,798.9034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="87.5" x="399.4792" y="801.2044">EnsureFailure</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="300" x2="555.2083" y1="812.1745" y2="812.1745"/><ellipse cx="310.4167" cy="847.5444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="321.875" y="854.4556">EnsureFailure()</text><ellipse cx="310.4167" cy="867.2892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="321.875" y="874.2004">EnsureFailure(String, Object)</text><ellipse cx="310.4167" cy="887.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="321.875" y="893.9453">EnsureFailure(Throwable, String, Object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="300" x2="383.8542" y1="830.3802" y2="830.3802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="386.9792" y="834.1899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="471.3542" x2="555.2083" y1="830.3802" y2="830.3802"/><!--MD5=[08770b5ff02271603200ffd0f930842d]
class Problem--><rect fill="#282828" height="48.055" id="Problem" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="90.625" x="548.9583" y="350.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="90.625" x="548.9583" y="350.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="90.625" x="548.9583" y="373.6328"/><rect fill="none" height="48.055" id="Problem" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="90.625" x="548.9583" y="350.5778"/><ellipse cx="563.5417" cy="366.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M565.4521,370.697 Q565.0248,370.9167 564.5549,371.0266 Q564.0849,371.1365 563.5661,371.1365 Q561.7228,371.1365 560.7524,369.9219 Q559.7819,368.7073 559.7819,366.4124 Q559.7819,364.1113 560.7524,362.8967 Q561.7228,361.6821 563.5661,361.6821 Q564.0849,361.6821 564.561,361.792 Q565.037,361.9019 565.4521,362.1216 L565.4521,364.1235 Q564.9882,363.6963 564.5518,363.4979 Q564.1154,363.2996 563.6515,363.2996 Q562.6628,363.2996 562.1592,364.0839 Q561.6557,364.8682 561.6557,366.4124 Q561.6557,367.9504 562.1592,368.7347 Q562.6628,369.519 563.6515,369.519 Q564.1154,369.519 564.5518,369.3207 Q564.9882,369.1223 565.4521,368.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="53.125" x="580.2083" y="370.9961">Problem</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="550" x2="638.5417" y1="381.9661" y2="381.9661"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="550" x2="638.5417" y1="390.2995" y2="390.2995"/><!--MD5=[bd59bff91582b6137629ca2045bf9564]
link Ensure to EnsureFailure--><path codeLine="6" d="M375.4375,695.4736 C386.0313,725.0778 395.8438,752.4736 404.0313,775.3486 " fill="none" id="Ensure-to-EnsureFailure" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="405.8646,780.4632,406.6314,770.2327,404.1109,775.559,398.7847,773.0385,405.8646,780.4632" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="46.875" x="396.3542" y="742.8711">reports</text><!--MD5=[c3899784aa28423a688f7ad1eb16e6a5]
reverse link Problem to EnsureFailure--><path codeLine="41" d="M591.3438,419.6299 C585.8646,482.932 570.7396,602.2445 530.7292,695.3695 C517.75,725.5674 497.8438,755.7653 478.9688,780.7757 " fill="none" id="Problem-backto-EnsureFailure" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="584.0938,418.8486,592.9792,398.6403,598.6354,419.9736,584.0938,418.8486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[990308b2a62b42733f4c2b692df31638]
@startuml

    !include lexakai.theme
    
    title "Data - State Validation"
    
    Ensure - -> EnsureFailure : "reports"
    class Ensure
    {
        - -
        +T ensure(Supplier<Boolean> valid, String message, Object... arguments)
        +T ensure(boolean condition, String message, Object... arguments)
        +T ensure(boolean condition, Throwable, String message, Object... arguments)
        +boolean ensure(boolean condition)
        +void ensureWithin(double expected, double actual, double maximumDifference)
        +T illegalState(String message, Object... arguments)
        +T illegalState(Throwable, String message, Object... arguments)
        #void ensureBetween(double actual, double low, double high)
        - -(checks)- -
        +T ensureEqual(T given, T expected, String message, Object... arguments)
        +T ensureEqual(T given, T expected)
        +boolean ensureFalse(boolean condition)
        +T ensureNotEqual(T given, T expected)
        +T ensureNotNull(T object, String message, Object... arguments)
        +T ensureNotNull(T object)
        +T ensureNull(T object, String message, Object... arguments)
        +T ensureNull(T object)
        - -(command line parsing)- -
        +T illegalArgument(String message, Object... arguments)
        - -(functional)- -
        +T unimplemented()
        +T unsupported()
        +T unsupported(String message, Object... arguments)
        - -(io)- -
        #void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)
        - -(status)- -
        +T fail(Throwable, String message, Object... arguments)
        +T fail()
        +T fail(String message, Object... arguments)
    }
    
    Problem <|- - EnsureFailure
    class EnsureFailure
    {
        - -(constructors)- -
        +EnsureFailure()
        +EnsureFailure(String, Object)
        +EnsureFailure(Throwable, String, Object)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Data - State Validation"
    
    Ensure - -> EnsureFailure : "reports"
    class Ensure
    {
        - -
        +T ensure(Supplier<Boolean> valid, String message, Object... arguments)
        +T ensure(boolean condition, String message, Object... arguments)
        +T ensure(boolean condition, Throwable, String message, Object... arguments)
        +boolean ensure(boolean condition)
        +void ensureWithin(double expected, double actual, double maximumDifference)
        +T illegalState(String message, Object... arguments)
        +T illegalState(Throwable, String message, Object... arguments)
        #void ensureBetween(double actual, double low, double high)
        - -(checks)- -
        +T ensureEqual(T given, T expected, String message, Object... arguments)
        +T ensureEqual(T given, T expected)
        +boolean ensureFalse(boolean condition)
        +T ensureNotEqual(T given, T expected)
        +T ensureNotNull(T object, String message, Object... arguments)
        +T ensureNotNull(T object)
        +T ensureNull(T object, String message, Object... arguments)
        +T ensureNull(T object)
        - -(command line parsing)- -
        +T illegalArgument(String message, Object... arguments)
        - -(functional)- -
        +T unimplemented()
        +T unsupported()
        +T unsupported(String message, Object... arguments)
        - -(io)- -
        #void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)
        - -(status)- -
        +T fail(Throwable, String message, Object... arguments)
        +T fail()
        +T fail(String message, Object... arguments)
    }
    
    Problem <|- - EnsureFailure
    class EnsureFailure
    {
        - -(constructors)- -
        +EnsureFailure()
        +EnsureFailure(String, Object)
        +EnsureFailure(Throwable, String, Object)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>