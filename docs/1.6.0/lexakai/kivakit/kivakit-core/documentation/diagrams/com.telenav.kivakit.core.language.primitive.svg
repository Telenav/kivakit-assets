<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1017.7083px" preserveAspectRatio="none" style="width:1180px;height:1017px;background:#333333;" version="1.1" viewBox="0 0 1180 1017" width="1180.2083px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="457.2917" x="354.4271" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="434.375" x="365.8854" y="30.5583">com.telenav.kivakit.core.language.primitive</text><!--MD5=[3628101862d51d2e3b47dd9663572b8b]
class Booleans--><rect codeLine="7" fill="#282828" height="103.123" id="Booleans" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="120.8333" y="239.6403"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="120.8333" y="239.6403"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="120.8333" y="262.6953"/><rect codeLine="7" fill="none" height="103.123" id="Booleans" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="120.8333" y="239.6403"/><ellipse cx="163.5417" cy="255.3345" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M165.4521,259.7595 Q165.0248,259.9792 164.5549,260.0891 Q164.0849,260.199 163.5661,260.199 Q161.7228,260.199 160.7524,258.9844 Q159.7819,257.7698 159.7819,255.4749 Q159.7819,253.1738 160.7524,251.9592 Q161.7228,250.7446 163.5661,250.7446 Q164.0849,250.7446 164.561,250.8545 Q165.037,250.9644 165.4521,251.1841 L165.4521,253.186 Q164.9882,252.7588 164.5518,252.5604 Q164.1154,252.3621 163.6515,252.3621 Q162.6628,252.3621 162.1592,253.1464 Q161.6557,253.9307 161.6557,255.4749 Q161.6557,257.0129 162.1592,257.7972 Q162.6628,258.5815 163.6515,258.5815 Q164.1154,258.5815 164.5518,258.3832 Q164.9882,258.1848 165.4521,257.7576 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="59.375" x="186.4583" y="260.0586">Booleans</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="121.875" x2="279.1667" y1="271.0286" y2="271.0286"/><ellipse cx="132.2917" cy="306.3985" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="143.75" y="313.3097">boolean isFalse(String)</text><ellipse cx="132.2917" cy="326.1434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="143.75" y="333.0546">boolean isTrue(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="121.875" x2="173.9583" y1="289.2344" y2="289.2344"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="177.0833" y="293.044">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="227.0833" x2="279.1667" y1="289.2344" y2="289.2344"/><!--MD5=[39705073c38350bdc823eddd1a99565e]
class Doubles--><rect codeLine="14" fill="#282828" height="214.3473" id="Doubles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="465.625" x="316.6667" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="465.625" x="316.6667" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="465.625" x="316.6667" y="206.9661"/><rect codeLine="14" fill="none" height="214.3473" id="Doubles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="465.625" x="316.6667" y="183.9111"/><ellipse cx="515.1042" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M517.0146,204.0304 Q516.5873,204.2501 516.1174,204.3599 Q515.6474,204.4698 515.1286,204.4698 Q513.2853,204.4698 512.3149,203.2552 Q511.3444,202.0406 511.3444,199.7457 Q511.3444,197.4447 512.3149,196.2301 Q513.2853,195.0155 515.1286,195.0155 Q515.6474,195.0155 516.1235,195.1253 Q516.5995,195.2352 517.0146,195.4549 L517.0146,197.4569 Q516.5507,197.0296 516.1143,196.8313 Q515.6779,196.6329 515.214,196.6329 Q514.2253,196.6329 513.7217,197.4172 Q513.2182,198.2015 513.2182,199.7457 Q513.2182,201.2838 513.7217,202.0681 Q514.2253,202.8524 515.214,202.8524 Q515.6779,202.8524 516.1143,202.654 Q516.5507,202.4556 517.0146,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="54.1667" x="538.0208" y="204.3294">Doubles</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="317.7083" x2="781.25" y1="215.2995" y2="215.2995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="317.7083" x2="781.25" y1="223.6328" y2="223.6328"/><ellipse cx="328.125" cy="235.0911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="339.5833" y="242.0024">String format(double value, int decimals)</text><ellipse cx="328.125" cy="254.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="153.125" x="339.5833" y="261.7472">String format(double value)</text><ellipse cx="328.125" cy="274.5809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="368.75" x="339.5833" y="281.4921">double inRange(double value, double minimum, double maximum)</text><ellipse cx="328.125" cy="294.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="339.5833" y="301.237">int rounded(double value)</text><ellipse cx="328.125" cy="337.9822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="433.3333" x="339.5833" y="344.8934">boolean isBetweenInclusive(double value, double minimum, double maximum)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="317.7083" x2="522.9167" y1="320.8181" y2="320.8181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="526.0417" y="324.6277">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="576.0417" x2="781.25" y1="320.8181" y2="320.8181"/><ellipse cx="328.125" cy="381.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="286.4583" x="339.5833" y="388.5498">double fastParse(String value, double denominator)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="317.7083" x2="520.8333" y1="364.4745" y2="364.4745"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="523.9583" y="368.2841">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="578.125" x2="781.25" y1="364.4745" y2="364.4745"/><!--MD5=[34e6d799543a3b562d639ea8f3c598b3]
class Ints--><rect codeLine="27" fill="#282828" height="475.1973" id="Ints" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="819.2708" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="819.2708" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="819.2708" y="76.7578"/><rect codeLine="27" fill="none" height="475.1973" id="Ints" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="819.2708" y="53.7028"/><ellipse cx="976.5625" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M978.4729,73.822 Q978.0457,74.0417 977.5757,74.1516 Q977.1057,74.2615 976.5869,74.2615 Q974.7437,74.2615 973.7732,73.0469 Q972.8027,71.8323 972.8027,69.5374 Q972.8027,67.2363 973.7732,66.0217 Q974.7437,64.8071 976.5869,64.8071 Q977.1057,64.8071 977.5818,64.917 Q978.0579,65.0269 978.4729,65.2466 L978.4729,67.2485 Q978.009,66.8213 977.5726,66.6229 Q977.1362,66.4246 976.6724,66.4246 Q975.6836,66.4246 975.1801,67.2089 Q974.6765,67.9932 974.6765,69.5374 Q974.6765,71.0754 975.1801,71.8597 Q975.6836,72.644 976.6724,72.644 Q977.1362,72.644 977.5726,72.4457 Q978.009,72.2473 978.4729,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="25" x="999.4792" y="74.1211">Ints</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="820.3125" x2="1172.3958" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="820.3125" x2="1172.3958" y1="93.4245" y2="93.4245"/><ellipse cx="830.7292" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="842.1875" y="111.794">String commaSeparated(int value)</text><ellipse cx="830.7292" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="842.1875" y="131.5389">int digits(int value)</text><ellipse cx="830.7292" cy="144.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="234.375" x="842.1875" y="151.2838">int forHighLow(int highWord, int lowWord)</text><ellipse cx="830.7292" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="842.1875" y="171.0286">int high(int value)</text><ellipse cx="830.7292" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="842.1875" y="190.7735">int inRangeInclusive(int value, int minimum, int maximum)</text><ellipse cx="830.7292" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="842.1875" y="210.5184">int low(int value)</text><ellipse cx="830.7292" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="842.1875" y="230.2633">int powerOfTen(int power)</text><ellipse cx="830.7292" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="842.1875" y="250.0081">int quantized(int value, int quantum)</text><ellipse cx="830.7292" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="842.1875" y="269.753">int rounded(double value)</text><ellipse cx="830.7292" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="842.1875" y="289.4979">int signExtend(int value, int bits)</text><ellipse cx="830.7292" cy="326.2431" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="842.1875" y="333.1543">boolean isBetweenExclusive(int value, int low, int high)</text><ellipse cx="830.7292" cy="345.988" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="842.1875" y="352.8992">boolean isBetweenInclusive(int value, int low, int high)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="820.3125" x2="969.7917" y1="309.079" y2="309.079"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="972.9167" y="312.8886">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1022.9167" x2="1172.3958" y1="309.079" y2="309.079"/><ellipse cx="830.7292" cy="389.6444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="184.375" x="842.1875" y="396.5556">String toHex(int value, int length)</text><ellipse cx="830.7292" cy="409.3892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="842.1875" y="416.3005">String toHex(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="820.3125" x2="957.8125" y1="372.4803" y2="372.4803"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="960.9375" y="376.2899">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1034.8958" x2="1172.3958" y1="372.4803" y2="372.4803"/><ellipse cx="830.7292" cy="453.0457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="842.1875" y="459.9569">int parseFast(String text, int invalidValue)</text><ellipse cx="830.7292" cy="472.7905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="842.1875" y="479.7017">int parseFast(String text)</text><ellipse cx="830.7292" cy="492.5354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="842.1875" y="499.4466">int parseFastNaturalNumber(String)</text><ellipse cx="830.7292" cy="512.2803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="842.1875" y="519.1915">int parseInt(Listener, String text)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="820.3125" x2="967.7083" y1="435.8816" y2="435.8816"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="970.8333" y="439.6912">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1025" x2="1172.3958" y1="435.8816" y2="435.8816"/><!--MD5=[36e3b74b96422a4aed5309a6e6325a10]
class Longs--><rect codeLine="53" fill="#282828" height="420.1294" id="Longs" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="386.4583" x="7.2917" y="591.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="386.4583" x="7.2917" y="591.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="386.4583" x="7.2917" y="614.2578"/><rect codeLine="53" fill="none" height="420.1294" id="Longs" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="386.4583" x="7.2917" y="591.2028"/><ellipse cx="173.4375" cy="606.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M175.3479,611.322 Q174.9207,611.5417 174.4507,611.6516 Q173.9807,611.7615 173.4619,611.7615 Q171.6187,611.7615 170.6482,610.5469 Q169.6777,609.3323 169.6777,607.0374 Q169.6777,604.7363 170.6482,603.5217 Q171.6187,602.3071 173.4619,602.3071 Q173.9807,602.3071 174.4568,602.417 Q174.9329,602.5269 175.3479,602.7466 L175.3479,604.7485 Q174.884,604.3213 174.4476,604.1229 Q174.0112,603.9246 173.5474,603.9246 Q172.5586,603.9246 172.0551,604.7089 Q171.5515,605.4932 171.5515,607.0374 Q171.5515,608.5754 172.0551,609.3597 Q172.5586,610.144 173.5474,610.144 Q174.0112,610.144 174.4476,609.9457 Q174.884,609.7473 175.3479,609.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="196.3542" y="611.6211">Longs</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="392.7083" y1="622.5911" y2="622.5911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="392.7083" y1="630.9245" y2="630.9245"/><ellipse cx="18.75" cy="642.3828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="30.2083" y="649.294">String commaSeparated(long value)</text><ellipse cx="18.75" cy="662.1277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="30.2083" y="669.0389">long forHighLow(int high, int low)</text><ellipse cx="18.75" cy="681.8726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="30.2083" y="688.7838">int high(long value)</text><ellipse cx="18.75" cy="701.6174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="30.2083" y="708.5286">long inRangeInclusive(long value, long min, long max)</text><ellipse cx="18.75" cy="721.3623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="30.2083" y="728.2735">int low(long value)</text><ellipse cx="18.75" cy="741.1072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="354.1667" x="30.2083" y="748.0184">long random(Random, long minimum, long maximumExclusive)</text><ellipse cx="18.75" cy="784.7636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="30.2083" y="791.6748">boolean isBetweenExclusive(long value, long low, long high)</text><ellipse cx="18.75" cy="804.5085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="30.2083" y="811.4197">boolean isBetweenInclusive(long value, long low, long high)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="173.9583" y1="767.5995" y2="767.5995"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="177.0833" y="771.4091">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="227.0833" x2="392.7083" y1="767.5995" y2="767.5995"/><ellipse cx="18.75" cy="848.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="205.2083" x="30.2083" y="855.0761">String toHex(long value, long length)</text><ellipse cx="18.75" cy="867.9097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="30.2083" y="874.821">String toHex(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="161.9792" y1="831.0008" y2="831.0008"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="165.1042" y="834.8104">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="239.0625" x2="392.7083" y1="831.0008" y2="831.0008"/><ellipse cx="18.75" cy="911.5662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="30.2083" y="918.4774">long parseFast(String)</text><ellipse cx="18.75" cy="931.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="30.2083" y="938.2222">long parseFast(String, long invalid)</text><ellipse cx="18.75" cy="951.0559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="30.2083" y="957.9671">long parseFastNaturalNumber(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="171.875" y1="894.4021" y2="894.4021"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="175" y="898.2117">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="229.1667" x2="392.7083" y1="894.4021" y2="894.4021"/><ellipse cx="18.75" cy="994.7123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="311.4583" x="30.2083" y="1001.6235">boolean searchWords(long value, int bits, int searchFor)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="174.4792" y1="977.5482" y2="977.5482"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="177.6042" y="981.3578">(search)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="226.5625" x2="392.7083" y1="977.5482" y2="977.5482"/><!--MD5=[f26d569fc4c9c569a7515bb1ee791b09]
class Primes--><rect codeLine="76" fill="#282828" height="174.8576" id="Primes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="430.7292" y="713.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="430.7292" y="713.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="430.7292" y="736.6536"/><rect codeLine="76" fill="none" height="174.8576" id="Primes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="430.7292" y="713.5986"/><ellipse cx="516.1458" cy="729.2928" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M518.0562,733.7179 Q517.629,733.9376 517.159,734.0474 Q516.689,734.1573 516.1702,734.1573 Q514.327,734.1573 513.3565,732.9427 Q512.3861,731.7281 512.3861,729.4332 Q512.3861,727.1322 513.3565,725.9176 Q514.327,724.703 516.1702,724.703 Q516.689,724.703 517.1651,724.8128 Q517.6412,724.9227 518.0562,725.1424 L518.0562,727.1444 Q517.5924,726.7171 517.156,726.5188 Q516.7196,726.3204 516.2557,726.3204 Q515.2669,726.3204 514.7634,727.1047 Q514.2598,727.889 514.2598,729.4332 Q514.2598,730.9713 514.7634,731.7556 Q515.2669,732.5399 516.2557,732.5399 Q516.7196,732.5399 517.156,732.3415 Q517.5924,732.1431 518.0562,731.7159 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="43.75" x="539.0625" y="734.0169">Primes</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="431.7708" x2="658.8542" y1="744.987" y2="744.987"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="431.7708" x2="658.8542" y1="753.3203" y2="753.3203"/><ellipse cx="442.1875" cy="764.7786" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="453.6458" y="771.6899">void main(String[] args)</text><ellipse cx="442.1875" cy="784.5235" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="453.6458" y="791.4347">int primePowerOfTwo(int value)</text><ellipse cx="442.1875" cy="828.1799" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="453.6458" y="835.0911">boolean isPrime(long)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="431.7708" x2="518.75" y1="811.0158" y2="811.0158"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="521.875" y="814.8254">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="571.875" x2="658.8542" y1="811.0158" y2="811.0158"/><ellipse cx="442.1875" cy="871.8363" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="453.6458" y="878.7476">long primeAllocationSize(long size)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="431.7708" x2="510.9375" y1="854.6722" y2="854.6722"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="514.0625" y="858.4819">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="579.6875" x2="658.8542" y1="854.6722" y2="854.6722"/><!--MD5=[b95bace02b6cad134359ed97acbe2d13]
class Primitives--><rect codeLine="87" fill="#282828" height="103.123" id="Primitives" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="696.3542" y="749.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="696.3542" y="749.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="696.3542" y="772.5911"/><rect codeLine="87" fill="none" height="103.123" id="Primitives" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="696.3542" y="749.5361"/><ellipse cx="771.3542" cy="765.2303" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M773.2646,769.6554 Q772.8373,769.8751 772.3674,769.9849 Q771.8974,770.0948 771.3786,770.0948 Q769.5353,770.0948 768.5649,768.8802 Q767.5944,767.6656 767.5944,765.3707 Q767.5944,763.0697 768.5649,761.8551 Q769.5353,760.6405 771.3786,760.6405 Q771.8974,760.6405 772.3735,760.7503 Q772.8495,760.8602 773.2646,761.0799 L773.2646,763.0819 Q772.8007,762.6546 772.3643,762.4563 Q771.9279,762.2579 771.464,762.2579 Q770.4753,762.2579 769.9717,763.0422 Q769.4682,763.8265 769.4682,765.3707 Q769.4682,766.9088 769.9717,767.6931 Q770.4753,768.4774 771.464,768.4774 Q771.9279,768.4774 772.3643,768.279 Q772.8007,768.0806 773.2646,767.6534 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="794.2708" y="769.9544">Primitives</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="697.3958" x2="924.4792" y1="780.9245" y2="780.9245"/><ellipse cx="707.8125" cy="816.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="719.2708" y="823.2056">boolean isPrimitive(Class&lt;?&gt; type)</text><ellipse cx="707.8125" cy="836.0392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="719.2708" y="842.9504">boolean isPrimitiveWrapper(Object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="697.3958" x2="784.375" y1="799.1302" y2="799.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="787.5" y="802.9399">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="837.5" x2="924.4792" y1="799.1302" y2="799.1302"/><!--MD5=[99a15a5dbaa0338b237508ab98ed5e35]
link Booleans to Doubles--><!--MD5=[5c956d4256379273b913c1fac4a8c4eb]
link Doubles to Ints--><!--MD5=[43c8c5f8279e3757d4d72aadbd20c363]
link Booleans to Longs--><!--MD5=[daa99d55546aa792bbc280fdc958e200]
link Longs to Primes--><!--MD5=[b0a3a5e0cff55b4f3513af39bcbf8f42]
link Primes to Primitives--><!--MD5=[5da1f7565dbdb67a835037fd8627d922]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.language.primitive"
    
    class Booleans
    {
        - -(checks)- -
        +boolean isFalse(String)
        +boolean isTrue(String)
    }
    
    class Doubles
    {
        - -
        +String format(double value, int decimals)
        +String format(double value)
        +double inRange(double value, double minimum, double maximum)
        +int rounded(double value)
        - -(checks)- -
        +boolean isBetweenInclusive(double value, double minimum, double maximum)
        - -(parsing)- -
        +double fastParse(String value, double denominator)
    }
    
    class Ints
    {
        - -
        +String commaSeparated(int value)
        +int digits(int value)
        +int forHighLow(int highWord, int lowWord)
        +int high(int value)
        +int inRangeInclusive(int value, int minimum, int maximum)
        +int low(int value)
        +int powerOfTen(int power)
        +int quantized(int value, int quantum)
        +int rounded(double value)
        +int signExtend(int value, int bits)
        - -(checks)- -
        +boolean isBetweenExclusive(int value, int low, int high)
        +boolean isBetweenInclusive(int value, int low, int high)
        - -(conversion)- -
        +String toHex(int value, int length)
        +String toHex(int value)
        - -(parsing)- -
        +int parseFast(String text, int invalidValue)
        +int parseFast(String text)
        +int parseFastNaturalNumber(String)
        +int parseInt(Listener, String text)
    }
    
    class Longs
    {
        - -
        +String commaSeparated(long value)
        +long forHighLow(int high, int low)
        +int high(long value)
        +long inRangeInclusive(long value, long min, long max)
        +int low(long value)
        +long random(Random, long minimum, long maximumExclusive)
        - -(checks)- -
        +boolean isBetweenExclusive(long value, long low, long high)
        +boolean isBetweenInclusive(long value, long low, long high)
        - -(conversion)- -
        +String toHex(long value, long length)
        +String toHex(long value)
        - -(parsing)- -
        +long parseFast(String)
        +long parseFast(String, long invalid)
        +long parseFastNaturalNumber(String)
        - -(search)- -
        +boolean searchWords(long value, int bits, int searchFor)
    }
    
    class Primes
    {
        - -
        +void main(String[] args)
        +int primePowerOfTwo(int value)
        - -(checks)- -
        +boolean isPrime(long)
        - -(collection)- -
        +long primeAllocationSize(long size)
    }
    
    class Primitives
    {
        - -(checks)- -
        +boolean isPrimitive(Class<?> type)
        +boolean isPrimitiveWrapper(Object)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.language.primitive"
    
    class Booleans
    {
        - -(checks)- -
        +boolean isFalse(String)
        +boolean isTrue(String)
    }
    
    class Doubles
    {
        - -
        +String format(double value, int decimals)
        +String format(double value)
        +double inRange(double value, double minimum, double maximum)
        +int rounded(double value)
        - -(checks)- -
        +boolean isBetweenInclusive(double value, double minimum, double maximum)
        - -(parsing)- -
        +double fastParse(String value, double denominator)
    }
    
    class Ints
    {
        - -
        +String commaSeparated(int value)
        +int digits(int value)
        +int forHighLow(int highWord, int lowWord)
        +int high(int value)
        +int inRangeInclusive(int value, int minimum, int maximum)
        +int low(int value)
        +int powerOfTen(int power)
        +int quantized(int value, int quantum)
        +int rounded(double value)
        +int signExtend(int value, int bits)
        - -(checks)- -
        +boolean isBetweenExclusive(int value, int low, int high)
        +boolean isBetweenInclusive(int value, int low, int high)
        - -(conversion)- -
        +String toHex(int value, int length)
        +String toHex(int value)
        - -(parsing)- -
        +int parseFast(String text, int invalidValue)
        +int parseFast(String text)
        +int parseFastNaturalNumber(String)
        +int parseInt(Listener, String text)
    }
    
    class Longs
    {
        - -
        +String commaSeparated(long value)
        +long forHighLow(int high, int low)
        +int high(long value)
        +long inRangeInclusive(long value, long min, long max)
        +int low(long value)
        +long random(Random, long minimum, long maximumExclusive)
        - -(checks)- -
        +boolean isBetweenExclusive(long value, long low, long high)
        +boolean isBetweenInclusive(long value, long low, long high)
        - -(conversion)- -
        +String toHex(long value, long length)
        +String toHex(long value)
        - -(parsing)- -
        +long parseFast(String)
        +long parseFast(String, long invalid)
        +long parseFastNaturalNumber(String)
        - -(search)- -
        +boolean searchWords(long value, int bits, int searchFor)
    }
    
    class Primes
    {
        - -
        +void main(String[] args)
        +int primePowerOfTwo(int value)
        - -(checks)- -
        +boolean isPrime(long)
        - -(collection)- -
        +long primeAllocationSize(long size)
    }
    
    class Primitives
    {
        - -(checks)- -
        +boolean isPrimitive(Class<?> type)
        +boolean isPrimitiveWrapper(Object)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>