<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="658.3333px" preserveAspectRatio="none" style="width:1265px;height:658px;background:#333333;" version="1.1" viewBox="0 0 1265 658" width="1265.625px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="361.4583" x="444.7917" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="338.5417" x="456.25" y="30.5583">com.telenav.kivakit.core.language</text><!--MD5=[a43080c627b0a7e21c9ac09ed68857b4]
cluster Streams--><polygon fill="#333333" points="1106.25,131.8278,1170.8333,131.8278,1178.125,159.0495,1247.9167,159.0495,1247.9167,276.6195,1106.25,276.6195,1106.25,131.8278" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="1106.25" x2="1178.125" y1="159.0495" y2="159.0495"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="1113.5417" y="149.1211">Streams</text><!--MD5=[59ea3ac48e683468b7d53168874d0b4b]
class Streams.Processing--><rect codeLine="77" fill="#282828" height="87.5448" id="Streams.Processing" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="107.2917" x="1123.4375" y="172.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="107.2917" x="1123.4375" y="172.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="107.2917" x="1123.4375" y="195.5078"/><rect codeLine="77" fill="none" height="87.5448" id="Streams.Processing" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="107.2917" x="1123.4375" y="172.4528"/><ellipse cx="1138.0208" cy="188.147" fill="#CF6300" rx="10.4167" ry="10.4167" style="stroke:#EF8300;stroke-width:1.0416666666666667;"/><path d="M1141.0767,192.8345 L1135.4004,192.8345 L1135.4004,183.7219 L1141.0767,183.7219 L1141.0767,185.3088 L1137.2009,185.3088 L1137.2009,187.2742 L1140.7104,187.2742 L1140.7104,188.8611 L1137.2009,188.8611 L1137.2009,191.2476 L1141.0767,191.2476 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="69.7917" x="1154.6875" y="192.8711">Processing</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1124.4792" x2="1229.6875" y1="203.8411" y2="203.8411"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="1132.8125" y="222.2107">PARALLEL</text><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="69.7917" x="1132.8125" y="241.9556">SEQUENTIAL</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1124.4792" x2="1229.6875" y1="251.6642" y2="251.6642"/><!--MD5=[0824ae22154e86ae2785deef2d0cfc09]
class Arrays--><rect codeLine="7" fill="#282828" height="214.3473" id="Arrays" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="108.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="108.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="131.9661"/><rect codeLine="7" fill="none" height="214.3473" id="Arrays" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="108.9111"/><ellipse cx="158.3333" cy="124.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M160.2437,129.0304 Q159.8165,129.2501 159.3465,129.3599 Q158.8765,129.4698 158.3577,129.4698 Q156.5145,129.4698 155.544,128.2552 Q154.5736,127.0406 154.5736,124.7457 Q154.5736,122.4447 155.544,121.2301 Q156.5145,120.0155 158.3577,120.0155 Q158.8765,120.0155 159.3526,120.1253 Q159.8287,120.2352 160.2437,120.4549 L160.2437,122.4569 Q159.7799,122.0296 159.3435,121.8313 Q158.9071,121.6329 158.4432,121.6329 Q157.4544,121.6329 156.9509,122.4172 Q156.4473,123.2015 156.4473,124.7457 Q156.4473,126.2838 156.9509,127.0681 Q157.4544,127.8524 158.4432,127.8524 Q158.9071,127.8524 159.3435,127.654 Q159.7799,127.4556 160.2437,127.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="41.6667" x="181.25" y="129.3294">Arrays</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="364.5833" y1="140.2995" y2="140.2995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="364.5833" y1="148.6328" y2="148.6328"/><ellipse cx="18.75" cy="160.0911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="30.2083" y="167.0024">T[] concatenate(T[] a, T[] b)</text><ellipse cx="18.75" cy="179.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="30.2083" y="186.7472">long[] reverse(long[] elements)</text><ellipse cx="18.75" cy="199.5809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="30.2083" y="206.4921">int[] reverse(int[] elements)</text><ellipse cx="18.75" cy="219.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="30.2083" y="226.237">void reverseRange(long[] array, int fromIndex, int toIndex)</text><ellipse cx="18.75" cy="262.9822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="30.2083" y="269.8934">boolean contains(T[] array, T object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="152.0833" y1="245.8181" y2="245.8181"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="155.2083" y="249.6277">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="220.8333" x2="364.5833" y1="245.8181" y2="245.8181"/><ellipse cx="18.75" cy="306.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="30.2083" y="313.5498">String asHexadecimalString(byte[] bytes)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="147.9167" y1="289.4745" y2="289.4745"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="151.0417" y="293.2841">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="225" x2="364.5833" y1="289.4745" y2="289.4745"/><!--MD5=[4481f1f876aa056696029f7568a5ef18]
class Classes--><rect codeLine="20" fill="#282828" height="321.405" id="Classes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="421.875" x="402.6042" y="55.2653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="421.875" x="402.6042" y="55.2653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="421.875" x="402.6042" y="78.3203"/><rect codeLine="20" fill="none" height="321.405" id="Classes" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="421.875" x="402.6042" y="55.2653"/><ellipse cx="581.25" cy="70.9595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M583.1604,75.3845 Q582.7332,75.6042 582.2632,75.7141 Q581.7932,75.824 581.2744,75.824 Q579.4312,75.824 578.4607,74.6094 Q577.4902,73.3948 577.4902,71.0999 Q577.4902,68.7988 578.4607,67.5842 Q579.4312,66.3696 581.2744,66.3696 Q581.7932,66.3696 582.2693,66.4795 Q582.7454,66.5894 583.1604,66.8091 L583.1604,68.811 Q582.6965,68.3838 582.2601,68.1854 Q581.8237,67.9871 581.3599,67.9871 Q580.3711,67.9871 579.8676,68.7714 Q579.364,69.5557 579.364,71.0999 Q579.364,72.6379 579.8676,73.4222 Q580.3711,74.2065 581.3599,74.2065 Q581.8237,74.2065 582.2601,74.0082 Q582.6965,73.8098 583.1604,73.3826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="50" x="604.1667" y="75.6836">Classes</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="403.6458" x2="823.4375" y1="86.6536" y2="86.6536"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="823.4375" y1="94.987" y2="94.987"/><ellipse cx="414.0625" cy="106.4453" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="389.5833" x="425.5208" y="113.3565">Constructor&lt;T&gt; constructor(Class&lt;T&gt; type, Class&lt;?&gt;... arguments)</text><ellipse cx="414.0625" cy="126.1902" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="242.7083" x="425.5208" y="133.1014">String simpleTopLevelClass(Class&lt;?&gt; type)</text><ellipse cx="414.0625" cy="169.8466" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="286.4583" x="425.5208" y="176.7578">T newInstance(Class&lt;T&gt; type, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="586.4583" y1="152.6825" y2="152.6825"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="589.5833" y="156.4921">(factory)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="640.625" x2="823.4375" y1="152.6825" y2="152.6825"/><ellipse cx="414.0625" cy="213.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="425.5208" y="220.4142">Class&lt;T&gt; forName(ClassLoader, String name)</text><ellipse cx="414.0625" cy="233.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="425.5208" y="240.1591">Class&lt;T&gt; forName(String name)</text><ellipse cx="414.0625" cy="252.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="425.5208" y="259.904">String simpleName(Class&lt;?&gt; type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="585.4167" y1="196.3389" y2="196.3389"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="588.5417" y="200.1485">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="641.6667" x2="823.4375" y1="196.3389" y2="196.3389"/><ellipse cx="414.0625" cy="296.6492" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="425.5208" y="303.5604">URI resourceUri(Class&lt;?&gt; base, String path)</text><ellipse cx="414.0625" cy="316.394" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="425.5208" y="323.3053">URL resourceUrl(Class&lt;?&gt; base, String path)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="583.8542" y1="279.4851" y2="279.4851"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="586.9792" y="283.2947">(network)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="643.2292" x2="823.4375" y1="279.4851" y2="279.4851"/><ellipse cx="414.0625" cy="360.0505" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="310.4167" x="425.5208" y="366.9617">InputStream openResource(Class&lt;?&gt; base, String path)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.6458" x2="593.75" y1="342.8864" y2="342.8864"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="596.875" y="346.696">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="633.3333" x2="823.4375" y1="342.8864" y2="342.8864"/><!--MD5=[28c306b4076f36e68489037f88fdea23]
class Hash--><rect codeLine="38" fill="#282828" height="324.4832" id="Hash" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="860.9375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="860.9375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="860.9375" y="76.7578"/><rect codeLine="38" fill="none" height="324.4832" id="Hash" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="860.9375" y="53.7028"/><ellipse cx="950.5208" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M952.4312,73.822 Q952.004,74.0417 951.534,74.1516 Q951.064,74.2615 950.5452,74.2615 Q948.702,74.2615 947.7315,73.0469 Q946.7611,71.8323 946.7611,69.5374 Q946.7611,67.2363 947.7315,66.0217 Q948.702,64.8071 950.5452,64.8071 Q951.064,64.8071 951.5401,64.917 Q952.0162,65.0269 952.4312,65.2466 L952.4312,67.2485 Q951.9674,66.8213 951.531,66.6229 Q951.0946,66.4246 950.6307,66.4246 Q949.6419,66.4246 949.1384,67.2089 Q948.6348,67.9932 948.6348,69.5374 Q948.6348,71.0754 949.1384,71.8597 Q949.6419,72.644 950.6307,72.644 Q951.0946,72.644 951.531,72.4457 Q951.9674,72.2473 952.4312,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="32.2917" x="973.4375" y="74.1211">Hash</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="861.9792" x2="1085.9375" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="861.9792" x2="1085.9375" y1="93.4245" y2="93.4245"/><ellipse cx="872.3958" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="883.8542" y="111.794">int code(byte[] a)</text><ellipse cx="872.3958" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="883.8542" y="131.5389">int code(Object)</text><ellipse cx="872.3958" cy="144.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="883.8542" y="151.2838">int code(long[] a, int start, int end)</text><ellipse cx="872.3958" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="883.8542" y="171.0286">int code(int[] a, int start, int end)</text><ellipse cx="872.3958" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="883.8542" y="190.7735">int code(long[] a)</text><ellipse cx="872.3958" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="883.8542" y="210.5184">int code(int[] a)</text><ellipse cx="872.3958" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="883.8542" y="230.2633">int code(byte[] a, int start, int end)</text><ellipse cx="872.3958" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="883.8542" y="250.0081">int code(Iterator&lt;Object&gt; objects)</text><ellipse cx="872.3958" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="883.8542" y="269.753">int code(long value)</text><ellipse cx="872.3958" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="883.8542" y="289.4979">int code(char[], int start, int end)</text><ellipse cx="872.3958" cy="302.3315" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="883.8542" y="309.2428">int identity(Object)</text><ellipse cx="872.3958" cy="322.0764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="883.8542" y="328.9876">int knuth(long value)</text><ellipse cx="872.3958" cy="341.8213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="883.8542" y="348.7325">int knuth(int value)</text><ellipse cx="872.3958" cy="361.5662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="883.8542" y="368.4774">int many(Object... objects)</text><!--MD5=[f7d575171bfec133d50f92f8beb2d6bd]
class Objects--><rect codeLine="57" fill="#282828" height="210.1807" id="Objects" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="286.4583" x="43.2292" y="441.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="286.4583" x="43.2292" y="441.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="286.4583" x="43.2292" y="464.2578"/><rect codeLine="57" fill="none" height="210.1807" id="Objects" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="286.4583" x="43.2292" y="441.2028"/><ellipse cx="154.6875" cy="456.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M156.5979,461.322 Q156.1707,461.5417 155.7007,461.6516 Q155.2307,461.7615 154.7119,461.7615 Q152.8687,461.7615 151.8982,460.5469 Q150.9277,459.3323 150.9277,457.0374 Q150.9277,454.7363 151.8982,453.5217 Q152.8687,452.3071 154.7119,452.3071 Q155.2307,452.3071 155.7068,452.417 Q156.1829,452.5269 156.5979,452.7466 L156.5979,454.7485 Q156.134,454.3213 155.6976,454.1229 Q155.2612,453.9246 154.7974,453.9246 Q153.8086,453.9246 153.3051,454.7089 Q152.8015,455.4932 152.8015,457.0374 Q152.8015,458.5754 153.3051,459.3597 Q153.8086,460.144 154.7974,460.144 Q155.2612,460.144 155.6976,459.9457 Q156.134,459.7473 156.5979,459.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="177.6042" y="461.6211">Objects</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="44.2708" x2="328.6458" y1="472.5911" y2="472.5911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="44.2708" x2="328.6458" y1="480.9245" y2="480.9245"/><ellipse cx="54.6875" cy="492.3828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="66.1458" y="499.294">boolean equal(Object a, Object)</text><ellipse cx="54.6875" cy="512.1277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="66.1458" y="519.0389">boolean equalIgnoringCase(String a, String b)</text><ellipse cx="54.6875" cy="531.8726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="66.1458" y="538.7838">boolean equalPairs(Object... objects)</text><ellipse cx="54.6875" cy="551.6174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="66.1458" y="558.5286">Value nonNullOr(Value, Value defaultValue)</text><ellipse cx="54.6875" cy="595.2738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="66.1458" y="602.1851">boolean isAnyNull(Object... objects)</text><ellipse cx="54.6875" cy="615.0187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="66.1458" y="621.9299">boolean isNotNull(Object)</text><ellipse cx="54.6875" cy="634.7636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="66.1458" y="641.6748">boolean isNull(Object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="44.2708" x2="159.8958" y1="578.1097" y2="578.1097"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="163.0208" y="581.9194">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="213.0208" x2="328.6458" y1="578.1097" y2="578.1097"/><!--MD5=[efc8ec19c3e08cd56c5087be9ed2056f]
class Patterns--><rect codeLine="70" fill="#282828" height="87.5448" id="Patterns" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="239.5833" x="366.6667" y="502.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="239.5833" x="366.6667" y="502.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="239.5833" x="366.6667" y="525.7161"/><rect codeLine="70" fill="none" height="87.5448" id="Patterns" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="239.5833" x="366.6667" y="502.6611"/><ellipse cx="452.6042" cy="518.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M454.5146,522.7804 Q454.0873,523.0001 453.6174,523.1099 Q453.1474,523.2198 452.6286,523.2198 Q450.7853,523.2198 449.8149,522.0052 Q448.8444,520.7906 448.8444,518.4957 Q448.8444,516.1947 449.8149,514.9801 Q450.7853,513.7655 452.6286,513.7655 Q453.1474,513.7655 453.6235,513.8753 Q454.0995,513.9852 454.5146,514.2049 L454.5146,516.2069 Q454.0507,515.7796 453.6143,515.5813 Q453.1779,515.3829 452.714,515.3829 Q451.7253,515.3829 451.2217,516.1672 Q450.7182,516.9515 450.7182,518.4957 Q450.7182,520.0338 451.2217,520.8181 Q451.7253,521.6024 452.714,521.6024 Q453.1779,521.6024 453.6143,521.404 Q454.0507,521.2056 454.5146,520.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="53.125" x="475.5208" y="523.0794">Patterns</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="367.7083" x2="605.2083" y1="534.0495" y2="534.0495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="367.7083" x2="605.2083" y1="542.3828" y2="542.3828"/><ellipse cx="378.125" cy="553.8411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="389.5833" y="560.7524">boolean matches(Pattern, String text)</text><ellipse cx="378.125" cy="573.586" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="389.5833" y="580.4972">Pattern simplified(String pattern)</text><!--MD5=[bc89e1de06a4583c1b4dc202c3948600]
class Streams--><rect codeLine="83" fill="#282828" height="107.2896" id="Streams" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="282.2917" x="643.2292" y="492.7653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="282.2917" x="643.2292" y="492.7653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="282.2917" x="643.2292" y="515.8203"/><rect codeLine="83" fill="none" height="107.2896" id="Streams" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="282.2917" x="643.2292" y="492.7653"/><ellipse cx="751.0417" cy="508.4595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M752.9521,512.8845 Q752.5248,513.1042 752.0549,513.2141 Q751.5849,513.324 751.0661,513.324 Q749.2228,513.324 748.2524,512.1094 Q747.2819,510.8948 747.2819,508.5999 Q747.2819,506.2988 748.2524,505.0842 Q749.2228,503.8696 751.0661,503.8696 Q751.5849,503.8696 752.061,503.9795 Q752.537,504.0894 752.9521,504.3091 L752.9521,506.311 Q752.4882,505.8838 752.0518,505.6854 Q751.6154,505.4871 751.1515,505.4871 Q750.1628,505.4871 749.6592,506.2714 Q749.1557,507.0557 749.1557,508.5999 Q749.1557,510.1379 749.6592,510.9222 Q750.1628,511.7065 751.1515,511.7065 Q751.6154,511.7065 752.0518,511.5082 Q752.4882,511.3098 752.9521,510.8826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="773.9583" y="513.1836">Streams</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="644.2708" x2="924.4792" y1="524.1536" y2="524.1536"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="644.2708" x2="924.4792" y1="532.487" y2="532.487"/><ellipse cx="654.6875" cy="543.9453" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="666.1458" y="550.8565">Stream&lt;T&gt; parallelStream(Iterable&lt;T&gt;)</text><ellipse cx="654.6875" cy="563.6902" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="666.1458" y="570.6014">Stream&lt;T&gt; stream(Processing, Iterable&lt;T&gt;)</text><ellipse cx="654.6875" cy="583.4351" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="666.1458" y="590.3463">Stream&lt;T&gt; stream(Iterable&lt;T&gt;)</text><!--MD5=[fb4e9c2d0e38bbcc4cf0fb76dcc32ebe]
link Arrays to Classes--><!--MD5=[77c9c881aeefe826e9242df8fa7d6d66]
link Classes to Hash--><!--MD5=[6ece4cb7618452c695b248d9a97d782d]
link Arrays to Objects--><!--MD5=[6f0f5e5e2e8d440d6f7742197d6350df]
link Objects to Patterns--><!--MD5=[7206084ee555da7584fca6503c0a10e4]
link Patterns to Streams--><!--MD5=[d762e367388dfdcee81c074bb105e280]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.language"
    
    class Arrays
    {
        - -
        +T[] concatenate(T[] a, T[] b)
        +long[] reverse(long[] elements)
        +int[] reverse(int[] elements)
        +void reverseRange(long[] array, int fromIndex, int toIndex)
        - -(collection)- -
        +boolean contains(T[] array, T object)
        - -(conversion)- -
        +String asHexadecimalString(byte[] bytes)
    }
    
    class Classes
    {
        - -
        +Constructor<T> constructor(Class<T> type, Class<?>... arguments)
        +String simpleTopLevelClass(Class<?> type)
        - -(factory)- -
        +T newInstance(Class<T> type, Object... arguments)
        - -(naming)- -
        +Class<T> forName(ClassLoader, String name)
        +Class<T> forName(String name)
        +String simpleName(Class<?> type)
        - -(network)- -
        +URI resourceUri(Class<?> base, String path)
        +URL resourceUrl(Class<?> base, String path)
        - -(read)- -
        +InputStream openResource(Class<?> base, String path)
    }
    
    class Hash
    {
        - -
        +int code(byte[] a)
        +int code(Object)
        +int code(long[] a, int start, int end)
        +int code(int[] a, int start, int end)
        +int code(long[] a)
        +int code(int[] a)
        +int code(byte[] a, int start, int end)
        +int code(Iterator<Object> objects)
        +int code(long value)
        +int code(char[], int start, int end)
        +int identity(Object)
        +int knuth(long value)
        +int knuth(int value)
        +int many(Object... objects)
    }
    
    class Objects
    {
        - -
        +boolean equal(Object a, Object)
        +boolean equalIgnoringCase(String a, String b)
        +boolean equalPairs(Object... objects)
        +Value nonNullOr(Value, Value defaultValue)
        - -(checks)- -
        +boolean isAnyNull(Object... objects)
        +boolean isNotNull(Object)
        +boolean isNull(Object)
    }
    
    class Patterns
    {
        - -
        +boolean matches(Pattern, String text)
        +Pattern simplified(String pattern)
    }
    
    enum Streams.Processing
    {
        PARALLEL
        SEQUENTIAL
    }
    
    class Streams
    {
        - -
        +Stream<T> parallelStream(Iterable<T>)
        +Stream<T> stream(Processing, Iterable<T>)
        +Stream<T> stream(Iterable<T>)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.language"
    
    class Arrays
    {
        - -
        +T[] concatenate(T[] a, T[] b)
        +long[] reverse(long[] elements)
        +int[] reverse(int[] elements)
        +void reverseRange(long[] array, int fromIndex, int toIndex)
        - -(collection)- -
        +boolean contains(T[] array, T object)
        - -(conversion)- -
        +String asHexadecimalString(byte[] bytes)
    }
    
    class Classes
    {
        - -
        +Constructor<T> constructor(Class<T> type, Class<?>... arguments)
        +String simpleTopLevelClass(Class<?> type)
        - -(factory)- -
        +T newInstance(Class<T> type, Object... arguments)
        - -(naming)- -
        +Class<T> forName(ClassLoader, String name)
        +Class<T> forName(String name)
        +String simpleName(Class<?> type)
        - -(network)- -
        +URI resourceUri(Class<?> base, String path)
        +URL resourceUrl(Class<?> base, String path)
        - -(read)- -
        +InputStream openResource(Class<?> base, String path)
    }
    
    class Hash
    {
        - -
        +int code(byte[] a)
        +int code(Object)
        +int code(long[] a, int start, int end)
        +int code(int[] a, int start, int end)
        +int code(long[] a)
        +int code(int[] a)
        +int code(byte[] a, int start, int end)
        +int code(Iterator<Object> objects)
        +int code(long value)
        +int code(char[], int start, int end)
        +int identity(Object)
        +int knuth(long value)
        +int knuth(int value)
        +int many(Object... objects)
    }
    
    class Objects
    {
        - -
        +boolean equal(Object a, Object)
        +boolean equalIgnoringCase(String a, String b)
        +boolean equalPairs(Object... objects)
        +Value nonNullOr(Value, Value defaultValue)
        - -(checks)- -
        +boolean isAnyNull(Object... objects)
        +boolean isNotNull(Object)
        +boolean isNull(Object)
    }
    
    class Patterns
    {
        - -
        +boolean matches(Pattern, String text)
        +Pattern simplified(String pattern)
    }
    
    enum Streams.Processing
    {
        PARALLEL
        SEQUENTIAL
    }
    
    class Streams
    {
        - -
        +Stream<T> parallelStream(Iterable<T>)
        +Stream<T> stream(Processing, Iterable<T>)
        +Stream<T> stream(Iterable<T>)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>