<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="646.875px" preserveAspectRatio="none" style="width:1207px;height:646px;background:#333333;" version="1.1" viewBox="0 0 1207 646" width="1207.2917px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="377.0833" x="407.8125" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="354.1667" x="419.2708" y="30.5583">com.telenav.kivakit.core.collections</text><!--MD5=[6b5cde746fb5922ba409e305181b0f4f]
class Collections--><rect codeLine="7" fill="#282828" height="190.4358" id="Collections" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="363.5417" x="136.4583" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="363.5417" x="136.4583" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="363.5417" x="136.4583" y="76.7578"/><rect codeLine="7" fill="none" height="190.4358" id="Collections" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="363.5417" x="136.4583" y="53.7028"/><ellipse cx="274.4792" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M276.3896,73.822 Q275.9623,74.0417 275.4924,74.1516 Q275.0224,74.2615 274.5036,74.2615 Q272.6603,74.2615 271.6899,73.0469 Q270.7194,71.8323 270.7194,69.5374 Q270.7194,67.2363 271.6899,66.0217 Q272.6603,64.8071 274.5036,64.8071 Q275.0224,64.8071 275.4985,64.917 Q275.9745,65.0269 276.3896,65.2466 L276.3896,67.2485 Q275.9257,66.8213 275.4893,66.6229 Q275.0529,66.4246 274.589,66.4246 Q273.6003,66.4246 273.0967,67.2089 Q272.5932,67.9932 272.5932,69.5374 Q272.5932,71.0754 273.0967,71.8597 Q273.6003,72.644 274.589,72.644 Q275.0529,72.644 275.4893,72.4457 Q275.9257,72.2473 276.3896,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="72.9167" x="297.3958" y="74.1211">Collections</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="137.5" x2="498.9583" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="137.5" x2="498.9583" y1="93.4245" y2="93.4245"/><ellipse cx="147.9167" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="159.375" y="111.794">Set&lt;T&gt; toSet(Collection&lt;T&gt;)</text><ellipse cx="147.9167" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="331.25" x="159.375" y="155.4504">boolean containsReference(Collection&lt;T&gt; list, T reference)</text><ellipse cx="147.9167" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="159.375" y="175.1953">T first(Collection&lt;T&gt;)</text><ellipse cx="147.9167" cy="188.029" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="159.375" y="194.9402">void repeatedAdd(Collection&lt;T&gt;, T value, int times)</text><ellipse cx="147.9167" cy="207.7738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="159.375" y="214.6851">List&lt;T&gt; sorted(Collection&lt;T&gt;)</text><ellipse cx="147.9167" cy="227.5187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="159.375" y="234.4299">List&lt;T&gt; toList(Collection&lt;T&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="137.5" x2="283.8542" y1="131.3751" y2="131.3751"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="286.9792" y="135.1847">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="352.6042" x2="498.9583" y1="131.3751" y2="131.3751"/><!--MD5=[5d1cc5807216f0e8084cf9b948201fc6]
class Lists--><rect codeLine="19" fill="#282828" height="83.3781" id="Lists" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="230.2083" x="536.4583" y="107.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="230.2083" x="536.4583" y="107.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="230.2083" x="536.4583" y="130.4036"/><rect codeLine="19" fill="none" height="83.3781" id="Lists" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="230.2083" x="536.4583" y="107.3486"/><ellipse cx="628.6458" cy="123.0428" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M630.5562,127.4679 Q630.129,127.6876 629.659,127.7974 Q629.189,127.9073 628.6702,127.9073 Q626.827,127.9073 625.8565,126.6927 Q624.8861,125.4781 624.8861,123.1832 Q624.8861,120.8822 625.8565,119.6676 Q626.827,118.453 628.6702,118.453 Q629.189,118.453 629.6651,118.5628 Q630.1412,118.6727 630.5562,118.8924 L630.5562,120.8944 Q630.0924,120.4671 629.656,120.2688 Q629.2196,120.0704 628.7557,120.0704 Q627.7669,120.0704 627.2634,120.8547 Q626.7598,121.639 626.7598,123.1832 Q626.7598,124.7213 627.2634,125.5056 Q627.7669,126.2899 628.7557,126.2899 Q629.2196,126.2899 629.656,126.0915 Q630.0924,125.8931 630.5562,125.4659 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="31.25" x="651.5625" y="127.7669">Lists</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="537.5" x2="765.625" y1="138.737" y2="138.737"/><ellipse cx="547.9167" cy="174.1069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="559.375" y="181.0181">ArrayList&lt;T&gt; arrayList(T... objects)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="537.5" x2="617.1875" y1="156.9427" y2="156.9427"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="620.3125" y="160.7524">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="685.9375" x2="765.625" y1="156.9427" y2="156.9427"/><!--MD5=[71ce0a3608bb8f95aef345b3150a8729]
class Maps--><rect codeLine="25" fill="#282828" height="122.8678" id="Maps" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="621.875" x="7.2917" y="412.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="621.875" x="7.2917" y="412.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="621.875" x="7.2917" y="435.0911"/><rect codeLine="25" fill="none" height="122.8678" id="Maps" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="621.875" x="7.2917" y="412.0361"/><ellipse cx="293.75" cy="427.7303" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M295.6604,432.1554 Q295.2332,432.3751 294.7632,432.4849 Q294.2932,432.5948 293.7744,432.5948 Q291.9312,432.5948 290.9607,431.3802 Q289.9902,430.1656 289.9902,427.8707 Q289.9902,425.5697 290.9607,424.3551 Q291.9312,423.1405 293.7744,423.1405 Q294.2932,423.1405 294.7693,423.2503 Q295.2454,423.3602 295.6604,423.5799 L295.6604,425.5819 Q295.1965,425.1546 294.7601,424.9563 Q294.3237,424.7579 293.8599,424.7579 Q292.8711,424.7579 292.3676,425.5422 Q291.864,426.3265 291.864,427.8707 Q291.864,429.4088 292.3676,430.1931 Q292.8711,430.9774 293.8599,430.9774 Q294.3237,430.9774 294.7601,430.779 Q295.1965,430.5806 295.6604,430.1534 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="316.6667" y="432.4544">Maps</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="628.125" y1="443.4245" y2="443.4245"/><ellipse cx="18.75" cy="478.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="389.5833" x="30.2083" y="485.7056">Map&lt;Key,Value&gt; copy(Factory&lt;Map&lt;Key,Value&gt;&gt;, Map&lt;Key,Value&gt;)</text><ellipse cx="18.75" cy="498.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="428.125" x="30.2083" y="505.4504">Map&lt;Key,Value&gt; deepCopy(Map&lt;Key,Value&gt;, Function&lt;Value,Value&gt; clone)</text><ellipse cx="18.75" cy="518.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="589.5833" x="30.2083" y="525.1953">Map&lt;Key,Value&gt; deepCopy(Factory&lt;Map&lt;Key,Value&gt;&gt;, Map&lt;Key,Value&gt;, Function&lt;Value,Value&gt; clone)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="282.8125" y1="461.6302" y2="461.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="285.9375" y="465.4399">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="353.6458" x2="628.125" y1="461.6302" y2="461.6302"/><!--MD5=[b25f75870ad14b52537b79f435f612ff]
class Sets--><rect codeLine="33" fill="#282828" height="332.8166" id="Sets" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="534.375" x="665.625" y="306.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="534.375" x="665.625" y="306.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="534.375" x="665.625" y="329.8828"/><rect codeLine="33" fill="none" height="332.8166" id="Sets" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="534.375" x="665.625" y="306.8278"/><ellipse cx="911.9792" cy="322.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M913.8896,326.947 Q913.4623,327.1667 912.9924,327.2766 Q912.5224,327.3865 912.0036,327.3865 Q910.1603,327.3865 909.1899,326.1719 Q908.2194,324.9573 908.2194,322.6624 Q908.2194,320.3613 909.1899,319.1467 Q910.1603,317.9321 912.0036,317.9321 Q912.5224,317.9321 912.9985,318.042 Q913.4745,318.1519 913.8896,318.3716 L913.8896,320.3735 Q913.4257,319.9463 912.9893,319.7479 Q912.5529,319.5496 912.089,319.5496 Q911.1003,319.5496 910.5967,320.3339 Q910.0932,321.1182 910.0932,322.6624 Q910.0932,324.2004 910.5967,324.9847 Q911.1003,325.769 912.089,325.769 Q912.5529,325.769 912.9893,325.5707 Q913.4257,325.3723 913.8896,324.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="27.0833" x="934.8958" y="327.2461">Sets</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="666.6667" x2="1198.9583" y1="338.2161" y2="338.2161"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="666.6667" x2="1198.9583" y1="346.5495" y2="346.5495"/><ellipse cx="677.0833" cy="358.0078" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="688.5417" y="364.919">Set&lt;T&gt; identitySet()</text><ellipse cx="677.0833" cy="377.7527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="688.5417" y="384.6639">Set&lt;T&gt; matching(Set&lt;T&gt; values, Matcher&lt;T&gt;)</text><ellipse cx="677.0833" cy="397.4976" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="688.5417" y="404.4088">Set&lt;T&gt; nonNull(Set&lt;T&gt;)</text><ellipse cx="677.0833" cy="417.2424" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="688.5417" y="424.1536">Set&lt;T&gt; of(T... list)</text><ellipse cx="677.0833" cy="436.9873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="688.5417" y="443.8985">Set&lt;T&gt; union(Set&lt;T&gt; a, Set&lt;T&gt; b)</text><ellipse cx="677.0833" cy="480.6437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="688.5417" y="487.5549">Set&lt;T&gt; empty()</text><ellipse cx="677.0833" cy="500.3886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="688.5417" y="507.2998">T first(Set&lt;T&gt;)</text><ellipse cx="677.0833" cy="520.1335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="688.5417" y="527.0447">Set&lt;T&gt; fromIterable(Iterable&lt;T&gt;)</text><ellipse cx="677.0833" cy="539.8783" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="688.5417" y="546.7896">HashSet&lt;T&gt; hashset(Collection&lt;T&gt;)</text><ellipse cx="677.0833" cy="559.6232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="688.5417" y="566.5344">HashSet&lt;T&gt; hashset(T... values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="666.6667" x2="898.4375" y1="463.4796" y2="463.4796"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="901.5625" y="467.2892">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="967.1875" x2="1198.9583" y1="463.4796" y2="463.4796"/><ellipse cx="677.0833" cy="603.2796" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="688.5417" y="610.1908">Set&lt;Value&gt; copy(Factory&lt;Set&lt;Value&gt;&gt;, Set&lt;Value&gt;)</text><ellipse cx="677.0833" cy="623.0245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="502.0833" x="688.5417" y="629.9357">Set&lt;Value&gt; deepCopy(Factory&lt;Set&lt;Value&gt;&gt;, Set&lt;Value&gt;, Function&lt;Value,Value&gt; clone)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="666.6667" x2="897.3958" y1="586.1155" y2="586.1155"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="900.5208" y="589.9251">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="968.2292" x2="1198.9583" y1="586.1155" y2="586.1155"/><!--MD5=[9a2465a8ba2ee7f8a1b8d036430def91]
link Collections to Lists--><!--MD5=[eba42dd7a146e78e2c97eb4b3c7b77b4]
link Collections to Maps--><!--MD5=[9ce21232bccadb84cd681a375c72fcaa]
link Maps to Sets--><!--MD5=[ed7987894ed64fb35fa8067786616565]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.core.collections"
    
    class Collections
    {
        - -
        +Set<T> toSet(Collection<T>)
        - -(collection)- -
        +boolean containsReference(Collection<T> list, T reference)
        +T first(Collection<T>)
        +void repeatedAdd(Collection<T>, T value, int times)
        +List<T> sorted(Collection<T>)
        +List<T> toList(Collection<T>)
    }
    
    class Lists
    {
        - -(collection)- -
        +ArrayList<T> arrayList(T... objects)
    }
    
    class Maps
    {
        - -(filesystem)- -
        +Map<Key,Value> copy(Factory<Map<Key,Value>>, Map<Key,Value>)
        +Map<Key,Value> deepCopy(Map<Key,Value>, Function<Value,Value> clone)
        +Map<Key,Value> deepCopy(Factory<Map<Key,Value>>, Map<Key,Value>, Function<Value,Value> clone)
    }
    
    class Sets
    {
        - -
        +Set<T> identitySet()
        +Set<T> matching(Set<T> values, Matcher<T>)
        +Set<T> nonNull(Set<T>)
        +Set<T> of(T... list)
        +Set<T> union(Set<T> a, Set<T> b)
        - -(collection)- -
        +Set<T> empty()
        +T first(Set<T>)
        +Set<T> fromIterable(Iterable<T>)
        +HashSet<T> hashset(Collection<T>)
        +HashSet<T> hashset(T... values)
        - -(filesystem)- -
        +Set<Value> copy(Factory<Set<Value>>, Set<Value>)
        +Set<Value> deepCopy(Factory<Set<Value>>, Set<Value>, Function<Value,Value> clone)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.collections"
    
    class Collections
    {
        - -
        +Set<T> toSet(Collection<T>)
        - -(collection)- -
        +boolean containsReference(Collection<T> list, T reference)
        +T first(Collection<T>)
        +void repeatedAdd(Collection<T>, T value, int times)
        +List<T> sorted(Collection<T>)
        +List<T> toList(Collection<T>)
    }
    
    class Lists
    {
        - -(collection)- -
        +ArrayList<T> arrayList(T... objects)
    }
    
    class Maps
    {
        - -(filesystem)- -
        +Map<Key,Value> copy(Factory<Map<Key,Value>>, Map<Key,Value>)
        +Map<Key,Value> deepCopy(Map<Key,Value>, Function<Value,Value> clone)
        +Map<Key,Value> deepCopy(Factory<Map<Key,Value>>, Map<Key,Value>, Function<Value,Value> clone)
    }
    
    class Sets
    {
        - -
        +Set<T> identitySet()
        +Set<T> matching(Set<T> values, Matcher<T>)
        +Set<T> nonNull(Set<T>)
        +Set<T> of(T... list)
        +Set<T> union(Set<T> a, Set<T> b)
        - -(collection)- -
        +Set<T> empty()
        +T first(Set<T>)
        +Set<T> fromIterable(Iterable<T>)
        +HashSet<T> hashset(Collection<T>)
        +HashSet<T> hashset(T... values)
        - -(filesystem)- -
        +Set<Value> copy(Factory<Set<Value>>, Set<Value>)
        +Set<Value> deepCopy(Factory<Set<Value>>, Set<Value>, Function<Value,Value> clone)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>