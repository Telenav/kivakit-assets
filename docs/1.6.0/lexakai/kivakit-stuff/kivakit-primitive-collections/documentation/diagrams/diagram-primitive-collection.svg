<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2266.6667px" preserveAspectRatio="none" style="width:3422px;height:2266px;background:#333333;" version="1.1" viewBox="0 0 3422 2266" width="3422.9167px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="227.0833" x="1590.7708" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="204.1667" x="1602.2292" y="30.5583">Primitive Collections</text><!--MD5=[334491fe3395b7e97ffac59bc72f8221]
class Countable--><rect codeLine="7" fill="#282828" height="48.055" id="Countable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="973.4375" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="973.4375" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="973.4375" y="140.2995"/><rect codeLine="7" fill="none" height="48.055" id="Countable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="973.4375" y="117.2445"/><ellipse cx="988.0208" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M985.4248,130.1005 L985.4248,128.5136 L990.8508,128.5136 L990.8508,130.1005 L989.0381,130.1005 L989.0381,136.0392 L990.8508,136.0392 L990.8508,137.6261 L985.4248,137.6261 L985.4248,136.0392 L987.2375,136.0392 L987.2375,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="1004.6875" y="137.6628">Countable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="974.4792" x2="1076.5625" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="974.4792" x2="1076.5625" y1="156.9661" y2="156.9661"/><!--MD5=[c6dd7699ff04048cb9365e543f81bf42]
class Initializable--><rect codeLine="8" fill="#282828" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="140.2995"/><rect codeLine="8" fill="none" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="117.2445"/><ellipse cx="21.875" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M19.279,130.1005 L19.279,128.5136 L24.705,128.5136 L24.705,130.1005 L22.8923,130.1005 L22.8923,136.0392 L24.705,136.0392 L24.705,137.6261 L19.279,137.6261 L19.279,136.0392 L21.0917,136.0392 L21.0917,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="38.5417" y="137.6628">Initializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="156.9661" y2="156.9661"/><!--MD5=[5cc06ecdd9480702b567e3f11ad511a4]
class NamedObject--><rect codeLine="307" fill="#282828" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="1573.9583" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="1573.9583" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="1573.9583" y="140.2995"/><rect codeLine="307" fill="none" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="1573.9583" y="117.2445"/><ellipse cx="1588.5417" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1585.9456,130.1005 L1585.9456,128.5136 L1591.3717,128.5136 L1591.3717,130.1005 L1589.5589,130.1005 L1589.5589,136.0392 L1591.3717,136.0392 L1591.3717,137.6261 L1585.9456,137.6261 L1585.9456,136.0392 L1587.7584,136.0392 L1587.7584,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="1605.2083" y="137.6628">NamedObject</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1575" x2="1696.875" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1575" x2="1696.875" y1="156.9661" y2="156.9661"/><!--MD5=[382f8b4547ad69a8fe17e8ef47167c1d]
class TripwireTrait--><rect codeLine="10" fill="#282828" height="48.055" id="TripwireTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="120.8333" x="157.8125" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="120.8333" x="157.8125" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="120.8333" x="157.8125" y="140.2995"/><rect codeLine="10" fill="none" height="48.055" id="TripwireTrait" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="120.8333" x="157.8125" y="117.2445"/><ellipse cx="172.3958" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M169.7998,130.1005 L169.7998,128.5136 L175.2258,128.5136 L175.2258,130.1005 L173.4131,130.1005 L173.4131,136.0392 L175.2258,136.0392 L175.2258,137.6261 L169.7998,137.6261 L169.7998,136.0392 L171.6125,136.0392 L171.6125,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="189.0625" y="137.6628">TripwireTrait</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.8542" x2="277.6042" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.8542" x2="277.6042" y1="156.9661" y2="156.9661"/><!--MD5=[093b953be813e764de2c1810942591fd]
class CompressibleCollection--><rect codeLine="96" fill="#282828" height="174.8576" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="442.7083" x="315.625" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="442.7083" x="315.625" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="442.7083" x="315.625" y="76.7578"/><rect codeLine="96" fill="none" height="174.8576" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="442.7083" x="315.625" y="53.7028"/><ellipse cx="452.0833" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M449.4873,66.5588 L449.4873,64.9719 L454.9133,64.9719 L454.9133,66.5588 L453.1006,66.5588 L453.1006,72.4976 L454.9133,72.4976 L454.9133,74.0845 L449.4873,74.0845 L449.4873,72.4976 L451.3,72.4976 L451.3,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="475" y="74.1211">CompressibleCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="316.6667" x2="757.2917" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="316.6667" x2="757.2917" y1="93.4245" y2="93.4245"/><ellipse cx="327.0833" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="338.5417" y="111.794">Method compress(Method)</text><ellipse cx="327.0833" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="338.5417" y="131.5389">Method compressionMethod()</text><ellipse cx="327.0833" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="338.5417" y="175.1953">boolean isCompressed()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="316.6667" x2="510.4167" y1="151.12" y2="151.12"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="513.5417" y="154.9296">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="563.5417" x2="757.2917" y1="151.12" y2="151.12"/><ellipse cx="327.0833" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="410.4167" x="338.5417" y="218.8517">Bytes compressReachableObjects(Listener, Object root, Method, Receiver)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="316.6667" x2="505.2083" y1="194.7764" y2="194.7764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="508.3333" y="198.586">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="568.75" x2="757.2917" y1="194.7764" y2="194.7764"/><!--MD5=[69ad8e2c3e1a3785241f5b510ee951fe]
class KryoSerializable--><rect codeLine="12" fill="#282828" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="795.3125" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="795.3125" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="795.3125" y="140.2995"/><rect codeLine="12" fill="none" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="795.3125" y="117.2445"/><ellipse cx="809.8958" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M807.2998,130.1005 L807.2998,128.5136 L812.7258,128.5136 L812.7258,130.1005 L810.9131,130.1005 L810.9131,136.0392 L812.7258,136.0392 L812.7258,137.6261 L807.2998,137.6261 L807.2998,136.0392 L809.1125,136.0392 L809.1125,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="104.1667" x="826.5625" y="137.6628">KryoSerializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="796.3542" x2="935.9375" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="796.3542" x2="935.9375" y1="156.9661" y2="156.9661"/><!--MD5=[defbfbd02922b24a7c69036d97fbed67]
class ByteIterable--><rect codeLine="39" fill="#282828" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="1114.0625" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="1114.0625" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="1114.0625" y="122.5911"/><rect codeLine="39" fill="none" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="1114.0625" y="99.5361"/><ellipse cx="1144.5833" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1141.9873,112.3922 L1141.9873,110.8053 L1147.4133,110.8053 L1147.4133,112.3922 L1145.6006,112.3922 L1145.6006,118.3309 L1147.4133,118.3309 L1147.4133,119.9178 L1141.9873,119.9178 L1141.9873,118.3309 L1143.8,118.3309 L1143.8,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="77.0833" x="1164.7917" y="119.9544">ByteIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1115.1042" x2="1263.0208" y1="130.9245" y2="130.9245"/><ellipse cx="1125.5208" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="1136.9792" y="173.2056">ByteIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1115.1042" x2="1157.2917" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1160.4167" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1220.8333" x2="1263.0208" y1="149.1302" y2="149.1302"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="309" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1748.9583" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1748.9583" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="1748.9583" y="140.2995"/><rect codeLine="309" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="1748.9583" y="117.2445"/><ellipse cx="1763.5417" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1760.9456,130.1005 L1760.9456,128.5136 L1766.3717,128.5136 L1766.3717,130.1005 L1764.5589,130.1005 L1764.5589,136.0392 L1766.3717,136.0392 L1766.3717,137.6261 L1760.9456,137.6261 L1760.9456,136.0392 L1762.7584,136.0392 L1762.7584,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="1780.2083" y="137.6628">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1750" x2="1819.7917" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1750" x2="1819.7917" y1="156.9661" y2="156.9661"/><!--MD5=[b1794f41f4624988d1ba30c3e8a4e5b9]
class ByteCollection--><rect codeLine="20" fill="#282828" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="961.4583" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="961.4583" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="961.4583" y="1124.6745"/><rect codeLine="20" fill="none" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="961.4583" y="1101.6195"/><ellipse cx="1058.8542" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1056.2581,1114.4755 L1056.2581,1112.8886 L1061.6842,1112.8886 L1061.6842,1114.4755 L1059.8714,1114.4755 L1059.8714,1120.4142 L1061.6842,1120.4142 L1061.6842,1122.0011 L1056.2581,1122.0011 L1056.2581,1120.4142 L1058.0709,1120.4142 L1058.0709,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="93.75" x="1081.7708" y="1122.0378">ByteCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="962.5" x2="1263.5417" y1="1133.0078" y2="1133.0078"/><ellipse cx="972.9167" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="984.375" y="1175.2889">boolean isNull(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="962.5" x2="1086.4583" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1089.5833" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1139.5833" x2="1263.5417" y1="1151.2136" y2="1151.2136"/><ellipse cx="972.9167" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="984.375" y="1218.9453">boolean add(byte value)</text><ellipse cx="972.9167" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="984.375" y="1238.6902">boolean addAll(byte[] that)</text><ellipse cx="972.9167" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="984.375" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="972.9167" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="984.375" y="1278.1799">boolean addAll(ByteIterable that)</text><ellipse cx="972.9167" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="984.375" y="1297.9248">void clear()</text><ellipse cx="972.9167" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="984.375" y="1317.6697">boolean contains(byte value)</text><ellipse cx="972.9167" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="984.375" y="1337.4146">boolean containsAll(ByteCollection that)</text><ellipse cx="972.9167" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="984.375" y="1357.1594">boolean remove(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="962.5" x2="1078.6458" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1081.7708" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1147.3958" x2="1263.5417" y1="1194.87" y2="1194.87"/><ellipse cx="972.9167" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="984.375" y="1400.8158">boolean hasNullByte()</text><ellipse cx="972.9167" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="984.375" y="1420.5607">PrimitiveCollection hasNullByte(boolean has)</text><ellipse cx="972.9167" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="984.375" y="1440.3056">byte nullByte()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="962.5" x2="1081.25" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1084.375" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1144.7917" x2="1263.5417" y1="1376.7405" y2="1376.7405"/><!--MD5=[cb2f9fc1b931489ec7fc16118c2bc03d]
class PrimitiveIterator--><rect codeLine="338" fill="#282828" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2888.0208" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2888.0208" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2888.0208" y="76.7578"/><rect codeLine="338" fill="none" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2888.0208" y="53.7028"/><ellipse cx="2953.125" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2950.529,66.5588 L2950.529,64.9719 L2955.955,64.9719 L2955.955,66.5588 L2954.1423,66.5588 L2954.1423,72.4976 L2955.955,72.4976 L2955.955,74.0845 L2950.529,74.0845 L2950.529,72.4976 L2952.3417,72.4976 L2952.3417,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="105.2083" x="2976.0417" y="74.1211">PrimitiveIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2889.0625" x2="3136.9792" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2889.0625" x2="3136.9792" y1="93.4245" y2="93.4245"/><ellipse cx="2899.4792" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="2910.9375" y="111.794">boolean identical(PrimitiveIterator that)</text><ellipse cx="2899.4792" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="2910.9375" y="155.4504">int hashValue()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2889.0625" x2="2978.6458" y1="131.3751" y2="131.3751"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2981.7708" y="135.1847">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3047.3958" x2="3136.9792" y1="131.3751" y2="131.3751"/><ellipse cx="2899.4792" cy="192.1956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="2910.9375" y="199.1069">boolean hasNext()</text><ellipse cx="2899.4792" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="2910.9375" y="218.8517">long nextLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2889.0625" x2="2982.2917" y1="175.0315" y2="175.0315"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2985.4167" y="178.8411">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3043.75" x2="3136.9792" y1="175.0315" y2="175.0315"/><!--MD5=[3d10e76dd90eb216316d7348e2c4f1d1]
class ByteIterator--><rect codeLine="47" fill="#282828" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2659.375" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2659.375" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2659.375" y="1235.0911"/><rect codeLine="47" fill="none" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2659.375" y="1212.0361"/><ellipse cx="2673.9583" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2671.3623,1224.8922 L2671.3623,1223.3053 L2676.7883,1223.3053 L2676.7883,1224.8922 L2674.9756,1224.8922 L2674.9756,1230.8309 L2676.7883,1230.8309 L2676.7883,1232.4178 L2671.3623,1232.4178 L2671.3623,1230.8309 L2673.175,1230.8309 L2673.175,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="2690.625" y="1232.4544">ByteIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2660.4167" x2="2771.875" y1="1243.4245" y2="1243.4245"/><ellipse cx="2670.8333" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2682.2917" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2660.4167" x2="2681.7708" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2684.8958" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2750.5208" x2="2771.875" y1="1261.6302" y2="1261.6302"/><ellipse cx="2670.8333" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2682.2917" y="1329.362">byte next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2660.4167" x2="2685.4167" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2688.5417" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2746.875" x2="2771.875" y1="1305.2867" y2="1305.2867"/><!--MD5=[97fcd86f5bb143a13e7ca16679ef42d5]
class CharIterable--><rect codeLine="80" fill="#282828" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="1375.5208" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="1375.5208" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="1375.5208" y="122.5911"/><rect codeLine="80" fill="none" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="1375.5208" y="99.5361"/><ellipse cx="1406.9792" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1404.3831,112.3922 L1404.3831,110.8053 L1409.8092,110.8053 L1409.8092,112.3922 L1407.9964,112.3922 L1407.9964,118.3309 L1409.8092,118.3309 L1409.8092,119.9178 L1404.3831,119.9178 L1404.3831,118.3309 L1406.1959,118.3309 L1406.1959,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="1427.3958" y="119.9544">CharIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1376.5625" x2="1528.6458" y1="130.9245" y2="130.9245"/><ellipse cx="1386.9792" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1398.4375" y="173.2056">CharIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1376.5625" x2="1420.8333" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1423.9583" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1484.375" x2="1528.6458" y1="149.1302" y2="149.1302"/><!--MD5=[90165500f4d7fb9198b276c528488d69]
class CharCollection--><rect codeLine="61" fill="#282828" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1301.0417" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1301.0417" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1301.0417" y="1124.6745"/><rect codeLine="61" fill="none" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1301.0417" y="1101.6195"/><ellipse cx="1397.3958" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1394.7998,1114.4755 L1394.7998,1112.8886 L1400.2258,1112.8886 L1400.2258,1114.4755 L1398.4131,1114.4755 L1398.4131,1120.4142 L1400.2258,1120.4142 L1400.2258,1122.0011 L1394.7998,1122.0011 L1394.7998,1120.4142 L1396.6125,1120.4142 L1396.6125,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="1420.3125" y="1122.0378">CharCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1302.0833" x2="1603.125" y1="1133.0078" y2="1133.0078"/><ellipse cx="1312.5" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1323.9583" y="1175.2889">boolean isNull(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1302.0833" x2="1426.0417" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1429.1667" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1479.1667" x2="1603.125" y1="1151.2136" y2="1151.2136"/><ellipse cx="1312.5" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1323.9583" y="1218.9453">boolean add(char value)</text><ellipse cx="1312.5" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1323.9583" y="1238.6902">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1312.5" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1323.9583" y="1258.4351">boolean addAll(char[] that)</text><ellipse cx="1312.5" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="1323.9583" y="1278.1799">boolean addAll(CharCollection that)</text><ellipse cx="1312.5" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1323.9583" y="1297.9248">void clear()</text><ellipse cx="1312.5" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="1323.9583" y="1317.6697">boolean contains(char value)</text><ellipse cx="1312.5" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="1323.9583" y="1337.4146">boolean containsAll(CharCollection that)</text><ellipse cx="1312.5" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="1323.9583" y="1357.1594">boolean remove(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1302.0833" x2="1418.2292" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1421.3542" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1486.9792" x2="1603.125" y1="1194.87" y2="1194.87"/><ellipse cx="1312.5" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="1323.9583" y="1400.8158">boolean hasNullChar()</text><ellipse cx="1312.5" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="1323.9583" y="1420.5607">PrimitiveCollection hasNullChar(boolean has)</text><ellipse cx="1312.5" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="1323.9583" y="1440.3056">char nullChar()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1302.0833" x2="1420.8333" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1423.9583" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1484.375" x2="1603.125" y1="1376.7405" y2="1376.7405"/><!--MD5=[b246b0e8213485807b10907ccd9a8538]
class CharIterator--><rect codeLine="88" fill="#282828" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2809.375" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2809.375" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2809.375" y="1235.0911"/><rect codeLine="88" fill="none" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2809.375" y="1212.0361"/><ellipse cx="2823.9583" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2821.3623,1224.8922 L2821.3623,1223.3053 L2826.7883,1223.3053 L2826.7883,1224.8922 L2824.9756,1224.8922 L2824.9756,1230.8309 L2826.7883,1230.8309 L2826.7883,1232.4178 L2821.3623,1232.4178 L2821.3623,1230.8309 L2823.175,1230.8309 L2823.175,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="2840.625" y="1232.4544">CharIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2810.4167" x2="2923.9583" y1="1243.4245" y2="1243.4245"/><ellipse cx="2820.8333" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2832.2917" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2810.4167" x2="2832.8125" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2835.9375" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2901.5625" x2="2923.9583" y1="1261.6302" y2="1261.6302"/><ellipse cx="2820.8333" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="2832.2917" y="1329.362">char next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2810.4167" x2="2836.4583" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2839.5833" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2897.9167" x2="2923.9583" y1="1305.2867" y2="1305.2867"/><!--MD5=[60470e774238cb47ff78e96b9f7be05d]
class IntIterable--><rect codeLine="132" fill="#282828" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="1857.8125" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="1857.8125" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="1857.8125" y="122.5911"/><rect codeLine="132" fill="none" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="1857.8125" y="99.5361"/><ellipse cx="1889.2708" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1886.6748,112.3922 L1886.6748,110.8053 L1892.1008,110.8053 L1892.1008,112.3922 L1890.2881,112.3922 L1890.2881,118.3309 L1892.1008,118.3309 L1892.1008,119.9178 L1886.6748,119.9178 L1886.6748,118.3309 L1888.4875,118.3309 L1888.4875,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="1909.6875" y="119.9544">IntIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1858.8542" x2="1998.4375" y1="130.9245" y2="130.9245"/><ellipse cx="1869.2708" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="1880.7292" y="173.2056">IntIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1858.8542" x2="1896.875" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1900" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1960.4167" x2="1998.4375" y1="149.1302" y2="149.1302"/><!--MD5=[f434602f8daadf1a8b6ba6711a4e54de]
class IntCollection--><rect codeLine="113" fill="#282828" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1640.625" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1640.625" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1640.625" y="1124.6745"/><rect codeLine="113" fill="none" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1640.625" y="1101.6195"/><ellipse cx="1743.2292" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1740.6331,1114.4755 L1740.6331,1112.8886 L1746.0592,1112.8886 L1746.0592,1114.4755 L1744.2464,1114.4755 L1744.2464,1120.4142 L1746.0592,1120.4142 L1746.0592,1122.0011 L1740.6331,1122.0011 L1740.6331,1120.4142 L1742.4459,1120.4142 L1742.4459,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="1766.1458" y="1122.0378">IntCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1641.6667" x2="1942.7083" y1="1133.0078" y2="1133.0078"/><ellipse cx="1652.0833" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1663.5417" y="1175.2889">boolean isNull(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1641.6667" x2="1765.625" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1768.75" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1818.75" x2="1942.7083" y1="1151.2136" y2="1151.2136"/><ellipse cx="1652.0833" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="1663.5417" y="1218.9453">boolean add(int value)</text><ellipse cx="1652.0833" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1663.5417" y="1238.6902">boolean addAll(int[] that)</text><ellipse cx="1652.0833" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1663.5417" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1652.0833" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1663.5417" y="1278.1799">boolean addAll(IntCollection that)</text><ellipse cx="1652.0833" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1663.5417" y="1297.9248">void clear()</text><ellipse cx="1652.0833" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="1663.5417" y="1317.6697">boolean contains(int value)</text><ellipse cx="1652.0833" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="1663.5417" y="1337.4146">boolean containsAll(IntCollection that)</text><ellipse cx="1652.0833" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1663.5417" y="1357.1594">boolean remove(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1641.6667" x2="1757.8125" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1760.9375" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1826.5625" x2="1942.7083" y1="1194.87" y2="1194.87"/><ellipse cx="1652.0833" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1663.5417" y="1400.8158">boolean hasNullInt()</text><ellipse cx="1652.0833" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="1663.5417" y="1420.5607">PrimitiveCollection hasNullInt(boolean has)</text><ellipse cx="1652.0833" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="1663.5417" y="1440.3056">int nullInt()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1641.6667" x2="1760.4167" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1763.5417" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1823.9583" x2="1942.7083" y1="1376.7405" y2="1376.7405"/><!--MD5=[2e4772073d6003ed1f976207db7f3a78]
class IntIterator--><rect codeLine="140" fill="#282828" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2961.4583" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2961.4583" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2961.4583" y="1235.0911"/><rect codeLine="140" fill="none" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2961.4583" y="1212.0361"/><ellipse cx="2976.0417" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2973.4456,1224.8922 L2973.4456,1223.3053 L2978.8717,1223.3053 L2978.8717,1224.8922 L2977.0589,1224.8922 L2977.0589,1230.8309 L2978.8717,1230.8309 L2978.8717,1232.4178 L2973.4456,1232.4178 L2973.4456,1230.8309 L2975.2584,1230.8309 L2975.2584,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="2992.7083" y="1232.4544">IntIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2962.5" x2="3063.5417" y1="1243.4245" y2="1243.4245"/><ellipse cx="2972.9167" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2984.375" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2962.5" x2="2978.6458" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2981.7708" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3047.3958" x2="3063.5417" y1="1261.6302" y2="1261.6302"/><ellipse cx="2972.9167" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2984.375" y="1329.362">int next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2962.5" x2="2982.2917" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2985.4167" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3043.75" x2="3063.5417" y1="1305.2867" y2="1305.2867"/><!--MD5=[d1e6d361dbd83c672e797f2e9d24b3ed]
class LongIterable--><rect codeLine="173" fill="#282828" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="2054.1667" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="2054.1667" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="2054.1667" y="122.5911"/><rect codeLine="173" fill="none" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="2054.1667" y="99.5361"/><ellipse cx="2085.1563" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2082.5602,112.3922 L2082.5602,110.8053 L2087.9862,110.8053 L2087.9862,112.3922 L2086.1735,112.3922 L2086.1735,118.3309 L2087.9862,118.3309 L2087.9862,119.9178 L2082.5602,119.9178 L2082.5602,118.3309 L2084.373,118.3309 L2084.373,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="81.25" x="2105.4688" y="119.9544">LongIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2055.2083" x2="2208.3333" y1="130.9245" y2="130.9245"/><ellipse cx="2065.625" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="2077.0833" y="173.2056">LongIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2055.2083" x2="2100" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2103.125" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2163.5417" x2="2208.3333" y1="149.1302" y2="149.1302"/><!--MD5=[9b97eef0aee9769adba47eada2538075]
class LongCollection--><rect codeLine="154" fill="#282828" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1980.2083" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1980.2083" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1980.2083" y="1124.6745"/><rect codeLine="154" fill="none" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1980.2083" y="1101.6195"/><ellipse cx="2075.5208" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2072.9248,1114.4755 L2072.9248,1112.8886 L2078.3508,1112.8886 L2078.3508,1114.4755 L2076.5381,1114.4755 L2076.5381,1120.4142 L2078.3508,1120.4142 L2078.3508,1122.0011 L2072.9248,1122.0011 L2072.9248,1120.4142 L2074.7375,1120.4142 L2074.7375,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="97.9167" x="2098.4375" y="1122.0378">LongCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1981.25" x2="2282.2917" y1="1133.0078" y2="1133.0078"/><ellipse cx="1991.6667" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="2003.125" y="1175.2889">boolean isNull(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1981.25" x2="2105.2083" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="2108.3333" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2158.3333" x2="2282.2917" y1="1151.2136" y2="1151.2136"/><ellipse cx="1991.6667" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="2003.125" y="1218.9453">boolean add(long value)</text><ellipse cx="1991.6667" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="2003.125" y="1238.6902">boolean addAll(long[] that)</text><ellipse cx="1991.6667" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="2003.125" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1991.6667" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="2003.125" y="1278.1799">boolean addAll(LongCollection that)</text><ellipse cx="1991.6667" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2003.125" y="1297.9248">void clear()</text><ellipse cx="1991.6667" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="2003.125" y="1317.6697">boolean contains(long value)</text><ellipse cx="1991.6667" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="2003.125" y="1337.4146">boolean containsAll(LongCollection that)</text><ellipse cx="1991.6667" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="2003.125" y="1357.1594">boolean remove(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1981.25" x2="2097.3958" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2100.5208" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2166.1458" x2="2282.2917" y1="1194.87" y2="1194.87"/><ellipse cx="1991.6667" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="2003.125" y="1400.8158">PrimitiveCollection hasNullLong(boolean has)</text><ellipse cx="1991.6667" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="2003.125" y="1420.5607">boolean hasNullLong()</text><ellipse cx="1991.6667" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="2003.125" y="1440.3056">long nullLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1981.25" x2="2100" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2103.125" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2163.5417" x2="2282.2917" y1="1376.7405" y2="1376.7405"/><!--MD5=[7ab282b7e48474d6778a4f3de3e62e41]
class LongIterator--><rect codeLine="181" fill="#282828" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="3101.0417" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="3101.0417" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="3101.0417" y="1235.0911"/><rect codeLine="181" fill="none" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="3101.0417" y="1212.0361"/><ellipse cx="3115.625" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M3113.029,1224.8922 L3113.029,1223.3053 L3118.455,1223.3053 L3118.455,1224.8922 L3116.6423,1224.8922 L3116.6423,1230.8309 L3118.455,1230.8309 L3118.455,1232.4178 L3113.029,1232.4178 L3113.029,1230.8309 L3114.8417,1230.8309 L3114.8417,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="80.2083" x="3132.2917" y="1232.4544">LongIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="3102.0833" x2="3217.7083" y1="1243.4245" y2="1243.4245"/><ellipse cx="3112.5" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="3123.9583" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3102.0833" x2="3125.5208" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3128.6458" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3194.2708" x2="3217.7083" y1="1261.6302" y2="1261.6302"/><ellipse cx="3112.5" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="3123.9583" y="1329.362">long next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3102.0833" x2="3129.1667" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="3132.2917" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3190.625" x2="3217.7083" y1="1305.2867" y2="1305.2867"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect codeLine="195" fill="#282828" height="1968.5628" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="336.4583" y="291.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="336.4583" y="291.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="336.4583" y="314.2578"/><rect codeLine="195" fill="none" height="1968.5628" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="336.4583" y="291.2028"/><ellipse cx="530.7292" cy="306.897" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M530.3223,303.599 L529.4739,307.3283 L531.1768,307.3283 Z M529.2236,301.9511 L531.427,301.9511 L533.8867,311.0636 L532.0862,311.0636 L531.5247,308.8114 L529.1138,308.8114 L528.5645,311.0636 L526.7639,311.0636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="553.6458" y="311.6211">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="337.5" x2="861.4583" y1="322.5911" y2="322.5911"/><polygon fill="#FFFF44" points="347.9167,352.7527,352.0833,356.9194,347.9167,361.086,343.75,356.9194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="359.375" y="364.8722">PrimitiveCollection()</text><polygon fill="#FFFF44" points="347.9167,372.4976,352.0833,376.6642,347.9167,380.8309,343.75,376.6642" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="359.375" y="384.6171">PrimitiveCollection(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="555.7292" y1="340.7969" y2="340.7969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="558.8542" y="344.6065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="643.2292" x2="861.4583" y1="340.7969" y2="340.7969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="861.4583" y1="394.3258" y2="394.3258"/><ellipse cx="347.9167" cy="405.7841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="359.375" y="412.6953">int increasedCapacity(int size)</text><polygon fill="#FFFF44" points="347.9167,420.3206,352.0833,424.4873,347.9167,428.654,343.75,424.4873" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="359.375" y="432.4402">Method onCompress(Method)</text><ellipse cx="347.9167" cy="469.1854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="359.375" y="476.0966">boolean isInitialized()</text><ellipse cx="347.9167" cy="488.9303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="359.375" y="495.8415">boolean isNull(byte value)</text><ellipse cx="347.9167" cy="508.6751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="359.375" y="515.5863">boolean isNull(char value)</text><ellipse cx="347.9167" cy="528.42" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="359.375" y="535.3312">boolean isNull(long value)</text><ellipse cx="347.9167" cy="548.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="359.375" y="555.0761">boolean isNull(short value)</text><ellipse cx="347.9167" cy="567.9097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="359.375" y="574.821">boolean isNull(int value)</text><polygon fill="#FFFF44" points="347.9167,582.4463,352.0833,586.613,347.9167,590.7796,343.75,586.613" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="359.375" y="594.5658">boolean ensureHasRoomFor(int increase)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="572.9167" y1="452.0213" y2="452.0213"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="576.0417" y="455.8309">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="626.0417" x2="861.4583" y1="452.0213" y2="452.0213"/><ellipse cx="347.9167" cy="631.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="359.375" y="638.2222">Count capacity()</text><ellipse cx="347.9167" cy="651.0559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="359.375" y="657.9671">void clear()</text><ellipse cx="347.9167" cy="670.8008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="359.375" y="677.712">void copyNullValues(PrimitiveCollection that)</text><ellipse cx="347.9167" cy="690.5457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="359.375" y="697.4569">Estimate initialChildCount()</text><ellipse cx="347.9167" cy="710.2905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="359.375" y="717.2017">int initialChildCountAsInt()</text><ellipse cx="347.9167" cy="730.0354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="359.375" y="736.9466">Estimate initialChildSize()</text><ellipse cx="347.9167" cy="749.7803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="359.375" y="756.6915">PrimitiveCollection initialChildSize(BaseCount&lt;?&gt; childSize)</text><ellipse cx="347.9167" cy="769.5251" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="263.5417" x="359.375" y="776.4364">PrimitiveCollection initialChildSize(int childSize)</text><ellipse cx="347.9167" cy="789.27" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="359.375" y="796.1812">int initialChildSizeAsInt()</text><ellipse cx="347.9167" cy="809.0149" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="359.375" y="815.9261">PrimitiveCollection initialSize(Estimate initialSize)</text><ellipse cx="347.9167" cy="828.7598" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="359.375" y="835.671">Estimate initialSize()</text><ellipse cx="347.9167" cy="848.5046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="359.375" y="855.4159">PrimitiveCollection initialSize(int initialSize)</text><ellipse cx="347.9167" cy="868.2495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="359.375" y="875.1607">int initialSizeAsInt()</text><ellipse cx="347.9167" cy="887.9944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="385.4167" x="359.375" y="894.9056">PrimitiveCollection maximumChildSize(Maximum maximumChildSize)</text><ellipse cx="347.9167" cy="907.7393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="359.375" y="914.6505">Maximum maximumChildSize()</text><ellipse cx="347.9167" cy="927.4841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="345.8333" x="359.375" y="934.3953">PrimitiveCollection maximumChildSize(int maximumChildSize)</text><ellipse cx="347.9167" cy="947.229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="359.375" y="954.1402">int maximumChildSizeAsInt()</text><ellipse cx="347.9167" cy="966.9739" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="327.0833" x="359.375" y="973.8851">PrimitiveCollection maximumSize(Maximum maximumSize)</text><ellipse cx="347.9167" cy="986.7188" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="359.375" y="993.63">PrimitiveCollection maximumSize(int maximumSize)</text><ellipse cx="347.9167" cy="1006.4636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="359.375" y="1013.3748">Maximum maximumSize()</text><ellipse cx="347.9167" cy="1026.2085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="359.375" y="1033.1197">int maximumSizeAsInt()</text><ellipse cx="347.9167" cy="1045.9534" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="359.375" y="1052.8646">int nullIndex()</text><polygon fill="#FFFF44" points="347.9167,1060.4899,352.0833,1064.6566,347.9167,1068.8232,343.75,1064.6566" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="359.375" y="1072.6095">void clear(char[] values)</text><polygon fill="#FFFF44" points="347.9167,1080.2348,352.0833,1084.4014,347.9167,1088.5681,343.75,1084.4014" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="359.375" y="1092.3543">void clear(int[] values)</text><polygon fill="#FFFF44" points="347.9167,1099.9797,352.0833,1104.1463,347.9167,1108.313,343.75,1104.1463" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="359.375" y="1112.0992">void clear(long[] values)</text><polygon fill="#FFFF44" points="347.9167,1119.7245,352.0833,1123.8912,347.9167,1128.0579,343.75,1123.8912" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="359.375" y="1131.8441">void clear(byte[] values)</text><polygon fill="#FFFF44" points="347.9167,1139.4694,352.0833,1143.6361,347.9167,1147.8027,343.75,1143.6361" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="359.375" y="1151.5889">void clear(short[] values)</text><polygon fill="#FFFF44" points="347.9167,1159.2143,352.0833,1163.3809,347.9167,1167.5476,343.75,1163.3809" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="359.375" y="1171.3338">void clear(String[] values)</text><polygon fill="#FFFF44" points="347.9167,1178.9591,352.0833,1183.1258,347.9167,1187.2925,343.75,1183.1258" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="359.375" y="1191.0787">void clear(Object[] values)</text><polygon fill="#FFFF44" points="347.9167,1198.704,352.0833,1202.8707,347.9167,1207.0374,343.75,1202.8707" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="359.375" y="1210.8236">void decreaseSize(int count)</text><polygon fill="#FFFF44" points="347.9167,1218.4489,352.0833,1222.6156,347.9167,1226.7822,343.75,1222.6156" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="359.375" y="1230.5684">void ensureIndexInRange(int index)</text><polygon fill="#FFFF44" points="347.9167,1238.1938,352.0833,1242.3604,347.9167,1246.5271,343.75,1242.3604" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="359.375" y="1250.3133">int increaseSize(int count)</text><polygon fill="#FFFF44" points="347.9167,1257.9386,352.0833,1262.1053,347.9167,1266.272,343.75,1262.1053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="359.375" y="1270.0582">int incrementSize()</text><polygon fill="#FFFF44" points="347.9167,1277.6835,352.0833,1281.8502,347.9167,1286.0168,343.75,1281.8502" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="359.375" y="1289.8031">byte[] newByteArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1297.4284,352.0833,1301.5951,347.9167,1305.7617,343.75,1301.5951" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="359.375" y="1309.5479">byte[] newByteArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1317.1733,352.0833,1321.3399,347.9167,1325.5066,343.75,1321.3399" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="361.4583" x="359.375" y="1329.2928">byte[] newByteArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1336.9181,352.0833,1341.0848,347.9167,1345.2515,343.75,1341.0848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="359.375" y="1349.0377">char[] newCharArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1356.663,352.0833,1360.8297,347.9167,1364.9963,343.75,1360.8297" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="359.375" y="1368.7826">char[] newCharArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1376.4079,352.0833,1380.5745,347.9167,1384.7412,343.75,1380.5745" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="366.6667" x="359.375" y="1388.5274">char[] newCharArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1396.1528,352.0833,1400.3194,347.9167,1404.4861,343.75,1400.3194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="359.375" y="1408.2723">int[] newIntArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1415.8976,352.0833,1420.0643,347.9167,1424.231,343.75,1420.0643" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="343.75" x="359.375" y="1428.0172">int[] newIntArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1435.6425,352.0833,1439.8092,347.9167,1443.9758,343.75,1439.8092" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="275" x="359.375" y="1447.762">int[] newIntArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1455.3874,352.0833,1459.554,347.9167,1463.7207,343.75,1459.554" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="359.375" y="1467.5069">long[] newLongArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1475.1322,352.0833,1479.2989,347.9167,1483.4656,343.75,1479.2989" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="367.7083" x="359.375" y="1487.2518">long[] newLongArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1494.8771,352.0833,1499.0438,347.9167,1503.2104,343.75,1499.0438" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="359.375" y="1506.9967">long[] newLongArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1514.622,352.0833,1518.7887,347.9167,1522.9553,343.75,1518.7887" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="359.375" y="1526.7415">T[] newObjectArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1534.3669,352.0833,1538.5335,347.9167,1542.7002,343.75,1538.5335" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="359.375" y="1546.4864">T[] newObjectArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1554.1117,352.0833,1558.2784,347.9167,1562.4451,343.75,1558.2784" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="358.3333" x="359.375" y="1566.2313">T[] newObjectArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1573.8566,352.0833,1578.0233,347.9167,1582.1899,343.75,1578.0233" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="375" x="359.375" y="1585.9762">short[] newShortArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1593.6015,352.0833,1597.7681,347.9167,1601.9348,343.75,1597.7681" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="260.4167" x="359.375" y="1605.721">short[] newShortArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1613.3464,352.0833,1617.513,347.9167,1621.6797,343.75,1617.513" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="359.375" y="1625.4659">short[] newShortArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1633.0912,352.0833,1637.2579,347.9167,1641.4246,343.75,1637.2579" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="381.25" x="359.375" y="1645.2108">String[] newStringArray(Object who, String why, BaseCount&lt;?&gt; size)</text><polygon fill="#FFFF44" points="347.9167,1652.8361,352.0833,1657.0028,347.9167,1661.1694,343.75,1657.0028" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="359.375" y="1664.9556">String[] newStringArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="347.9167,1672.581,352.0833,1676.7476,347.9167,1680.9143,343.75,1676.7476" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="359.375" y="1684.7005">String[] newStringArray(Object who, String why)</text><polygon fill="#FFFF44" points="347.9167,1692.3258,352.0833,1696.4925,347.9167,1700.6592,343.75,1696.4925" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="359.375" y="1704.4454">void size(int size)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="565.1042" y1="614.1469" y2="614.1469"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="568.2292" y="617.9565">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="633.8542" x2="861.4583" y1="614.1469" y2="614.1469"/><ellipse cx="347.9167" cy="1741.1906" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="359.375" y="1748.1018">void copySettings(PrimitiveCollection that)</text><polygon fill="#FFFF44" points="347.9167,1755.7271,352.0833,1759.8938,347.9167,1764.0605,343.75,1759.8938" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="359.375" y="1767.8467">void copy(PrimitiveCollection that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="564.0625" y1="1724.0265" y2="1724.0265"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="567.1875" y="1727.8361">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="634.8958" x2="861.4583" y1="1724.0265" y2="1724.0265"/><polygon fill="#FFFF44" points="347.9167,1799.3835,352.0833,1803.5502,347.9167,1807.7169,343.75,1803.5502" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="493.75" x="359.375" y="1811.5031">T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)</text><polygon fill="#FFFF44" points="347.9167,1819.1284,352.0833,1823.2951,347.9167,1827.4618,343.75,1823.2951" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="314.5833" x="359.375" y="1831.248">T allocated(Object who, String why, T what, int initialSize)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="564.0625" y1="1787.4278" y2="1787.4278"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="567.1875" y="1791.2374">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="634.8958" x2="861.4583" y1="1787.4278" y2="1787.4278"/><ellipse cx="347.9167" cy="1867.9932" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="359.375" y="1874.9044">PrimitiveCollection hasNullByte(boolean value)</text><ellipse cx="347.9167" cy="1887.738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="359.375" y="1894.6493">boolean hasNullByte()</text><ellipse cx="347.9167" cy="1907.4829" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="359.375" y="1914.3941">PrimitiveCollection hasNullChar(boolean value)</text><ellipse cx="347.9167" cy="1927.2278" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="359.375" y="1934.139">boolean hasNullChar()</text><ellipse cx="347.9167" cy="1946.9727" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="359.375" y="1953.8839">PrimitiveCollection hasNullInt(boolean value)</text><ellipse cx="347.9167" cy="1966.7175" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="359.375" y="1973.6287">boolean hasNullInt()</text><ellipse cx="347.9167" cy="1986.4624" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="359.375" y="1993.3736">boolean hasNullLong()</text><ellipse cx="347.9167" cy="2006.2073" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="359.375" y="2013.1185">PrimitiveCollection hasNullLong(boolean value)</text><ellipse cx="347.9167" cy="2025.9521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="359.375" y="2032.8634">PrimitiveCollection hasNullShort(boolean value)</text><ellipse cx="347.9167" cy="2045.697" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="359.375" y="2052.6082">boolean hasNullShort()</text><ellipse cx="347.9167" cy="2065.4419" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="359.375" y="2072.3531">byte nullByte()</text><ellipse cx="347.9167" cy="2085.1868" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="359.375" y="2092.098">PrimitiveCollection nullByte(byte value)</text><ellipse cx="347.9167" cy="2104.9316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="359.375" y="2111.8429">char nullChar()</text><ellipse cx="347.9167" cy="2124.6765" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="359.375" y="2131.5877">PrimitiveCollection nullChar(char value)</text><ellipse cx="347.9167" cy="2144.4214" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="359.375" y="2151.3326">PrimitiveCollection nullInt(int value)</text><ellipse cx="347.9167" cy="2164.1663" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="359.375" y="2171.0775">int nullInt()</text><ellipse cx="347.9167" cy="2183.9111" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="359.375" y="2190.8223">PrimitiveCollection nullLong(long value)</text><ellipse cx="347.9167" cy="2203.656" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="359.375" y="2210.5672">long nullLong()</text><ellipse cx="347.9167" cy="2223.4009" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="359.375" y="2230.3121">short nullShort()</text><ellipse cx="347.9167" cy="2243.1458" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="359.375" y="2250.057">PrimitiveCollection nullShort(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="337.5" x2="567.7083" y1="1850.8291" y2="1850.8291"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="570.8333" y="1854.6387">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="631.25" x2="861.4583" y1="1850.8291" y2="1850.8291"/><!--MD5=[203f237c31b1e3d74befd77fa38733d5]
class ShortIterable--><rect codeLine="332" fill="#282828" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="2392.7083" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="2392.7083" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="2392.7083" y="122.5911"/><rect codeLine="332" fill="none" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="2392.7083" y="99.5361"/><ellipse cx="2423.6979" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2421.1019,112.3922 L2421.1019,110.8053 L2426.5279,110.8053 L2426.5279,112.3922 L2424.7152,112.3922 L2424.7152,118.3309 L2426.5279,118.3309 L2426.5279,119.9178 L2421.1019,119.9178 L2421.1019,118.3309 L2422.9146,118.3309 L2422.9146,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="2444.0104" y="119.9544">ShortIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2393.75" x2="2548.9583" y1="130.9245" y2="130.9245"/><ellipse cx="2404.1667" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2415.625" y="173.2056">ShortIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2393.75" x2="2439.5833" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2442.7083" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2503.125" x2="2548.9583" y1="149.1302" y2="149.1302"/><!--MD5=[84759b6a4a0e7dc54ddbdfd6c5cbe16d]
class ShortCollection--><rect codeLine="313" fill="#282828" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="2319.7917" y="1101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="2319.7917" y="1101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="2319.7917" y="1124.6745"/><rect codeLine="313" fill="none" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="2319.7917" y="1101.6195"/><ellipse cx="2414.0625" cy="1117.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2411.4665,1114.4755 L2411.4665,1112.8886 L2416.8925,1112.8886 L2416.8925,1114.4755 L2415.0798,1114.4755 L2415.0798,1120.4142 L2416.8925,1120.4142 L2416.8925,1122.0011 L2411.4665,1122.0011 L2411.4665,1120.4142 L2413.2792,1120.4142 L2413.2792,1114.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="100" x="2436.9792" y="1122.0378">ShortCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2320.8333" x2="2621.875" y1="1133.0078" y2="1133.0078"/><ellipse cx="2331.25" cy="1168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="2342.7083" y="1175.2889">boolean isNull(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2320.8333" x2="2444.7917" y1="1151.2136" y2="1151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="2447.9167" y="1155.0232">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2497.9167" x2="2621.875" y1="1151.2136" y2="1151.2136"/><ellipse cx="2331.25" cy="1212.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="2342.7083" y="1218.9453">boolean add(short value)</text><ellipse cx="2331.25" cy="1231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="2342.7083" y="1238.6902">void addAll(short[] that)</text><ellipse cx="2331.25" cy="1251.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="2342.7083" y="1258.4351">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="2331.25" cy="1271.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="2342.7083" y="1278.1799">boolean addAll(ShortCollection that)</text><ellipse cx="2331.25" cy="1291.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2342.7083" y="1297.9248">void clear()</text><ellipse cx="2331.25" cy="1310.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="2342.7083" y="1317.6697">boolean contains(short value)</text><ellipse cx="2331.25" cy="1330.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="2342.7083" y="1337.4146">boolean containsAll(ShortCollection that)</text><ellipse cx="2331.25" cy="1350.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2342.7083" y="1357.1594">boolean remove(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2320.8333" x2="2436.9792" y1="1194.87" y2="1194.87"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2440.1042" y="1198.6796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2505.7292" x2="2621.875" y1="1194.87" y2="1194.87"/><ellipse cx="2331.25" cy="1393.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="2342.7083" y="1400.8158">boolean hasNullShort()</text><ellipse cx="2331.25" cy="1413.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="2342.7083" y="1420.5607">PrimitiveCollection hasNullShort(boolean has)</text><ellipse cx="2331.25" cy="1433.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2342.7083" y="1440.3056">short nullShort()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2320.8333" x2="2439.5833" y1="1376.7405" y2="1376.7405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="2442.7083" y="1380.5501">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2503.125" x2="2621.875" y1="1376.7405" y2="1376.7405"/><!--MD5=[0957e5949c955b260f994d31968b564f]
class ShortIterator--><rect codeLine="340" fill="#282828" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="3255.2083" y="1212.0361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="3255.2083" y="1212.0361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="3255.2083" y="1235.0911"/><rect codeLine="340" fill="none" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="3255.2083" y="1212.0361"/><ellipse cx="3269.7917" cy="1227.7303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M3267.1956,1224.8922 L3267.1956,1223.3053 L3272.6217,1223.3053 L3272.6217,1224.8922 L3270.8089,1224.8922 L3270.8089,1230.8309 L3272.6217,1230.8309 L3272.6217,1232.4178 L3267.1956,1232.4178 L3267.1956,1230.8309 L3269.0084,1230.8309 L3269.0084,1224.8922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="82.2917" x="3286.4583" y="1232.4544">ShortIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="3256.25" x2="3373.9583" y1="1243.4245" y2="1243.4245"/><ellipse cx="3266.6667" cy="1278.7944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="3278.125" y="1285.7056">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3256.25" x2="3280.7292" y1="1261.6302" y2="1261.6302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3283.8542" y="1265.4399">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3349.4792" x2="3373.9583" y1="1261.6302" y2="1261.6302"/><ellipse cx="3266.6667" cy="1322.4508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="3278.125" y="1329.362">short next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3256.25" x2="3284.375" y1="1305.2867" y2="1305.2867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="3287.5" y="1309.0963">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3345.8333" x2="3373.9583" y1="1305.2867" y2="1305.2867"/><!--MD5=[56714951d1b791fb1e80b2485bae57e8]
reverse link ByteIterable to ByteCollection--><path codeLine="17" d="M1184.9063,204.1403 C1173.5833,372.6611 1141.9167,844.2132 1124.6354,1101.5882 " fill="none" id="ByteIterable-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1177.6667,203.1715,1186.3333,182.8799,1192.2083,204.1507,1177.6667,203.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0b7051d71ad7322712cc3c94ab7c5c23]
reverse link Sized to ByteCollection--><path codeLine="18" d="M1761.9375,183.1611 C1750.3958,199.9632 1734.8542,217.9632 1716.1458,228.7028 C1547.3854,325.5778 1422.3021,155.5361 1282.8125,291.2028 C1066.7188,501.3799 1065.9375,880.1195 1087.6146,1101.1924 " fill="none" id="Sized-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1755.7917,179.2445,1773.0521,165.484,1768.1458,187.0049,1755.7917,179.2445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c668582fb0bbd8bfbfd832d87dba6557]
reverse link NamedObject to ByteCollection--><path codeLine="19" d="M1604.7917,181.0465 C1589.2292,198.0257 1569.1146,216.7653 1547.3958,228.7028 C1441.5208,286.9215 1365.6042,203.2028 1282.8125,291.2028 C1077.1458,509.807 1072.0833,882.9007 1090.3021,1101.2549 " fill="none" id="NamedObject-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1599.3021,176.2445,1618.4583,165.2757,1610.3229,185.7965,1599.3021,176.2445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[be4189bee555086dfd22186048cd9c64]
reverse link PrimitiveIterator to ByteIterator--><path codeLine="46" d="M2870.0729,210.5153 C2839.1146,232.0153 2810.0313,258.807 2791.1458,291.2028 C2613.3958,596.0882 2673.2604,1047.5049 2703.3333,1211.8278 " fill="none" id="PrimitiveIterator-backto-ByteIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2866.5104,204.1403,2887.9271,198.7965,2874.5104,216.3278,2866.5104,204.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[69a102e4ef76bdbb51c82ee5130226e8]
reverse link CharIterable to CharCollection--><path codeLine="58" d="M1452.6042,204.1403 C1452.6042,372.6611 1452.6042,844.2132 1452.6042,1101.5882 " fill="none" id="CharIterable-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1445.3125,203.7132,1452.6042,182.8799,1459.8958,203.7132,1445.3125,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8d8b2c0f025d7e2fcfe553841a78cff5]
reverse link Sized to CharCollection--><path codeLine="59" d="M1757.2813,182.1715 C1745.5729,197.6299 1731.1667,214.8903 1716.1458,228.7028 C1679.2813,262.5986 1649.7083,249.234 1622.3958,291.2028 C1461.2917,538.7757 1439.4688,892.7653 1442.8646,1101.5882 " fill="none" id="Sized-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1751.5104,177.7132,1769.6667,165.1715,1763.2917,186.2965,1751.5104,177.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[65ca880327180770198811fba8734651]
reverse link NamedObject to CharCollection--><path codeLine="60" d="M1628.8542,185.9945 C1604.5833,335.8903 1523.8854,834.2965 1480.6042,1101.609 " fill="none" id="NamedObject-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1621.6667,184.7757,1632.1875,165.3799,1636.0625,187.109,1621.6667,184.7757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[930b0297c020590ece31bb036f841438]
reverse link PrimitiveIterator to CharIterator--><path codeLine="87" d="M2957.6771,248.4632 C2952.0104,262.557 2946.9688,277.0361 2943.2292,291.2028 C2854.0521,629.5986 2858.8021,1054.4111 2864.3333,1211.984 " fill="none" id="PrimitiveIterator-backto-CharIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2951.1563,245.1715,2966.0521,228.8799,2964.5729,250.9007,2951.1563,245.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ecd9d493b55dc9e5254f2d7cb3c7b715]
reverse link IntIterable to IntCollection--><path codeLine="110" d="M1921.25,203.6299 C1900.9896,371.7028 1844.0833,843.9528 1813.0313,1101.5882 " fill="none" id="IntIterable-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1914.0208,202.6924,1923.75,182.8799,1928.5,204.432,1914.0208,202.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[05f6d8be8d7cc255aa1c170fd3779bde]
reverse link Sized to IntCollection--><path codeLine="111" d="M1785.1771,186.4528 C1786.1458,336.9215 1789.3542,834.5674 1791.0729,1101.609 " fill="none" id="Sized-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1777.8854,186.2549,1785.0417,165.3799,1792.4688,186.1611,1777.8854,186.2549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6aa7991f9933f8a141fab83286f1d9bb]
reverse link NamedObject to IntCollection--><path codeLine="112" d="M1642.0417,186.4528 C1662.8021,336.9215 1731.4792,834.5674 1768.3229,1101.609 " fill="none" id="NamedObject-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1634.75,187.0049,1639.125,165.3799,1649.1979,185.0153,1634.75,187.0049" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5d7c1f092975cdaccc08f11aacd6c3ff]
reverse link PrimitiveIterator to IntIterator--><path codeLine="139" d="M3013.0208,249.609 C3013.0208,482.307 3013.0208,1027.057 3013.0208,1211.9007 " fill="none" id="PrimitiveIterator-backto-IntIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="3005.7292,249.5778,3013.0208,228.7445,3020.3125,249.5778,3005.7292,249.5778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[99a1a794a2faca24057deee7c3059b9b]
reverse link LongIterable to LongCollection--><path codeLine="151" d="M2131.7708,204.1403 C2131.7708,372.6611 2131.7708,844.2132 2131.7708,1101.5882 " fill="none" id="LongIterable-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2124.4792,203.7132,2131.7708,182.8799,2139.0625,203.7132,2124.4792,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2cef2c4491ed4d71f4d2be7dacead71f]
reverse link Sized to LongCollection--><path codeLine="152" d="M1804.7604,183.6924 C1813.6563,199.2028 1825.2813,216.0986 1839.0625,228.7028 C1884.2917,270.057 1925.5938,241.8903 1961.9792,291.2028 C2138.2604,530.109 2154.6146,889.8174 2146.1667,1101.5361 " fill="none" id="Sized-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1798.2813,187.0361,1794.9792,165.2132,1811.1667,180.2236,1798.2813,187.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[72024a859d858f3d72e33fd452c82eed]
reverse link NamedObject to LongCollection--><path codeLine="153" d="M1670.0104,180.7445 C1686.7917,197.6195 1708.2292,216.359 1730.7292,228.7028 C1824.0729,279.9007 1890.2813,212.5049 1961.9792,291.2028 C2163.8333,512.7549 2170.4063,883.932 2153.4583,1101.3278 " fill="none" id="NamedObject-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1664.5,185.5361,1655.4583,165.4007,1675.0833,175.5049,1664.5,185.5361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fb85c158faf951dd092a7714ff948653]
reverse link PrimitiveIterator to LongIterator--><path codeLine="180" d="M3068.3438,248.4736 C3074.0208,262.557 3079.0729,277.0361 3082.8125,291.2028 C3172.1771,629.5778 3167.9792,1054.4007 3162.6563,1211.984 " fill="none" id="PrimitiveIterator-backto-LongIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="3061.4583,250.9111,3059.9688,228.8799,3074.8646,245.1715,3061.4583,250.9111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4348354899bfe3c9c2442766c3939315]
reverse link KryoSerializable to PrimitiveCollection--><path codeLine="189" d="M855.8333,186.0465 C849.7708,211.7861 841.2917,247.7757 831.0833,291.109 " fill="none" id="KryoSerializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="848.8229,183.984,860.6979,165.3799,863.0208,187.3278,848.8229,183.984" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6964b292329025343416a63b44e8dd4a]
reverse link NamedObject to PrimitiveCollection--><path codeLine="190" d="M1606.0521,181.6611 C1590.5521,199.109 1570.125,218.0465 1547.3958,228.7028 C1425.1771,285.984 1049.125,207.5153 943.2292,291.2028 C913.9688,314.3278 887.1875,340.109 862.6771,367.9736 " fill="none" id="NamedObject-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1600.625,176.7757,1619.5521,165.4007,1611.8542,186.0882,1600.625,176.7757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[249a95afcf3fd0db8d938c1a937e0917]
reverse link Initializable to PrimitiveCollection--><path codeLine="191" d="M83.9271,184.2549 C126.6667,274.6299 231.9271,497.2549 336.2813,717.932 " fill="none" id="Initializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="77.3125,187.3278,75,165.3799,90.5,181.0882,77.3125,187.3278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[f844b69b72e9c528a60c8b32a0e3fca7]
reverse link Countable to PrimitiveCollection--><path codeLine="192" d="M1000.3958,183.2757 C983.0104,212.6611 960.0625,253.5465 943.2292,291.2028 C915.5,353.2132 888.5,418.2028 862.625,483.9528 " fill="none" id="Countable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="994.1771,179.4632,1011.1458,165.3486,1006.6875,186.9632,994.1771,179.4632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[00d9a0d278cb11797a10028af9812eab]
reverse link CompressibleCollection to PrimitiveCollection--><path codeLine="193" d="M542.9271,249.9424 C543.625,262.6715 544.3854,276.3382 545.1771,290.8174 " fill="none" id="CompressibleCollection-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="535.625,249.9528,541.75,228.7445,550.1875,249.1507,535.625,249.9528" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[f80c942dbbc3fe7238af5a1188ebf801]
reverse link TripwireTrait to PrimitiveCollection--><path codeLine="194" d="M232.7396,185.3278 C252.7188,244.6924 291.4167,359.5986 336.4375,493.307 " fill="none" id="TripwireTrait-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="225.75,187.4424,226.0208,165.3799,239.5729,182.7965,225.75,187.4424" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[07d984cac69f335b5438c3d2f446f672]
reverse link ShortIterable to ShortCollection--><path codeLine="310" d="M2471.3542,204.1403 C2471.3542,372.6611 2471.3542,844.2132 2471.3542,1101.5882 " fill="none" id="ShortIterable-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2464.0625,203.7132,2471.3542,182.8799,2478.6458,203.7132,2464.0625,203.7132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[316a2df0767b4920048c1c37a054c46f]
reverse link Sized to ShortCollection--><path codeLine="311" d="M1801.8021,184.4632 C1810.5,200.859 1822.7604,218.1924 1839.0625,228.7028 C2013.3854,341.109 2152.2292,147.2445 2301.5625,291.2028 C2518.7396,500.5674 2519.0313,880.0465 2497,1101.3695 " fill="none" id="Sized-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1795.125,187.4007,1792.9271,165.4424,1808.3438,181.234,1795.125,187.4007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e04ba480b3c1548c8a8968ec4ad3662f]
reverse link NamedObject to ShortCollection--><path codeLine="312" d="M1667.9688,181.0674 C1684.7396,198.6507 1706.7604,217.8799 1730.7292,228.7028 C1847.0208,281.234 2208.5833,203.807 2301.5625,291.2028 C2521.6875,498.0986 2520.7083,879.3799 2497.7083,1101.484 " fill="none" id="NamedObject-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1662.3542,185.734,1653.8646,165.359,1673.2083,175.9945,1662.3542,185.734" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fc03b24f0c6aea9d65390e93a567d4f1]
reverse link PrimitiveIterator to ShortIterator--><path codeLine="339" d="M3156.0417,209.5257 C3187.7292,231.1507 3217.6042,258.2549 3236.9792,291.2028 C3415.9167,595.4945 3357.3542,1047.2757 3327.7396,1211.7549 " fill="none" id="PrimitiveIterator-backto-ShortIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="3151.8542,215.4945,3138.3125,198.0674,3159.7708,203.2445,3151.8542,215.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5f93983e793158c922595fb15d9a9704]
@startuml

    !include lexakai.theme
    
    title "Primitive Collections"
    
    interface Countable
    interface Initializable
    interface NamedObject
    interface TripwireTrait
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface CompressibleCollection
    {
        - -
        +Method compress(Method)
        +Method compressionMethod()
        - -(checks)- -
        +boolean isCompressed()
        - -(primitive)- -
        +Bytes compressReachableObjects(Listener, Object root, Method, Receiver)
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    KryoSerializable <|- - PrimitiveCollection
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Countable <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    TripwireTrait <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        #Method onCompress(Method)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(BaseCount<?> childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, int size)
        #byte[] newByteArray(Object who, String why, BaseCount<?> size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, BaseCount<?> size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, BaseCount<?> size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, BaseCount<?> size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, BaseCount<?> size)
        #short[] newShortArray(Object who, String why, BaseCount<?> size)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, BaseCount<?> size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(filesystem)- -
        +void copySettings(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Collections"
    
    interface Countable
    interface Initializable
    interface NamedObject
    interface TripwireTrait
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface CompressibleCollection
    {
        - -
        +Method compress(Method)
        +Method compressionMethod()
        - -(checks)- -
        +boolean isCompressed()
        - -(primitive)- -
        +Bytes compressReachableObjects(Listener, Object root, Method, Receiver)
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    KryoSerializable <|- - PrimitiveCollection
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Countable <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    TripwireTrait <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        #Method onCompress(Method)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(BaseCount<?> childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, int size)
        #byte[] newByteArray(Object who, String why, BaseCount<?> size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, BaseCount<?> size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, BaseCount<?> size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, BaseCount<?> size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, BaseCount<?> size)
        #short[] newShortArray(Object who, String why, BaseCount<?> size)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, BaseCount<?> size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(filesystem)- -
        +void copySettings(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>