<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2290.625px" preserveAspectRatio="none" style="width:3033px;height:2290px;background:#333333;" version="1.1" viewBox="0 0 3033 2290" width="3033.3333px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="227.0833" x="1396.1094" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="204.1667" x="1407.5677" y="30.5583">Primitive Collections</text><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="296" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="888.5417" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="888.5417" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="888.5417" y="140.2995"/><rect codeLine="296" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="888.5417" y="117.2445"/><ellipse cx="903.125" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M900.529,130.1005 L900.529,128.5136 L905.955,128.5136 L905.955,130.1005 L904.1423,130.1005 L904.1423,136.0392 L905.955,136.0392 L905.955,137.6261 L900.529,137.6261 L900.529,136.0392 L902.3417,136.0392 L902.3417,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="919.7917" y="137.6628">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="889.5833" x2="959.375" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="889.5833" x2="959.375" y1="156.9661" y2="156.9661"/><!--MD5=[c6dd7699ff04048cb9365e543f81bf42]
class Initializable--><rect codeLine="7" fill="#282828" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="1721.875" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="1721.875" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="1721.875" y="140.2995"/><rect codeLine="7" fill="none" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="1721.875" y="117.2445"/><ellipse cx="1736.4583" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1733.8623,130.1005 L1733.8623,128.5136 L1739.2883,128.5136 L1739.2883,130.1005 L1737.4756,130.1005 L1737.4756,136.0392 L1739.2883,136.0392 L1739.2883,137.6261 L1733.8623,137.6261 L1733.8623,136.0392 L1735.675,136.0392 L1735.675,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="1753.125" y="137.6628">Initializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1722.9167" x2="1834.375" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1722.9167" x2="1834.375" y1="156.9661" y2="156.9661"/><!--MD5=[5cc06ecdd9480702b567e3f11ad511a4]
class NamedObject--><rect codeLine="294" fill="#282828" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="996.875" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="996.875" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="996.875" y="140.2995"/><rect codeLine="294" fill="none" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="996.875" y="117.2445"/><ellipse cx="1011.4583" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1008.8623,130.1005 L1008.8623,128.5136 L1014.2883,128.5136 L1014.2883,130.1005 L1012.4756,130.1005 L1012.4756,136.0392 L1014.2883,136.0392 L1014.2883,137.6261 L1008.8623,137.6261 L1008.8623,136.0392 L1010.675,136.0392 L1010.675,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="1028.125" y="137.6628">NamedObject</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="997.9167" x2="1119.7917" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="997.9167" x2="1119.7917" y1="156.9661" y2="156.9661"/><!--MD5=[093b953be813e764de2c1810942591fd]
class CompressibleCollection--><rect codeLine="9" fill="#282828" height="48.055" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="1871.875" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="1871.875" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="1871.875" y="140.2995"/><rect codeLine="9" fill="none" height="48.055" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="1871.875" y="117.2445"/><ellipse cx="1886.4583" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1883.8623,130.1005 L1883.8623,128.5136 L1889.2883,128.5136 L1889.2883,130.1005 L1887.4756,130.1005 L1887.4756,136.0392 L1889.2883,136.0392 L1889.2883,137.6261 L1883.8623,137.6261 L1883.8623,136.0392 L1885.675,136.0392 L1885.675,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="1903.125" y="137.6628">CompressibleCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1872.9167" x2="2063.5417" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1872.9167" x2="2063.5417" y1="156.9661" y2="156.9661"/><!--MD5=[69ad8e2c3e1a3785241f5b510ee951fe]
class KryoSerializable--><rect codeLine="10" fill="#282828" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="2101.5625" y="117.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="2101.5625" y="117.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="2101.5625" y="140.2995"/><rect codeLine="10" fill="none" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="2101.5625" y="117.2445"/><ellipse cx="2116.1458" cy="132.9386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2113.5498,130.1005 L2113.5498,128.5136 L2118.9758,128.5136 L2118.9758,130.1005 L2117.1631,130.1005 L2117.1631,136.0392 L2118.9758,136.0392 L2118.9758,137.6261 L2113.5498,137.6261 L2113.5498,136.0392 L2115.3625,136.0392 L2115.3625,130.1005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="104.1667" x="2132.8125" y="137.6628">KryoSerializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2102.6042" x2="2242.1875" y1="148.6328" y2="148.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2102.6042" x2="2242.1875" y1="156.9661" y2="156.9661"/><!--MD5=[defbfbd02922b24a7c69036d97fbed67]
class ByteIterable--><rect codeLine="37" fill="#282828" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="83.8542" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="83.8542" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="83.8542" y="122.5911"/><rect codeLine="37" fill="none" height="83.3781" id="ByteIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="83.8542" y="99.5361"/><ellipse cx="114.375" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M111.779,112.3922 L111.779,110.8053 L117.205,110.8053 L117.205,112.3922 L115.3923,112.3922 L115.3923,118.3309 L117.205,118.3309 L117.205,119.9178 L111.779,119.9178 L111.779,118.3309 L113.5917,118.3309 L113.5917,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="77.0833" x="134.5833" y="119.9544">ByteIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="84.8958" x2="232.8125" y1="130.9245" y2="130.9245"/><ellipse cx="95.3125" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="106.7708" y="173.2056">ByteIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="84.8958" x2="127.0833" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="130.2083" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="190.625" x2="232.8125" y1="149.1302" y2="149.1302"/><!--MD5=[b1794f41f4624988d1ba30c3e8a4e5b9]
class ByteCollection--><rect codeLine="18" fill="#282828" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="7.2917" y="1113.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="7.2917" y="1113.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="7.2917" y="1136.6536"/><rect codeLine="18" fill="none" height="348.3948" id="ByteCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="7.2917" y="1113.5986"/><ellipse cx="104.6875" cy="1129.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M102.0915,1126.4547 L102.0915,1124.8678 L107.5175,1124.8678 L107.5175,1126.4547 L105.7048,1126.4547 L105.7048,1132.3934 L107.5175,1132.3934 L107.5175,1133.9803 L102.0915,1133.9803 L102.0915,1132.3934 L103.9042,1132.3934 L103.9042,1126.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="93.75" x="127.6042" y="1134.0169">ByteCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="309.375" y1="1144.987" y2="1144.987"/><ellipse cx="18.75" cy="1180.3569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="30.2083" y="1187.2681">boolean isNull(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="132.2917" y1="1163.1927" y2="1163.1927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="135.4167" y="1167.0024">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="185.4167" x2="309.375" y1="1163.1927" y2="1163.1927"/><ellipse cx="18.75" cy="1224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="30.2083" y="1230.9245">boolean add(byte value)</text><ellipse cx="18.75" cy="1243.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="30.2083" y="1250.6694">boolean addAll(byte[] that)</text><ellipse cx="18.75" cy="1263.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="30.2083" y="1270.4142">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="18.75" cy="1283.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="30.2083" y="1290.1591">boolean addAll(ByteIterable that)</text><ellipse cx="18.75" cy="1302.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="30.2083" y="1309.904">void clear()</text><ellipse cx="18.75" cy="1322.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="30.2083" y="1329.6488">boolean contains(byte value)</text><ellipse cx="18.75" cy="1342.4825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="30.2083" y="1349.3937">boolean containsAll(ByteCollection that)</text><ellipse cx="18.75" cy="1362.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="30.2083" y="1369.1386">boolean remove(byte value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="124.4792" y1="1206.8492" y2="1206.8492"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="127.6042" y="1210.6588">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="193.2292" x2="309.375" y1="1206.8492" y2="1206.8492"/><ellipse cx="18.75" cy="1405.8838" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="30.2083" y="1412.795">boolean hasNullByte()</text><ellipse cx="18.75" cy="1425.6287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="30.2083" y="1432.5399">PrimitiveCollection hasNullByte(boolean has)</text><ellipse cx="18.75" cy="1445.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="30.2083" y="1452.2847">byte nullByte()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="127.0833" y1="1388.7197" y2="1388.7197"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="130.2083" y="1392.5293">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="190.625" x2="309.375" y1="1388.7197" y2="1388.7197"/><!--MD5=[cb2f9fc1b931489ec7fc16118c2bc03d]
class PrimitiveIterator--><rect codeLine="325" fill="#282828" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2496.3542" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2496.3542" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="250" x="2496.3542" y="76.7578"/><rect codeLine="325" fill="none" height="174.8576" id="PrimitiveIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="250" x="2496.3542" y="53.7028"/><ellipse cx="2561.4583" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2558.8623,66.5588 L2558.8623,64.9719 L2564.2883,64.9719 L2564.2883,66.5588 L2562.4756,66.5588 L2562.4756,72.4976 L2564.2883,72.4976 L2564.2883,74.0845 L2558.8623,74.0845 L2558.8623,72.4976 L2560.675,72.4976 L2560.675,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="105.2083" x="2584.375" y="74.1211">PrimitiveIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2497.3958" x2="2745.3125" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2497.3958" x2="2745.3125" y1="93.4245" y2="93.4245"/><ellipse cx="2507.8125" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="2519.2708" y="111.794">boolean identical(PrimitiveIterator that)</text><ellipse cx="2507.8125" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="2519.2708" y="155.4504">int hashValue()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2497.3958" x2="2586.9792" y1="131.3751" y2="131.3751"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2590.1042" y="135.1847">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2655.7292" x2="2745.3125" y1="131.3751" y2="131.3751"/><ellipse cx="2507.8125" cy="192.1956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="2519.2708" y="199.1069">boolean hasNext()</text><ellipse cx="2507.8125" cy="211.9405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="2519.2708" y="218.8517">long nextLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2497.3958" x2="2590.625" y1="175.0315" y2="175.0315"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2593.75" y="178.8411">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2652.0833" x2="2745.3125" y1="175.0315" y2="175.0315"/><!--MD5=[3d10e76dd90eb216316d7348e2c4f1d1]
class ByteIterator--><rect codeLine="45" fill="#282828" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2267.7083" y="1224.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2267.7083" y="1224.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="2267.7083" y="1247.0703"/><rect codeLine="45" fill="none" height="127.0345" id="ByteIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="2267.7083" y="1224.0153"/><ellipse cx="2282.2917" cy="1239.7095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2279.6956,1236.8713 L2279.6956,1235.2844 L2285.1217,1235.2844 L2285.1217,1236.8713 L2283.3089,1236.8713 L2283.3089,1242.8101 L2285.1217,1242.8101 L2285.1217,1244.397 L2279.6956,1244.397 L2279.6956,1242.8101 L2281.5084,1242.8101 L2281.5084,1236.8713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="2298.9583" y="1244.4336">ByteIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2268.75" x2="2380.2083" y1="1255.4036" y2="1255.4036"/><ellipse cx="2279.1667" cy="1290.7735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2290.625" y="1297.6847">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2268.75" x2="2290.1042" y1="1273.6094" y2="1273.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2293.2292" y="1277.419">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2358.8542" x2="2380.2083" y1="1273.6094" y2="1273.6094"/><ellipse cx="2279.1667" cy="1334.4299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="2290.625" y="1341.3411">byte next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2268.75" x2="2293.75" y1="1317.2658" y2="1317.2658"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2296.875" y="1321.0754">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2355.2083" x2="2380.2083" y1="1317.2658" y2="1317.2658"/><!--MD5=[97fcd86f5bb143a13e7ca16679ef42d5]
class CharIterable--><rect codeLine="78" fill="#282828" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="421.3542" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="421.3542" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="154.1667" x="421.3542" y="122.5911"/><rect codeLine="78" fill="none" height="83.3781" id="CharIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="154.1667" x="421.3542" y="99.5361"/><ellipse cx="452.8125" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M450.2165,112.3922 L450.2165,110.8053 L455.6425,110.8053 L455.6425,112.3922 L453.8298,112.3922 L453.8298,118.3309 L455.6425,118.3309 L455.6425,119.9178 L450.2165,119.9178 L450.2165,118.3309 L452.0292,118.3309 L452.0292,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="79.1667" x="473.2292" y="119.9544">CharIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="422.3958" x2="574.4792" y1="130.9245" y2="130.9245"/><ellipse cx="432.8125" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="444.2708" y="173.2056">CharIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="422.3958" x2="466.6667" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="469.7917" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="530.2083" x2="574.4792" y1="149.1302" y2="149.1302"/><!--MD5=[90165500f4d7fb9198b276c528488d69]
class CharCollection--><rect codeLine="59" fill="#282828" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="346.875" y="1113.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="346.875" y="1113.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="346.875" y="1136.6536"/><rect codeLine="59" fill="none" height="348.3948" id="CharCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="346.875" y="1113.5986"/><ellipse cx="443.2292" cy="1129.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M440.6331,1126.4547 L440.6331,1124.8678 L446.0592,1124.8678 L446.0592,1126.4547 L444.2464,1126.4547 L444.2464,1132.3934 L446.0592,1132.3934 L446.0592,1133.9803 L440.6331,1133.9803 L440.6331,1132.3934 L442.4459,1132.3934 L442.4459,1126.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="466.1458" y="1134.0169">CharCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="347.9167" x2="648.9583" y1="1144.987" y2="1144.987"/><ellipse cx="358.3333" cy="1180.3569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="369.7917" y="1187.2681">boolean isNull(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="347.9167" x2="471.875" y1="1163.1927" y2="1163.1927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="475" y="1167.0024">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525" x2="648.9583" y1="1163.1927" y2="1163.1927"/><ellipse cx="358.3333" cy="1224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="369.7917" y="1230.9245">boolean add(char value)</text><ellipse cx="358.3333" cy="1243.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="369.7917" y="1250.6694">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="358.3333" cy="1263.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="369.7917" y="1270.4142">boolean addAll(char[] that)</text><ellipse cx="358.3333" cy="1283.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="200" x="369.7917" y="1290.1591">boolean addAll(CharCollection that)</text><ellipse cx="358.3333" cy="1302.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="369.7917" y="1309.904">void clear()</text><ellipse cx="358.3333" cy="1322.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="369.7917" y="1329.6488">boolean contains(char value)</text><ellipse cx="358.3333" cy="1342.4825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="227.0833" x="369.7917" y="1349.3937">boolean containsAll(CharCollection that)</text><ellipse cx="358.3333" cy="1362.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="369.7917" y="1369.1386">boolean remove(char value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="347.9167" x2="464.0625" y1="1206.8492" y2="1206.8492"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="467.1875" y="1210.6588">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="532.8125" x2="648.9583" y1="1206.8492" y2="1206.8492"/><ellipse cx="358.3333" cy="1405.8838" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="369.7917" y="1412.795">boolean hasNullChar()</text><ellipse cx="358.3333" cy="1425.6287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="369.7917" y="1432.5399">PrimitiveCollection hasNullChar(boolean has)</text><ellipse cx="358.3333" cy="1445.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="369.7917" y="1452.2847">char nullChar()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="347.9167" x2="466.6667" y1="1388.7197" y2="1388.7197"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="469.7917" y="1392.5293">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="530.2083" x2="648.9583" y1="1388.7197" y2="1388.7197"/><!--MD5=[b246b0e8213485807b10907ccd9a8538]
class CharIterator--><rect codeLine="86" fill="#282828" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2417.7083" y="1224.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2417.7083" y="1224.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="2417.7083" y="1247.0703"/><rect codeLine="86" fill="none" height="127.0345" id="CharIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="2417.7083" y="1224.0153"/><ellipse cx="2432.2917" cy="1239.7095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2429.6956,1236.8713 L2429.6956,1235.2844 L2435.1217,1235.2844 L2435.1217,1236.8713 L2433.3089,1236.8713 L2433.3089,1242.8101 L2435.1217,1242.8101 L2435.1217,1244.397 L2429.6956,1244.397 L2429.6956,1242.8101 L2431.5084,1242.8101 L2431.5084,1236.8713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="2448.9583" y="1244.4336">CharIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2418.75" x2="2532.2917" y1="1255.4036" y2="1255.4036"/><ellipse cx="2429.1667" cy="1290.7735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2440.625" y="1297.6847">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2418.75" x2="2441.1458" y1="1273.6094" y2="1273.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2444.2708" y="1277.419">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2509.8958" x2="2532.2917" y1="1273.6094" y2="1273.6094"/><ellipse cx="2429.1667" cy="1334.4299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="2440.625" y="1341.3411">char next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2418.75" x2="2444.7917" y1="1317.2658" y2="1317.2658"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2447.9167" y="1321.0754">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2506.25" x2="2532.2917" y1="1317.2658" y2="1317.2658"/><!--MD5=[60470e774238cb47ff78e96b9f7be05d]
class IntIterable--><rect codeLine="119" fill="#282828" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="709.8958" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="709.8958" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="709.8958" y="122.5911"/><rect codeLine="119" fill="none" height="83.3781" id="IntIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="709.8958" y="99.5361"/><ellipse cx="741.3542" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M738.7581,112.3922 L738.7581,110.8053 L744.1842,110.8053 L744.1842,112.3922 L742.3714,112.3922 L742.3714,118.3309 L744.1842,118.3309 L744.1842,119.9178 L738.7581,119.9178 L738.7581,118.3309 L740.5709,118.3309 L740.5709,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="761.7708" y="119.9544">IntIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="710.9375" x2="850.5208" y1="130.9245" y2="130.9245"/><ellipse cx="721.3542" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="732.8125" y="173.2056">IntIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="710.9375" x2="748.9583" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="752.0833" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="812.5" x2="850.5208" y1="149.1302" y2="149.1302"/><!--MD5=[f434602f8daadf1a8b6ba6711a4e54de]
class IntCollection--><rect codeLine="100" fill="#282828" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="686.4583" y="1113.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="686.4583" y="1113.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="686.4583" y="1136.6536"/><rect codeLine="100" fill="none" height="348.3948" id="IntCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="686.4583" y="1113.5986"/><ellipse cx="789.0625" cy="1129.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M786.4665,1126.4547 L786.4665,1124.8678 L791.8925,1124.8678 L791.8925,1126.4547 L790.0798,1126.4547 L790.0798,1132.3934 L791.8925,1132.3934 L791.8925,1133.9803 L786.4665,1133.9803 L786.4665,1132.3934 L788.2792,1132.3934 L788.2792,1126.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="811.9792" y="1134.0169">IntCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="687.5" x2="988.5417" y1="1144.987" y2="1144.987"/><ellipse cx="697.9167" cy="1180.3569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="709.375" y="1187.2681">boolean isNull(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="687.5" x2="811.4583" y1="1163.1927" y2="1163.1927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="814.5833" y="1167.0024">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="864.5833" x2="988.5417" y1="1163.1927" y2="1163.1927"/><ellipse cx="697.9167" cy="1224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="709.375" y="1230.9245">boolean add(int value)</text><ellipse cx="697.9167" cy="1243.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="709.375" y="1250.6694">boolean addAll(int[] that)</text><ellipse cx="697.9167" cy="1263.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="709.375" y="1270.4142">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="697.9167" cy="1283.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="709.375" y="1290.1591">boolean addAll(IntCollection that)</text><ellipse cx="697.9167" cy="1302.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="709.375" y="1309.904">void clear()</text><ellipse cx="697.9167" cy="1322.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="709.375" y="1329.6488">boolean contains(int value)</text><ellipse cx="697.9167" cy="1342.4825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="709.375" y="1349.3937">boolean containsAll(IntCollection that)</text><ellipse cx="697.9167" cy="1362.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="709.375" y="1369.1386">boolean remove(int value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="687.5" x2="803.6458" y1="1206.8492" y2="1206.8492"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="806.7708" y="1210.6588">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="872.3958" x2="988.5417" y1="1206.8492" y2="1206.8492"/><ellipse cx="697.9167" cy="1405.8838" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="709.375" y="1412.795">boolean hasNullInt()</text><ellipse cx="697.9167" cy="1425.6287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="709.375" y="1432.5399">PrimitiveCollection hasNullInt(boolean has)</text><ellipse cx="697.9167" cy="1445.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="709.375" y="1452.2847">int nullInt()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="687.5" x2="806.25" y1="1388.7197" y2="1388.7197"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="809.375" y="1392.5293">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="869.7917" x2="988.5417" y1="1388.7197" y2="1388.7197"/><!--MD5=[2e4772073d6003ed1f976207db7f3a78]
class IntIterator--><rect codeLine="127" fill="#282828" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2569.7917" y="1224.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2569.7917" y="1224.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="103.125" x="2569.7917" y="1247.0703"/><rect codeLine="127" fill="none" height="127.0345" id="IntIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="103.125" x="2569.7917" y="1224.0153"/><ellipse cx="2584.375" cy="1239.7095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2581.779,1236.8713 L2581.779,1235.2844 L2587.205,1235.2844 L2587.205,1236.8713 L2585.3923,1236.8713 L2585.3923,1242.8101 L2587.205,1242.8101 L2587.205,1244.397 L2581.779,1244.397 L2581.779,1242.8101 L2583.5917,1242.8101 L2583.5917,1236.8713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="65.625" x="2601.0417" y="1244.4336">IntIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2570.8333" x2="2671.875" y1="1255.4036" y2="1255.4036"/><ellipse cx="2581.25" cy="1290.7735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2592.7083" y="1297.6847">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2570.8333" x2="2586.9792" y1="1273.6094" y2="1273.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2590.1042" y="1277.419">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2655.7292" x2="2671.875" y1="1273.6094" y2="1273.6094"/><ellipse cx="2581.25" cy="1334.4299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="2592.7083" y="1341.3411">int next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2570.8333" x2="2590.625" y1="1317.2658" y2="1317.2658"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2593.75" y="1321.0754">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2652.0833" x2="2671.875" y1="1317.2658" y2="1317.2658"/><!--MD5=[d1e6d361dbd83c672e797f2e9d24b3ed]
class LongIterable--><rect codeLine="160" fill="#282828" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="1157.2917" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="1157.2917" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="1157.2917" y="122.5911"/><rect codeLine="160" fill="none" height="83.3781" id="LongIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="1157.2917" y="99.5361"/><ellipse cx="1188.2813" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1185.6852,112.3922 L1185.6852,110.8053 L1191.1112,110.8053 L1191.1112,112.3922 L1189.2985,112.3922 L1189.2985,118.3309 L1191.1112,118.3309 L1191.1112,119.9178 L1185.6852,119.9178 L1185.6852,118.3309 L1187.498,118.3309 L1187.498,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="81.25" x="1208.5938" y="119.9544">LongIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1158.3333" x2="1311.4583" y1="130.9245" y2="130.9245"/><ellipse cx="1168.75" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="1180.2083" y="173.2056">LongIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1158.3333" x2="1203.125" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1206.25" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1266.6667" x2="1311.4583" y1="149.1302" y2="149.1302"/><!--MD5=[9b97eef0aee9769adba47eada2538075]
class LongCollection--><rect codeLine="141" fill="#282828" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1026.0417" y="1113.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1026.0417" y="1113.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1026.0417" y="1136.6536"/><rect codeLine="141" fill="none" height="348.3948" id="LongCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1026.0417" y="1113.5986"/><ellipse cx="1121.3542" cy="1129.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1118.7581,1126.4547 L1118.7581,1124.8678 L1124.1842,1124.8678 L1124.1842,1126.4547 L1122.3714,1126.4547 L1122.3714,1132.3934 L1124.1842,1132.3934 L1124.1842,1133.9803 L1118.7581,1133.9803 L1118.7581,1132.3934 L1120.5709,1132.3934 L1120.5709,1126.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="97.9167" x="1144.2708" y="1134.0169">LongCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1027.0833" x2="1328.125" y1="1144.987" y2="1144.987"/><ellipse cx="1037.5" cy="1180.3569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1048.9583" y="1187.2681">boolean isNull(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1027.0833" x2="1151.0417" y1="1163.1927" y2="1163.1927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1154.1667" y="1167.0024">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1204.1667" x2="1328.125" y1="1163.1927" y2="1163.1927"/><ellipse cx="1037.5" cy="1224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1048.9583" y="1230.9245">boolean add(long value)</text><ellipse cx="1037.5" cy="1243.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1048.9583" y="1250.6694">boolean addAll(long[] that)</text><ellipse cx="1037.5" cy="1263.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1048.9583" y="1270.4142">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1037.5" cy="1283.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="1048.9583" y="1290.1591">boolean addAll(LongCollection that)</text><ellipse cx="1037.5" cy="1302.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1048.9583" y="1309.904">void clear()</text><ellipse cx="1037.5" cy="1322.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="1048.9583" y="1329.6488">boolean contains(long value)</text><ellipse cx="1037.5" cy="1342.4825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="1048.9583" y="1349.3937">boolean containsAll(LongCollection that)</text><ellipse cx="1037.5" cy="1362.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="1048.9583" y="1369.1386">boolean remove(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1027.0833" x2="1143.2292" y1="1206.8492" y2="1206.8492"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1146.3542" y="1210.6588">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1211.9792" x2="1328.125" y1="1206.8492" y2="1206.8492"/><ellipse cx="1037.5" cy="1405.8838" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="1048.9583" y="1412.795">PrimitiveCollection hasNullLong(boolean has)</text><ellipse cx="1037.5" cy="1425.6287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="1048.9583" y="1432.5399">boolean hasNullLong()</text><ellipse cx="1037.5" cy="1445.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="1048.9583" y="1452.2847">long nullLong()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1027.0833" x2="1145.8333" y1="1388.7197" y2="1388.7197"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1148.9583" y="1392.5293">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1209.375" x2="1328.125" y1="1388.7197" y2="1388.7197"/><!--MD5=[7ab282b7e48474d6778a4f3de3e62e41]
class LongIterator--><rect codeLine="168" fill="#282828" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="2709.375" y="1224.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="2709.375" y="1224.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="117.7083" x="2709.375" y="1247.0703"/><rect codeLine="168" fill="none" height="127.0345" id="LongIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="117.7083" x="2709.375" y="1224.0153"/><ellipse cx="2723.9583" cy="1239.7095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2721.3623,1236.8713 L2721.3623,1235.2844 L2726.7883,1235.2844 L2726.7883,1236.8713 L2724.9756,1236.8713 L2724.9756,1242.8101 L2726.7883,1242.8101 L2726.7883,1244.397 L2721.3623,1244.397 L2721.3623,1242.8101 L2723.175,1242.8101 L2723.175,1236.8713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="80.2083" x="2740.625" y="1244.4336">LongIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2710.4167" x2="2826.0417" y1="1255.4036" y2="1255.4036"/><ellipse cx="2720.8333" cy="1290.7735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2732.2917" y="1297.6847">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2710.4167" x2="2733.8542" y1="1273.6094" y2="1273.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2736.9792" y="1277.419">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2802.6042" x2="2826.0417" y1="1273.6094" y2="1273.6094"/><ellipse cx="2720.8333" cy="1334.4299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="2732.2917" y="1341.3411">long next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2710.4167" x2="2737.5" y1="1317.2658" y2="1317.2658"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2740.625" y="1321.0754">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2798.9583" x2="2826.0417" y1="1317.2658" y2="1317.2658"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect codeLine="181" fill="#282828" height="1992.4744" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="1705.2083" y="291.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="1705.2083" y="291.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="526.0417" x="1705.2083" y="314.2578"/><rect codeLine="181" fill="none" height="1992.4744" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="526.0417" x="1705.2083" y="291.2028"/><ellipse cx="1899.4792" cy="306.897" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1899.0723,303.599 L1898.2239,307.3283 L1899.9268,307.3283 Z M1897.9736,301.9511 L1900.177,301.9511 L1902.6367,311.0636 L1900.8362,311.0636 L1900.2747,308.8114 L1897.8638,308.8114 L1897.3145,311.0636 L1895.5139,311.0636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="1922.3958" y="311.6211">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1706.25" x2="2230.2083" y1="322.5911" y2="322.5911"/><polygon fill="#FFFF44" points="1716.6667,352.7527,1720.8333,356.9194,1716.6667,361.086,1712.5,356.9194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1728.125" y="364.8722">PrimitiveCollection()</text><polygon fill="#FFFF44" points="1716.6667,372.4976,1720.8333,376.6642,1716.6667,380.8309,1712.5,376.6642" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="1728.125" y="384.6171">PrimitiveCollection(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1924.4792" y1="340.7969" y2="340.7969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1927.6042" y="344.6065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2011.9792" x2="2230.2083" y1="340.7969" y2="340.7969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="2230.2083" y1="394.3258" y2="394.3258"/><ellipse cx="1716.6667" cy="405.7841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1728.125" y="412.6953">int increasedCapacity(int size)</text><ellipse cx="1716.6667" cy="449.4405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="1728.125" y="456.3517">boolean isInitialized()</text><ellipse cx="1716.6667" cy="469.1854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="1728.125" y="476.0966">boolean isNull(byte value)</text><ellipse cx="1716.6667" cy="488.9303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1728.125" y="495.8415">boolean isNull(char value)</text><ellipse cx="1716.6667" cy="508.6751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1728.125" y="515.5863">boolean isNull(long value)</text><ellipse cx="1716.6667" cy="528.42" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1728.125" y="535.3312">boolean isNull(short value)</text><ellipse cx="1716.6667" cy="548.1649" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1728.125" y="555.0761">boolean isNull(int value)</text><polygon fill="#FFFF44" points="1716.6667,562.7014,1720.8333,566.8681,1716.6667,571.0347,1712.5,566.8681" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="1728.125" y="574.821">boolean ensureHasRoomFor(int increase)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1941.6667" y1="432.2764" y2="432.2764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1944.7917" y="436.086">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1994.7917" x2="2230.2083" y1="432.2764" y2="432.2764"/><ellipse cx="1716.6667" cy="611.5662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="1728.125" y="618.4774">Count capacity()</text><ellipse cx="1716.6667" cy="631.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1728.125" y="638.2222">void clear()</text><ellipse cx="1716.6667" cy="651.0559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="1728.125" y="657.9671">void copyNullValues(PrimitiveCollection that)</text><ellipse cx="1716.6667" cy="670.8008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="1728.125" y="677.712">Estimate initialChildCount()</text><ellipse cx="1716.6667" cy="690.5457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="1728.125" y="697.4569">int initialChildCountAsInt()</text><ellipse cx="1716.6667" cy="710.2905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1728.125" y="717.2017">Estimate initialChildSize()</text><ellipse cx="1716.6667" cy="730.0354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="1728.125" y="736.9466">PrimitiveCollection initialChildSize(Count childSize)</text><ellipse cx="1716.6667" cy="749.7803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="263.5417" x="1728.125" y="756.6915">PrimitiveCollection initialChildSize(int childSize)</text><ellipse cx="1716.6667" cy="769.5251" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="1728.125" y="776.4364">int initialChildSizeAsInt()</text><ellipse cx="1716.6667" cy="789.27" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="1728.125" y="796.1812">PrimitiveCollection initialSize(Estimate initialSize)</text><ellipse cx="1716.6667" cy="809.0149" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="1728.125" y="815.9261">Estimate initialSize()</text><ellipse cx="1716.6667" cy="828.7598" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="1728.125" y="835.671">PrimitiveCollection initialSize(int initialSize)</text><ellipse cx="1716.6667" cy="848.5046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="1728.125" y="855.4159">int initialSizeAsInt()</text><ellipse cx="1716.6667" cy="868.2495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="385.4167" x="1728.125" y="875.1607">PrimitiveCollection maximumChildSize(Maximum maximumChildSize)</text><ellipse cx="1716.6667" cy="887.9944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="1728.125" y="894.9056">Maximum maximumChildSize()</text><ellipse cx="1716.6667" cy="907.7393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="345.8333" x="1728.125" y="914.6505">PrimitiveCollection maximumChildSize(int maximumChildSize)</text><ellipse cx="1716.6667" cy="927.4841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="1728.125" y="934.3953">int maximumChildSizeAsInt()</text><ellipse cx="1716.6667" cy="947.229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="327.0833" x="1728.125" y="954.1402">PrimitiveCollection maximumSize(Maximum maximumSize)</text><ellipse cx="1716.6667" cy="966.9739" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="1728.125" y="973.8851">PrimitiveCollection maximumSize(int maximumSize)</text><ellipse cx="1716.6667" cy="986.7188" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="1728.125" y="993.63">Maximum maximumSize()</text><ellipse cx="1716.6667" cy="1006.4636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="1728.125" y="1013.3748">int maximumSizeAsInt()</text><ellipse cx="1716.6667" cy="1026.2085" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="1728.125" y="1033.1197">int nullIndex()</text><polygon fill="#FFFF44" points="1716.6667,1040.745,1720.8333,1044.9117,1716.6667,1049.0784,1712.5,1044.9117" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1728.125" y="1052.8646">void clear(char[] values)</text><polygon fill="#FFFF44" points="1716.6667,1060.4899,1720.8333,1064.6566,1716.6667,1068.8232,1712.5,1064.6566" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="1728.125" y="1072.6095">void clear(int[] values)</text><polygon fill="#FFFF44" points="1716.6667,1080.2348,1720.8333,1084.4014,1716.6667,1088.5681,1712.5,1084.4014" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1728.125" y="1092.3543">void clear(long[] values)</text><polygon fill="#FFFF44" points="1716.6667,1099.9797,1720.8333,1104.1463,1716.6667,1108.313,1712.5,1104.1463" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="1728.125" y="1112.0992">void clear(byte[] values)</text><polygon fill="#FFFF44" points="1716.6667,1119.7245,1720.8333,1123.8912,1716.6667,1128.0579,1712.5,1123.8912" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1728.125" y="1131.8441">void clear(short[] values)</text><polygon fill="#FFFF44" points="1716.6667,1139.4694,1720.8333,1143.6361,1716.6667,1147.8027,1712.5,1143.6361" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="142.7083" x="1728.125" y="1151.5889">void clear(String[] values)</text><polygon fill="#FFFF44" points="1716.6667,1159.2143,1720.8333,1163.3809,1716.6667,1167.5476,1712.5,1163.3809" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="1728.125" y="1171.3338">void clear(Object[] values)</text><polygon fill="#FFFF44" points="1716.6667,1178.9591,1720.8333,1183.1258,1716.6667,1187.2925,1712.5,1183.1258" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="1728.125" y="1191.0787">void decreaseSize(int count)</text><polygon fill="#FFFF44" points="1716.6667,1198.704,1720.8333,1202.8707,1716.6667,1207.0374,1712.5,1202.8707" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="1728.125" y="1210.8236">void ensureIndexInRange(int index)</text><polygon fill="#FFFF44" points="1716.6667,1218.4489,1720.8333,1222.6156,1716.6667,1226.7822,1712.5,1222.6156" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="1728.125" y="1230.5684">int increaseSize(int count)</text><polygon fill="#FFFF44" points="1716.6667,1238.1938,1720.8333,1242.3604,1716.6667,1246.5271,1712.5,1242.3604" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="1728.125" y="1250.3133">int incrementSize()</text><polygon fill="#FFFF44" points="1716.6667,1257.9386,1720.8333,1262.1053,1716.6667,1266.272,1712.5,1262.1053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="1728.125" y="1270.0582">byte[] newByteArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1277.6835,1720.8333,1281.8502,1716.6667,1286.0168,1712.5,1281.8502" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="1728.125" y="1289.8031">byte[] newByteArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1297.4284,1720.8333,1301.5951,1716.6667,1305.7617,1712.5,1301.5951" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="1728.125" y="1309.5479">byte[] newByteArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1317.1733,1720.8333,1321.3399,1716.6667,1325.5066,1712.5,1321.3399" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="252.0833" x="1728.125" y="1329.2928">char[] newCharArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1336.9181,1720.8333,1341.0848,1716.6667,1345.2515,1712.5,1341.0848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="297.9167" x="1728.125" y="1349.0377">char[] newCharArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1356.663,1720.8333,1360.8297,1716.6667,1364.9963,1712.5,1360.8297" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="317.7083" x="1728.125" y="1368.7826">char[] newCharArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1376.4079,1720.8333,1380.5745,1716.6667,1384.7412,1712.5,1380.5745" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="1728.125" y="1388.5274">int[] newIntArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1396.1528,1720.8333,1400.3194,1716.6667,1404.4861,1712.5,1400.3194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="294.7917" x="1728.125" y="1408.2723">int[] newIntArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1415.8976,1720.8333,1420.0643,1716.6667,1424.231,1712.5,1420.0643" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="275" x="1728.125" y="1428.0172">int[] newIntArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1435.6425,1720.8333,1439.8092,1716.6667,1443.9758,1712.5,1439.8092" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="1728.125" y="1447.762">long[] newLongArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1455.3874,1720.8333,1459.554,1716.6667,1463.7207,1712.5,1459.554" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="318.75" x="1728.125" y="1467.5069">long[] newLongArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1475.1322,1720.8333,1479.2989,1716.6667,1483.4656,1712.5,1479.2989" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="253.125" x="1728.125" y="1487.2518">long[] newLongArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1494.8771,1720.8333,1499.0438,1716.6667,1503.2104,1712.5,1499.0438" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="289.5833" x="1728.125" y="1506.9967">T[] newObjectArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1514.622,1720.8333,1518.7887,1716.6667,1522.9553,1712.5,1518.7887" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="1728.125" y="1526.7415">T[] newObjectArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1534.3669,1720.8333,1538.5335,1716.6667,1542.7002,1712.5,1538.5335" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="243.75" x="1728.125" y="1546.4864">T[] newObjectArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1554.1117,1720.8333,1558.2784,1716.6667,1562.4451,1712.5,1558.2784" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="260.4167" x="1728.125" y="1566.2313">short[] newShortArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1573.8566,1720.8333,1578.0233,1716.6667,1582.1899,1712.5,1578.0233" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="1728.125" y="1585.9762">short[] newShortArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1593.6015,1720.8333,1597.7681,1716.6667,1601.9348,1712.5,1597.7681" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="1728.125" y="1605.721">short[] newShortArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1613.3464,1720.8333,1617.513,1716.6667,1621.6797,1712.5,1617.513" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="332.2917" x="1728.125" y="1625.4659">String[] newStringArray(Object who, String why, Count size)</text><polygon fill="#FFFF44" points="1716.6667,1633.0912,1720.8333,1637.2579,1716.6667,1641.4246,1712.5,1637.2579" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="312.5" x="1728.125" y="1645.2108">String[] newStringArray(Object who, String why, int size)</text><polygon fill="#FFFF44" points="1716.6667,1652.8361,1720.8333,1657.0028,1716.6667,1661.1694,1712.5,1657.0028" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="1728.125" y="1664.9556">String[] newStringArray(Object who, String why)</text><polygon fill="#FFFF44" points="1716.6667,1672.581,1720.8333,1676.7476,1716.6667,1680.9143,1712.5,1676.7476" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="1728.125" y="1684.7005">void size(int size)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1933.8542" y1="594.4021" y2="594.4021"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1936.9792" y="598.2117">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2002.6042" x2="2230.2083" y1="594.4021" y2="594.4021"/><polygon fill="#FFFF44" points="1716.6667,1716.2374,1720.8333,1720.4041,1716.6667,1724.5707,1712.5,1720.4041" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="1728.125" y="1728.3569">Method onCompress(Method)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1914.0625" y1="1704.2816" y2="1704.2816"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="1917.1875" y="1708.0912">(extension points)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2022.3958" x2="2230.2083" y1="1704.2816" y2="1704.2816"/><ellipse cx="1716.6667" cy="1765.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="1728.125" y="1772.0133">void copyConfiguration(PrimitiveCollection that)</text><polygon fill="#FFFF44" points="1716.6667,1779.6387,1720.8333,1783.8053,1716.6667,1787.972,1712.5,1783.8053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="1728.125" y="1791.7582">void copy(PrimitiveCollection that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1932.8125" y1="1747.938" y2="1747.938"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1935.9375" y="1751.7476">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2003.6458" x2="2230.2083" y1="1747.938" y2="1747.938"/><polygon fill="#FFFF44" points="1716.6667,1823.2951,1720.8333,1827.4618,1716.6667,1831.6284,1712.5,1827.4618" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="493.75" x="1728.125" y="1835.4146">T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)</text><polygon fill="#FFFF44" points="1716.6667,1843.04,1720.8333,1847.2066,1716.6667,1851.3733,1712.5,1847.2066" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="314.5833" x="1728.125" y="1855.1595">T allocated(Object who, String why, T what, int initialSize)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1932.8125" y1="1811.3393" y2="1811.3393"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1935.9375" y="1815.1489">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2003.6458" x2="2230.2083" y1="1811.3393" y2="1811.3393"/><ellipse cx="1716.6667" cy="1891.9047" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="257.2917" x="1728.125" y="1898.8159">PrimitiveCollection hasNullByte(boolean value)</text><ellipse cx="1716.6667" cy="1911.6496" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="1728.125" y="1918.5608">boolean hasNullByte()</text><ellipse cx="1716.6667" cy="1931.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="1728.125" y="1938.3057">PrimitiveCollection hasNullChar(boolean value)</text><ellipse cx="1716.6667" cy="1951.1393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="1728.125" y="1958.0505">boolean hasNullChar()</text><ellipse cx="1716.6667" cy="1970.8842" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="1728.125" y="1977.7954">PrimitiveCollection hasNullInt(boolean value)</text><ellipse cx="1716.6667" cy="1990.6291" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1728.125" y="1997.5403">boolean hasNullInt()</text><ellipse cx="1716.6667" cy="2010.3739" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="1728.125" y="2017.2852">boolean hasNullLong()</text><ellipse cx="1716.6667" cy="2030.1188" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="1728.125" y="2037.03">PrimitiveCollection hasNullLong(boolean value)</text><ellipse cx="1716.6667" cy="2049.8637" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="1728.125" y="2056.7749">PrimitiveCollection hasNullShort(boolean value)</text><ellipse cx="1716.6667" cy="2069.6086" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1728.125" y="2076.5198">boolean hasNullShort()</text><ellipse cx="1716.6667" cy="2089.3534" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="1728.125" y="2096.2646">byte nullByte()</text><ellipse cx="1716.6667" cy="2109.0983" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="1728.125" y="2116.0095">PrimitiveCollection nullByte(byte value)</text><ellipse cx="1716.6667" cy="2128.8432" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="1728.125" y="2135.7544">char nullChar()</text><ellipse cx="1716.6667" cy="2148.5881" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="1728.125" y="2155.4993">PrimitiveCollection nullChar(char value)</text><ellipse cx="1716.6667" cy="2168.3329" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="1728.125" y="2175.2441">PrimitiveCollection nullInt(int value)</text><ellipse cx="1716.6667" cy="2188.0778" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="1728.125" y="2194.989">int nullInt()</text><ellipse cx="1716.6667" cy="2207.8227" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="1728.125" y="2214.7339">PrimitiveCollection nullLong(long value)</text><ellipse cx="1716.6667" cy="2227.5675" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="1728.125" y="2234.4788">long nullLong()</text><ellipse cx="1716.6667" cy="2247.3124" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1728.125" y="2254.2236">short nullShort()</text><ellipse cx="1716.6667" cy="2267.0573" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="1728.125" y="2273.9685">PrimitiveCollection nullShort(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1706.25" x2="1936.4583" y1="1874.7406" y2="1874.7406"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1939.5833" y="1878.5502">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2000" x2="2230.2083" y1="1874.7406" y2="1874.7406"/><!--MD5=[203f237c31b1e3d74befd77fa38733d5]
class ShortIterable--><rect codeLine="319" fill="#282828" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="1438.5417" y="99.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="1438.5417" y="99.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="157.2917" x="1438.5417" y="122.5911"/><rect codeLine="319" fill="none" height="83.3781" id="ShortIterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="157.2917" x="1438.5417" y="99.5361"/><ellipse cx="1469.5313" cy="115.2303" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1466.9352,112.3922 L1466.9352,110.8053 L1472.3612,110.8053 L1472.3612,112.3922 L1470.5485,112.3922 L1470.5485,118.3309 L1472.3612,118.3309 L1472.3612,119.9178 L1466.9352,119.9178 L1466.9352,118.3309 L1468.748,118.3309 L1468.748,112.3922 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="1489.8438" y="119.9544">ShortIterable</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1439.5833" x2="1594.7917" y1="130.9245" y2="130.9245"/><ellipse cx="1450" cy="166.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="1461.4583" y="173.2056">ShortIterator iterator()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1439.5833" x2="1485.4167" y1="149.1302" y2="149.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1488.5417" y="152.9399">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1548.9583" x2="1594.7917" y1="149.1302" y2="149.1302"/><!--MD5=[84759b6a4a0e7dc54ddbdfd6c5cbe16d]
class ShortCollection--><rect codeLine="300" fill="#282828" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1365.625" y="1113.5986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1365.625" y="1113.5986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="303.125" x="1365.625" y="1136.6536"/><rect codeLine="300" fill="none" height="348.3948" id="ShortCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="303.125" x="1365.625" y="1113.5986"/><ellipse cx="1459.8958" cy="1129.2928" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1457.2998,1126.4547 L1457.2998,1124.8678 L1462.7258,1124.8678 L1462.7258,1126.4547 L1460.9131,1126.4547 L1460.9131,1132.3934 L1462.7258,1132.3934 L1462.7258,1133.9803 L1457.2998,1133.9803 L1457.2998,1132.3934 L1459.1125,1132.3934 L1459.1125,1126.4547 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="100" x="1482.8125" y="1134.0169">ShortCollection</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1366.6667" x2="1667.7083" y1="1144.987" y2="1144.987"/><ellipse cx="1377.0833" cy="1180.3569" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="1388.5417" y="1187.2681">boolean isNull(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1366.6667" x2="1490.625" y1="1163.1927" y2="1163.1927"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="1493.75" y="1167.0024">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1543.75" x2="1667.7083" y1="1163.1927" y2="1163.1927"/><ellipse cx="1377.0833" cy="1224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1388.5417" y="1230.9245">boolean add(short value)</text><ellipse cx="1377.0833" cy="1243.7581" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1388.5417" y="1250.6694">void addAll(short[] that)</text><ellipse cx="1377.0833" cy="1263.503" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="1388.5417" y="1270.4142">void addAll(List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1377.0833" cy="1283.2479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="1388.5417" y="1290.1591">boolean addAll(ShortCollection that)</text><ellipse cx="1377.0833" cy="1302.9928" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1388.5417" y="1309.904">void clear()</text><ellipse cx="1377.0833" cy="1322.7376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="1388.5417" y="1329.6488">boolean contains(short value)</text><ellipse cx="1377.0833" cy="1342.4825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="1388.5417" y="1349.3937">boolean containsAll(ShortCollection that)</text><ellipse cx="1377.0833" cy="1362.2274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1388.5417" y="1369.1386">boolean remove(short value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1366.6667" x2="1482.8125" y1="1206.8492" y2="1206.8492"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1485.9375" y="1210.6588">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1551.5625" x2="1667.7083" y1="1206.8492" y2="1206.8492"/><ellipse cx="1377.0833" cy="1405.8838" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1388.5417" y="1412.795">boolean hasNullShort()</text><ellipse cx="1377.0833" cy="1425.6287" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="1388.5417" y="1432.5399">PrimitiveCollection hasNullShort(boolean has)</text><ellipse cx="1377.0833" cy="1445.3735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1388.5417" y="1452.2847">short nullShort()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1366.6667" x2="1485.4167" y1="1388.7197" y2="1388.7197"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1488.5417" y="1392.5293">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1548.9583" x2="1667.7083" y1="1388.7197" y2="1388.7197"/><!--MD5=[0957e5949c955b260f994d31968b564f]
class ShortIterator--><rect codeLine="327" fill="#282828" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="2863.5417" y="1224.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="2863.5417" y="1224.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="2863.5417" y="1247.0703"/><rect codeLine="327" fill="none" height="127.0345" id="ShortIterator" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="2863.5417" y="1224.0153"/><ellipse cx="2878.125" cy="1239.7095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2875.529,1236.8713 L2875.529,1235.2844 L2880.955,1235.2844 L2880.955,1236.8713 L2879.1423,1236.8713 L2879.1423,1242.8101 L2880.955,1242.8101 L2880.955,1244.397 L2875.529,1244.397 L2875.529,1242.8101 L2877.3417,1242.8101 L2877.3417,1236.8713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="82.2917" x="2894.7917" y="1244.4336">ShortIterator</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2864.5833" x2="2982.2917" y1="1255.4036" y2="1255.4036"/><ellipse cx="2875" cy="1290.7735" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="2886.4583" y="1297.6847">int hash()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2864.5833" x2="2889.0625" y1="1273.6094" y2="1273.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2892.1875" y="1277.419">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2957.8125" x2="2982.2917" y1="1273.6094" y2="1273.6094"/><ellipse cx="2875" cy="1334.4299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="2886.4583" y="1341.3411">short next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2864.5833" x2="2892.7083" y1="1317.2658" y2="1317.2658"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="2895.8333" y="1321.0754">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2954.1667" x2="2982.2917" y1="1317.2658" y2="1317.2658"/><!--MD5=[56714951d1b791fb1e80b2485bae57e8]
reverse link ByteIterable to ByteCollection--><path codeLine="15" d="M158.8542,203.9424 C158.8542,373.8695 158.8542,853.359 158.8542,1113.4945 " fill="none" id="ByteIterable-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="151.5625,203.807,158.8542,182.9736,166.1458,203.807,151.5625,203.807" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0b7051d71ad7322712cc3c94ab7c5c23]
reverse link Sized to ByteCollection--><path codeLine="16" d="M907.4896,184.0361 C898.5938,200.6403 886,218.2445 869.2708,228.7028 C766.7292,292.8174 416.4375,208.0153 328.6458,291.2028 C106.125,502.0465 108.3854,889.2757 132.1667,1113.5257 " fill="none" id="Sized-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="900.9167,180.8903,916.4063,165.1611,914.1042,187.1195,900.9167,180.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c668582fb0bbd8bfbfd832d87dba6557]
reverse link NamedObject to ByteCollection--><path codeLine="17" d="M1032.1042,182.2445 C1018.2813,199.5465 999.8646,218.2028 978.6458,228.7028 C848.5833,293.0465 434.9375,192.4111 328.6458,291.2028 C103.9479,500.0465 107.1146,888.4736 131.6042,1113.359 " fill="none" id="NamedObject-backto-ByteCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1026.2813,177.8486,1044.5313,165.432,1038.0104,186.5153,1026.2813,177.8486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[be4189bee555086dfd22186048cd9c64]
reverse link PrimitiveIterator to ByteIterator--><path codeLine="44" d="M2478.3854,210.5049 C2447.4271,232.0049 2418.3542,258.7965 2399.4792,291.2028 C2219.3854,600.4215 2281.0313,1058.4007 2311.6042,1223.9528 " fill="none" id="PrimitiveIterator-backto-ByteIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2474.8229,204.1195,2496.2396,198.7861,2482.8229,216.3174,2474.8229,204.1195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[69a102e4ef76bdbb51c82ee5130226e8]
reverse link CharIterable to CharCollection--><path codeLine="56" d="M498.4375,203.9424 C498.4375,373.8695 498.4375,853.359 498.4375,1113.4945 " fill="none" id="CharIterable-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="491.1458,203.807,498.4375,182.9736,505.7292,203.807,491.1458,203.807" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8d8b2c0f025d7e2fcfe553841a78cff5]
reverse link Sized to CharCollection--><path codeLine="57" d="M905.6563,184.057 C896.6563,199.9945 884.4896,217.0882 869.2708,228.7028 C794.8958,285.4736 729.875,220.807 668.2292,291.2028 C468.1667,519.6924 461.125,894.7653 477.4792,1113.3799 " fill="none" id="Sized-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="899.25,180.5778,915.1979,165.3278,912.2396,187.2028,899.25,180.5778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[65ca880327180770198811fba8734651]
reverse link NamedObject to CharCollection--><path codeLine="58" d="M1030.8333,182.2028 C1017,199.0465 998.9271,217.3382 978.6458,228.7028 C855.875,297.5049 766.25,190.2236 668.2292,291.2028 C455.625,510.2132 453.6875,891.7653 474.1875,1113.4215 " fill="none" id="NamedObject-backto-CharCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1025.1563,177.6195,1043.625,165.5361,1036.7188,186.4945,1025.1563,177.6195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[930b0297c020590ece31bb036f841438]
reverse link PrimitiveIterator to CharIterator--><path codeLine="85" d="M2566,248.4632 C2560.3333,262.557 2555.2917,277.0257 2551.5625,291.2028 C2461.3542,634.1507 2466.7708,1064.7653 2472.5833,1223.7861 " fill="none" id="PrimitiveIterator-backto-CharIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2559.4792,245.1715,2574.375,228.8799,2572.8854,250.9007,2559.4792,245.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ecd9d493b55dc9e5254f2d7cb3c7b715]
reverse link IntIterable to IntCollection--><path codeLine="97" d="M783.8229,203.9424 C792.3229,373.8695 816.3333,853.359 829.3542,1113.4945 " fill="none" id="IntIterable-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="776.5313,204.1403,782.7708,182.9736,791.0938,203.4111,776.5313,204.1403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[05f6d8be8d7cc255aa1c170fd3779bde]
reverse link Sized to IntCollection--><path codeLine="98" d="M921.1354,186.5049 C909.6563,338.3695 871.4688,843.7757 851.0938,1113.4632 " fill="none" id="Sized-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="913.875,185.8486,922.7083,165.6195,928.4167,186.9424,913.875,185.8486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6aa7991f9933f8a141fab83286f1d9bb]
reverse link NamedObject to IntCollection--><path codeLine="99" d="M1042,185.4007 C1031.0104,214.8382 1017.0521,254.932 1007.8125,291.2028 C935.3542,575.5153 885.0625,913.5153 858.9271,1113.4736 " fill="none" id="NamedObject-backto-IntCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1035.3021,182.4945,1049.5313,165.6195,1048.9271,187.6924,1035.3021,182.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5d7c1f092975cdaccc08f11aacd6c3ff]
reverse link PrimitiveIterator to IntIterator--><path codeLine="126" d="M2621.3542,249.7653 C2621.3542,484.5986 2621.3542,1037.2236 2621.3542,1223.7549 " fill="none" id="PrimitiveIterator-backto-IntIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2614.0625,249.557,2621.3542,228.7236,2628.6458,249.557,2614.0625,249.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[99a1a794a2faca24057deee7c3059b9b]
reverse link LongIterable to LongCollection--><path codeLine="138" d="M1231.8021,203.9424 C1223.3021,373.8695 1199.2917,853.359 1186.2708,1113.4945 " fill="none" id="LongIterable-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1224.5313,203.4111,1232.8542,182.9736,1239.0938,204.1403,1224.5313,203.4111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2cef2c4491ed4d71f4d2be7dacead71f]
reverse link Sized to LongCollection--><path codeLine="139" d="M949.5313,183.307 C971.1875,219.432 1000.1563,269.5361 1007.8125,291.2028 C1105.9583,569.0882 1148.4271,911.2653 1166.0104,1113.432 " fill="none" id="Sized-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="943.2708,187.0361,938.7396,165.4424,955.75,179.5049,943.2708,187.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[72024a859d858f3d72e33fd452c82eed]
reverse link NamedObject to LongCollection--><path codeLine="140" d="M1063.4479,186.5049 C1079.2083,338.3695 1131.6563,843.7757 1159.6458,1113.4632 " fill="none" id="NamedObject-backto-LongCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1056.1771,187.0986,1061.2813,165.6195,1070.6875,185.5882,1056.1771,187.0986" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fb85c158faf951dd092a7714ff948653]
reverse link PrimitiveIterator to LongIterator--><path codeLine="167" d="M2676.6979,248.4632 C2682.3646,262.557 2687.4063,277.0361 2691.1458,291.2028 C2781.5417,634.1299 2776.6771,1064.7549 2771.0833,1223.7861 " fill="none" id="PrimitiveIterator-backto-LongIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2669.8021,250.9007,2668.3229,228.8799,2683.2188,245.1715,2669.8021,250.9007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[6964b292329025343416a63b44e8dd4a]
reverse link NamedObject to PrimitiveCollection--><path codeLine="176" d="M1085.6979,182.0778 C1099.5208,199.3382 1117.9375,218.0153 1139.0625,228.7028 C1248.4167,284.0049 1593.6042,211.8382 1686.9792,291.2028 C1693.1354,296.432 1699.1667,301.7965 1705.0625,307.2653 " fill="none" id="NamedObject-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1079.8021,186.3799,1073.2292,165.307,1091.5104,177.682,1079.8021,186.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[249a95afcf3fd0db8d938c1a937e0917]
reverse link Initializable to PrimitiveCollection--><path codeLine="177" d="M1785.9375,186.2861 C1790.1979,211.984 1796.1458,247.8799 1803.3021,291.0674 " fill="none" id="Initializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1778.7292,187.3695,1782.5208,165.6195,1793.1146,184.984,1778.7292,187.3695" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ede7db018844b8ab75d83c7efda35e58]
reverse link Sized to PrimitiveCollection--><path codeLine="178" d="M940.9792,184.5153 C949.6458,201.0674 962,218.5049 978.6458,228.7028 C1113.3958,311.234 1565.2813,190.4111 1686.9792,291.2028 C1693.0313,296.2132 1698.9583,301.3486 1704.7604,306.5882 " fill="none" id="Sized-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="934.2292,187.2757,932.1875,165.307,947.4896,181.2132,934.2292,187.2757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[00d9a0d278cb11797a10028af9812eab]
reverse link CompressibleCollection to PrimitiveCollection--><path codeLine="179" d="M1968.2292,186.6715 C1968.2292,212.359 1968.2292,248.0986 1968.2292,291.0674 " fill="none" id="CompressibleCollection-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1960.9375,186.4528,1968.2292,165.6195,1975.5208,186.4528,1960.9375,186.4528" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4348354899bfe3c9c2442766c3939315]
reverse link KryoSerializable to PrimitiveCollection--><path codeLine="180" d="M2164.5417,186.2861 C2159.9479,211.984 2153.5521,247.8799 2145.8438,291.0674 " fill="none" id="KryoSerializable-backto-PrimitiveCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2157.3854,184.8486,2168.2292,165.6195,2171.7396,187.4111,2157.3854,184.8486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[07d984cac69f335b5438c3d2f446f672]
reverse link ShortIterable to ShortCollection--><path codeLine="297" d="M1517.1875,203.9424 C1517.1875,373.8695 1517.1875,853.359 1517.1875,1113.4945 " fill="none" id="ShortIterable-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1509.8958,203.807,1517.1875,182.9736,1524.4792,203.807,1509.8958,203.807" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[316a2df0767b4920048c1c37a054c46f]
reverse link Sized to ShortCollection--><path codeLine="298" d="M941.5625,184.1924 C950.2917,200.5465 962.5313,217.9215 978.6458,228.7028 C1116.8125,321.1195 1229.7917,173.7236 1347.3958,291.2028 C1563.6563,507.2236 1564.0833,890.7549 1542.3646,1113.3695 " fill="none" id="Sized-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="934.9167,187.2132,932.625,165.2653,948.1146,180.9945,934.9167,187.2132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e04ba480b3c1548c8a8968ec4ad3662f]
reverse link NamedObject to ShortCollection--><path codeLine="299" d="M1087.6667,181.6715 C1101.5521,198.2549 1119.4583,216.484 1139.0625,228.7028 C1221.1146,279.8174 1283.3542,218.7965 1347.3958,291.2028 C1548.7396,518.859 1555.2396,894.6611 1538.4688,1113.5361 " fill="none" id="NamedObject-backto-ShortCollection" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1081.9271,186.1715,1074.7292,165.307,1093.375,177.1299,1081.9271,186.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fc03b24f0c6aea9d65390e93a567d4f1]
reverse link PrimitiveIterator to ShortIterator--><path codeLine="326" d="M2764.1563,209.3382 C2795.9271,231.0049 2825.9063,258.1611 2845.3125,291.2028 C3026.5938,599.8278 2966.25,1058.1715 2936.1354,1223.8799 " fill="none" id="PrimitiveIterator-backto-ShortIterator" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2759.9271,215.2965,2746.375,197.8695,2767.8333,203.0361,2759.9271,215.2965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e0ad9d76da4da0467be6a052236ff81e]
@startuml

    !include lexakai.theme
    
    title "Primitive Collections"
    
    interface Sized
    interface Initializable
    interface NamedObject
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Sized <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    KryoSerializable <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(Count childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, Count size)
        #byte[] newByteArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, Count size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why, Count size)
        #T[] newObjectArray(Object who, String why)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, Count size)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, Count size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(extension points)- -
        #Method onCompress(Method)
        - -(filesystem)- -
        +void copyConfiguration(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Collections"
    
    interface Sized
    interface Initializable
    interface NamedObject
    interface CompressibleCollection
    interface KryoSerializable
    
    interface ByteIterable
    interface NamedObject
    interface Sized
    ByteIterable <|- - ByteCollection
    Sized <|- - ByteCollection
    NamedObject <|- - ByteCollection
    interface ByteCollection
    {
        - -(checks)- -
        +boolean isNull(byte value)
        - -(collection)- -
        +boolean add(byte value)
        +boolean addAll(byte[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ByteIterable that)
        +void clear()
        +boolean contains(byte value)
        +boolean containsAll(ByteCollection that)
        +boolean remove(byte value)
        - -(primitive)- -
        +boolean hasNullByte()
        +PrimitiveCollection hasNullByte(boolean has)
        +byte nullByte()
    }
    
    interface ByteIterable
    {
        - -(primitive)- -
        +ByteIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ByteIterator
    interface ByteIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +byte next()
    }
    
    interface CharIterable
    interface NamedObject
    interface Sized
    CharIterable <|- - CharCollection
    Sized <|- - CharCollection
    NamedObject <|- - CharCollection
    interface CharCollection
    {
        - -(checks)- -
        +boolean isNull(char value)
        - -(collection)- -
        +boolean add(char value)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(char[] that)
        +boolean addAll(CharCollection that)
        +void clear()
        +boolean contains(char value)
        +boolean containsAll(CharCollection that)
        +boolean remove(char value)
        - -(primitive)- -
        +boolean hasNullChar()
        +PrimitiveCollection hasNullChar(boolean has)
        +char nullChar()
    }
    
    interface CharIterable
    {
        - -(primitive)- -
        +CharIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - CharIterator
    interface CharIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +char next()
    }
    
    interface IntIterable
    interface NamedObject
    interface Sized
    IntIterable <|- - IntCollection
    Sized <|- - IntCollection
    NamedObject <|- - IntCollection
    interface IntCollection
    {
        - -(checks)- -
        +boolean isNull(int value)
        - -(collection)- -
        +boolean add(int value)
        +boolean addAll(int[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(IntCollection that)
        +void clear()
        +boolean contains(int value)
        +boolean containsAll(IntCollection that)
        +boolean remove(int value)
        - -(primitive)- -
        +boolean hasNullInt()
        +PrimitiveCollection hasNullInt(boolean has)
        +int nullInt()
    }
    
    interface IntIterable
    {
        - -(primitive)- -
        +IntIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - IntIterator
    interface IntIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +int next()
    }
    
    interface LongIterable
    interface NamedObject
    interface Sized
    LongIterable <|- - LongCollection
    Sized <|- - LongCollection
    NamedObject <|- - LongCollection
    interface LongCollection
    {
        - -(checks)- -
        +boolean isNull(long value)
        - -(collection)- -
        +boolean add(long value)
        +boolean addAll(long[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(LongCollection that)
        +void clear()
        +boolean contains(long value)
        +boolean containsAll(LongCollection that)
        +boolean remove(long value)
        - -(primitive)- -
        +PrimitiveCollection hasNullLong(boolean has)
        +boolean hasNullLong()
        +long nullLong()
    }
    
    interface LongIterable
    {
        - -(primitive)- -
        +LongIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - LongIterator
    interface LongIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +long next()
    }
    
    NamedObject <|- - PrimitiveCollection
    Initializable <|- - PrimitiveCollection
    Sized <|- - PrimitiveCollection
    CompressibleCollection <|- - PrimitiveCollection
    KryoSerializable <|- - PrimitiveCollection
    abstract class PrimitiveCollection
    {
        - -(constructors)- -
        #PrimitiveCollection()
        #PrimitiveCollection(String)
        - -
        +int increasedCapacity(int size)
        - -(checks)- -
        +boolean isInitialized()
        +boolean isNull(byte value)
        +boolean isNull(char value)
        +boolean isNull(long value)
        +boolean isNull(short value)
        +boolean isNull(int value)
        #boolean ensureHasRoomFor(int increase)
        - -(collection)- -
        +Count capacity()
        +void clear()
        +void copyNullValues(PrimitiveCollection that)
        +Estimate initialChildCount()
        +int initialChildCountAsInt()
        +Estimate initialChildSize()
        +PrimitiveCollection initialChildSize(Count childSize)
        +PrimitiveCollection initialChildSize(int childSize)
        +int initialChildSizeAsInt()
        +PrimitiveCollection initialSize(Estimate initialSize)
        +Estimate initialSize()
        +PrimitiveCollection initialSize(int initialSize)
        +int initialSizeAsInt()
        +PrimitiveCollection maximumChildSize(Maximum maximumChildSize)
        +Maximum maximumChildSize()
        +PrimitiveCollection maximumChildSize(int maximumChildSize)
        +int maximumChildSizeAsInt()
        +PrimitiveCollection maximumSize(Maximum maximumSize)
        +PrimitiveCollection maximumSize(int maximumSize)
        +Maximum maximumSize()
        +int maximumSizeAsInt()
        +int nullIndex()
        #void clear(char[] values)
        #void clear(int[] values)
        #void clear(long[] values)
        #void clear(byte[] values)
        #void clear(short[] values)
        #void clear(String[] values)
        #void clear(Object[] values)
        #void decreaseSize(int count)
        #void ensureIndexInRange(int index)
        #int increaseSize(int count)
        #int incrementSize()
        #byte[] newByteArray(Object who, String why)
        #byte[] newByteArray(Object who, String why, Count size)
        #byte[] newByteArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why)
        #char[] newCharArray(Object who, String why, int size)
        #char[] newCharArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why)
        #int[] newIntArray(Object who, String why, Count size)
        #int[] newIntArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, int size)
        #long[] newLongArray(Object who, String why, Count size)
        #long[] newLongArray(Object who, String why)
        #T[] newObjectArray(Object who, String why, int size)
        #T[] newObjectArray(Object who, String why, Count size)
        #T[] newObjectArray(Object who, String why)
        #short[] newShortArray(Object who, String why)
        #short[] newShortArray(Object who, String why, Count size)
        #short[] newShortArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why, Count size)
        #String[] newStringArray(Object who, String why, int size)
        #String[] newStringArray(Object who, String why)
        #void size(int size)
        - -(extension points)- -
        #Method onCompress(Method)
        - -(filesystem)- -
        +void copyConfiguration(PrimitiveCollection that)
        #void copy(PrimitiveCollection that)
        - -(functional)- -
        #T allocated(Object allocator, String why, T allocated, int initialSize, int estimatedChildSize)
        #T allocated(Object who, String why, T what, int initialSize)
        - -(primitive)- -
        +PrimitiveCollection hasNullByte(boolean value)
        +boolean hasNullByte()
        +PrimitiveCollection hasNullChar(boolean value)
        +boolean hasNullChar()
        +PrimitiveCollection hasNullInt(boolean value)
        +boolean hasNullInt()
        +boolean hasNullLong()
        +PrimitiveCollection hasNullLong(boolean value)
        +PrimitiveCollection hasNullShort(boolean value)
        +boolean hasNullShort()
        +byte nullByte()
        +PrimitiveCollection nullByte(byte value)
        +char nullChar()
        +PrimitiveCollection nullChar(char value)
        +PrimitiveCollection nullInt(int value)
        +int nullInt()
        +PrimitiveCollection nullLong(long value)
        +long nullLong()
        +short nullShort()
        +PrimitiveCollection nullShort(short value)
    }
    
    interface PrimitiveIterator
    {
        - -
        +boolean identical(PrimitiveIterator that)
        - -(collection)- -
        +int hashValue()
        - -(iteration)- -
        +boolean hasNext()
        +long nextLong()
    }
    
    interface NamedObject
    interface ShortIterable
    interface Sized
    ShortIterable <|- - ShortCollection
    Sized <|- - ShortCollection
    NamedObject <|- - ShortCollection
    interface ShortCollection
    {
        - -(checks)- -
        +boolean isNull(short value)
        - -(collection)- -
        +boolean add(short value)
        +void addAll(short[] that)
        +void addAll(List<? extends Quantizable> values)
        +boolean addAll(ShortCollection that)
        +void clear()
        +boolean contains(short value)
        +boolean containsAll(ShortCollection that)
        +boolean remove(short value)
        - -(primitive)- -
        +boolean hasNullShort()
        +PrimitiveCollection hasNullShort(boolean has)
        +short nullShort()
    }
    
    interface ShortIterable
    {
        - -(primitive)- -
        +ShortIterator iterator()
    }
    
    interface PrimitiveIterator
    PrimitiveIterator <|- - ShortIterator
    interface ShortIterator
    {
        - -(collection)- -
        +int hash()
        - -(iteration)- -
        +short next()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>