@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.microservice"
    
    abstract BaseComponent
    
    interface Startable
    interface GsonFactorySource
    interface Comparable
    interface Stoppable
    
    Application <|-- Microservice
    GsonFactorySource <|-- Microservice
    Startable <|-- Microservice
    Stoppable <|-- Microservice
    Microservice --> MicroserviceMetadata : "has"
    Microservice --> MicroserviceSettings : "has"
    abstract class Microservice<Member>
    {
        --(constructors)--
        +Microservice(Project)
        --
        +MicroserviceCluster<Member> cluster()
        +MicroserviceClusterMember<Member> leader()
        +MicroserviceSettings settings()
        +WebApplication webApplication()
        #void onLeave(MicroserviceClusterMember<Member>)
        #void onMountJettyPlugins(JettyServer)
        --(checks)--
        +boolean isClustered()
        +boolean isLeader()
        --(extension points)--
        +MicroserviceWebApplication onNewWebApplication()
        #MicroserviceClusterMember<Member> onNewMember()
        --(filesystem)--
        #ResourceFolder openApiAssetsFolder()
        #ResourceFolder staticAssetsFolder()
        --(lifecycle)--
        +void onInitialize()
        #void onJoin(MicroserviceClusterMember<Member>)
        --(metadata)--
        +MicroserviceMetadata metadata()
        --(service)--
        +MicroserviceGrpcService grpcService()
        +MicroserviceLambdaService lambdaService()
        +MicroserviceGrpcService onNewGrpcService()
        +MicroserviceLambdaService onNewLambdaService()
        +MicroserviceRestService onNewRestService()
        +MicroserviceRestService restService()
    }
    
    BaseComponent <|-- MicroserviceCluster
    class MicroserviceCluster<Member>
    {
        --
        +MicroserviceClusterMember<Member> leader()
        +void leave()
        +MicroserviceClusterMember<Member> thisMember()
        #void onLeave(MicroserviceClusterMember<Member>)
        --(collection)--
        +ObjectList<MicroserviceClusterMember<Member>> members()
        --(lifecycle)--
        +boolean join(MicroserviceClusterMember<Member>)
        #void onJoin(MicroserviceClusterMember<Member>)
        --(read)--
        +boolean loadMembers()
    }
    
    Comparable <|-- MicroserviceClusterMember
    class MicroserviceClusterMember<Data>
    {
        --(constructors)--
        +MicroserviceClusterMember(Data)
        +MicroserviceClusterMember(Host, int, int, Data)
        --
        +Data data()
        +void elect(boolean elected)
        --(checks)--
        +boolean isLeader()
        +boolean isThis()
        --(identity)--
        +String identifier()
        +int processIdentifier()
        --(network)--
        +Host host()
    }
    
    class MicroserviceMetadata
    {
        --(constructors)--
        #MicroserviceMetadata(MicroserviceMetadata)
        +MicroserviceMetadata()
        --
        +String description()
        --(functional)--
        +MicroserviceMetadata withDescription(String description)
        +MicroserviceMetadata withName(String name)
        +MicroserviceMetadata withVersion(Version)
        --(identity)--
        +Version version()
        --(naming)--
        +String name()
    }
    
    Project <|-- MicroserviceProject
    class MicroserviceProject
    {
    }
    
    class MicroserviceSettings
    {
        --
        +MicroserviceSettings server(boolean server)
        --(checks)--
        +boolean isServer()
        --(network)--
        +int grpcPort()
        +MicroserviceSettings grpcPort(int grpcPort)
        +int port()
        +MicroserviceSettings port(int port)
    }
    
@enduml

