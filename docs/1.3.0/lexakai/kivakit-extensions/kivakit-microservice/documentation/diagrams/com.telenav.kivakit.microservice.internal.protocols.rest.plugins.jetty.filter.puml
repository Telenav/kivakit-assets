@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.microservice.internal.protocols.rest.plugins.jetty.filter"
    
    interface ProblemReportingTrait
    interface Filter
    interface ComponentMixin
    
    Filter <|-- JettyMicroservletFilter
    ComponentMixin <|-- JettyMicroservletFilter
    ProblemReportingTrait <|-- JettyMicroservletFilter
    JettyMicroservletFilter --> JettyMicroservletRequestCycle : "creates"
    JettyMicroservletFilter "1" o-- "many" Microservlet : "mounts on paths"
    JettyMicroservletFilter o-- MicroserviceRestService
    class JettyMicroservletFilter
    {
        --(constructors)--
        +JettyMicroservletFilter(MicroserviceRestService)
        --
        +Microservlet<?,?> microservlet(MicroservletRestPath)
        +void mount(MicroservletRestPath, Microservlet<?,?>)
        --(collection)--
        +ObjectList<Microservlet<?,?>> microservlets()
        --(filtering)--
        +^void doFilter(ServletRequest, ServletResponse, FilterChain)
        --(path)--
        +Set<MicroservletRestPath> paths()
        --(service)--
        +MicroserviceRestService restApplication()
    }
    
    FilterHolder <|-- JettyMicroservletFilterHolder
    ComponentMixin <|-- JettyMicroservletFilterHolder
    JettyMicroservletFilterHolder o-- JettyMicroservletFilter
    class JettyMicroservletFilterHolder
    {
        --(constructors)--
        +JettyMicroservletFilterHolder(MicroserviceRestService)
        --
        +void mount(MicroservletRestPath, Microservlet<?,?>)
        --(filtering)--
        +JettyMicroservletFilter filter()
    }
    
    class JettyMicroservletFilter.ResolvedMicroservlet
    {
    }
    
@enduml

