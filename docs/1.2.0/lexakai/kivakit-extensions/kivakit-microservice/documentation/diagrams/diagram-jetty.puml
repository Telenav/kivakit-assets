@startuml

    !include lexakai.theme
    
    title "Jetty Microservice Plugin"
    
    abstract BaseComponent
    abstract BaseJettyFilterPlugin
    abstract BaseMicroservletRequest
    
    interface ProblemReportingTrait
    interface Filter
    interface ComponentMixin
    
    BaseComponent <|-- JettyMicroserviceResponse
    JettyMicroserviceResponse o-- JettyMicroservletRequestCycle
    JettyMicroserviceResponse o-- MicroservletErrorResponse
    class JettyMicroserviceResponse
    {
        --(constructors)--
        +JettyMicroserviceResponse(JettyMicroservletRequestCycle, HttpServletResponse)
        --(identity)--
        +Version version()
        --(messaging)--
        +Problem problem(int status, String text, Object... arguments)
        +Problem problem(int status, Throwable exception, String text, Object... arguments)
        --(status)--
        +void status(int status)
        +int status()
        --(write)--
        +void writeObject(MicroservletResponse)
    }
    
    Filter <|-- JettyMicroservletFilter
    ComponentMixin <|-- JettyMicroservletFilter
    ProblemReportingTrait <|-- JettyMicroservletFilter
    JettyMicroservletFilter --> JettyMicroservletRequestCycle : "creates"
    JettyMicroservletFilter "1" o-- "many" Microservlet : "mounts on paths"
    JettyMicroservletFilter o-- MicroserviceRestService
    class JettyMicroservletFilter
    {
        --(constructors)--
        +JettyMicroservletFilter(MicroserviceRestService)
        --
        +Microservlet<?,?> microservlet(MicroservletRestPath)
        +void mount(MicroservletRestPath, Microservlet<?,?>)
        --(collection)--
        +ObjectList<Microservlet<?,?>> microservlets()
        --(filtering)--
        +^void doFilter(ServletRequest, ServletResponse, FilterChain)
        --(path)--
        +Set<MicroservletRestPath> paths()
        --(service)--
        +MicroserviceRestService restApplication()
    }
    
    FilterHolder <|-- JettyMicroservletFilterHolder
    ComponentMixin <|-- JettyMicroservletFilterHolder
    JettyMicroservletFilterHolder o-- JettyMicroservletFilter
    class JettyMicroservletFilterHolder
    {
        --(constructors)--
        +JettyMicroservletFilterHolder(MicroserviceRestService)
        --
        +void mount(MicroservletRestPath, Microservlet<?,?>)
        --(filtering)--
        +JettyMicroservletFilter filter()
    }
    
    BaseComponent <|-- JettyMicroservletRequest
    ProblemReportingTrait <|-- JettyMicroservletRequest
    JettyMicroservletRequest o-- JettyMicroservletRequestCycle
    class JettyMicroservletRequest
    {
        --(constructors)--
        +JettyMicroservletRequest(JettyMicroservletRequestCycle, HttpServletRequest)
        --(checks)--
        +boolean hasBody()
        --(collection)--
        +PropertyMap parameters()
        +PropertyMap parameters(FilePath)
        --(filesystem)--
        +FilePath path()
        --(identity)--
        +Version version()
        --(read)--
        +T readObject(Class<T> requestType)
    }
    
    BaseComponent <|-- JettyMicroservletRequestCycle
    ProblemReportingTrait <|-- JettyMicroservletRequestCycle
    JettyMicroservletRequestCycle o-- JettyMicroservletRequest
    JettyMicroservletRequestCycle o-- JettyMicroserviceResponse
    class JettyMicroservletRequestCycle
    {
        --(constructors)--
        +JettyMicroservletRequestCycle(MicroserviceRestService, HttpServletRequest, HttpServletResponse)
        --
        +void attach(Microservlet<?,?>)
        +void attach(JettyMicroservletRequestCycle)
        +JettyMicroservletRequestCycle cycle()
        +void detach()
        +Gson gson()
        +JettyMicroservletRequest request()
        +Microservlet<?,?> servlet()
        --(service)--
        +MicroserviceRestService application()
    }
    
    BaseMicroservletRequest <|-- JettyOpenApiRequest
    class JettyOpenApiRequest
    {
    }
    
    BaseJettyFilterPlugin <|-- MicroservletJettyFilterPlugin
    MicroservletJettyFilterPlugin o-- JettyMicroservletFilterHolder
    class MicroservletJettyFilterPlugin
    {
        --(constructors)--
        +MicroservletJettyFilterPlugin(MicroserviceRestService)
        --
        +void mount(MicroservletRestPath, Microservlet<?,?>)
    }
    
@enduml

