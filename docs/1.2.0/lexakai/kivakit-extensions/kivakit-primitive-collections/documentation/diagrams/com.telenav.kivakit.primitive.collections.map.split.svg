<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="425px" preserveAspectRatio="none" style="width:1154px;height:425px;background:#333333;" version="1.1" viewBox="0 0 1154 425" width="1154.1667px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="525" x="307.2917" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="502.0833" x="318.75" y="30.5583">com.telenav.kivakit.primitive.collections.map.split</text><!--MD5=[aff4b5caafd4910c5c8c1fb6650f9b6b]
class PrimitiveScalarMap--><rect codeLine="6" fill="#282828" height="48.055" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="404.1667" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="404.1667" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="404.1667" y="76.7578"/><rect codeLine="6" fill="none" height="48.055" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="404.1667" y="53.7028"/><ellipse cx="418.75" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M416.154,66.5588 L416.154,64.9719 L421.58,64.9719 L421.58,66.5588 L419.7673,66.5588 L419.7673,72.4976 L421.58,72.4976 L421.58,74.0845 L416.154,74.0845 L416.154,72.4976 L417.9667,72.4976 L417.9667,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="121.875" x="435.4167" y="74.1211">PrimitiveScalarMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="405.2083" x2="562.5" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="405.2083" x2="562.5" y1="93.4245" y2="93.4245"/><!--MD5=[7570133d8164067c1a3a4c75d824a8d3]
class SplitPrimitiveMap--><rect fill="#282828" height="48.055" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="151.0417" x="625" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="151.0417" x="625" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="151.0417" x="625" y="76.7578"/><rect fill="none" height="48.055" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="151.0417" x="625" y="53.7028"/><ellipse cx="639.5833" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M641.4937,73.822 Q641.0665,74.0417 640.5965,74.1516 Q640.1265,74.2615 639.6077,74.2615 Q637.7645,74.2615 636.794,73.0469 Q635.8236,71.8323 635.8236,69.5374 Q635.8236,67.2363 636.794,66.0217 Q637.7645,64.8071 639.6077,64.8071 Q640.1265,64.8071 640.6026,64.917 Q641.0787,65.0269 641.4937,65.2466 L641.4937,67.2485 Q641.0299,66.8213 640.5935,66.6229 Q640.1571,66.4246 639.6932,66.4246 Q638.7044,66.4246 638.2009,67.2089 Q637.6973,67.9932 637.6973,69.5374 Q637.6973,71.0754 638.2009,71.8597 Q638.7044,72.644 639.6932,72.644 Q640.1571,72.644 640.5935,72.4457 Q641.0299,72.2473 641.4937,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="113.5417" x="656.25" y="74.1211">SplitPrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="626.0417" x2="775" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="626.0417" x2="775" y1="93.4245" y2="93.4245"/><!--MD5=[ab32211fbb9f0f10fe3c4d06d29fe61f]
class SplitIntToIntMap--><rect codeLine="10" fill="#282828" height="253.8371" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="604.6875" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="604.6875" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="604.6875" y="187.1745"/><rect codeLine="10" fill="none" height="253.8371" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="604.6875" y="164.1195"/><ellipse cx="664.0625" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M665.9729,184.2387 Q665.5457,184.4584 665.0757,184.5683 Q664.6057,184.6781 664.0869,184.6781 Q662.2437,184.6781 661.2732,183.4635 Q660.3027,182.2489 660.3027,179.954 Q660.3027,177.653 661.2732,176.4384 Q662.2437,175.2238 664.0869,175.2238 Q664.6057,175.2238 665.0818,175.3337 Q665.5579,175.4435 665.9729,175.6632 L665.9729,177.6652 Q665.509,177.238 665.0726,177.0396 Q664.6362,176.8412 664.1724,176.8412 Q663.1836,176.8412 662.6801,177.6255 Q662.1765,178.4098 662.1765,179.954 Q662.1765,181.4921 662.6801,182.2764 Q663.1836,183.0607 664.1724,183.0607 Q664.6362,183.0607 665.0726,182.8623 Q665.509,182.664 665.9729,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="108.3333" x="686.9792" y="184.5378">SplitIntToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="605.7292" x2="845.3125" y1="195.5078" y2="195.5078"/><ellipse cx="616.1458" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="627.6042" y="237.7889">SplitIntToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="605.7292" x2="681.7708" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="684.8958" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="769.2708" x2="845.3125" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="605.7292" x2="845.3125" y1="247.4976" y2="247.4976"/><ellipse cx="616.1458" cy="258.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="627.6042" y="265.8671">void entries(IntToIntMap.EntryVisitor)</text><ellipse cx="616.1458" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="627.6042" y="285.612">int get(int key)</text><ellipse cx="616.1458" cy="322.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="627.6042" y="329.2684">boolean containsKey(int key)</text><ellipse cx="616.1458" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="627.6042" y="349.0133">IntIterator keys()</text><ellipse cx="616.1458" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="627.6042" y="368.7581">void put(int key, int value)</text><ellipse cx="616.1458" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="627.6042" y="388.503">boolean remove(int key)</text><ellipse cx="616.1458" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="627.6042" y="408.2479">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="605.7292" x2="691.1458" y1="305.1931" y2="305.1931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="694.2708" y="309.0027">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="759.8958" x2="845.3125" y1="305.1931" y2="305.1931"/><!--MD5=[dfe124e4b4908e38b60aed9b25001332]
class SplitLongToByteMap--><rect codeLine="27" fill="#282828" height="253.8371" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="883.3333" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="883.3333" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="883.3333" y="187.1745"/><rect codeLine="27" fill="none" height="253.8371" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="883.3333" y="164.1195"/><ellipse cx="941.1458" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M943.0562,184.2387 Q942.629,184.4584 942.159,184.5683 Q941.689,184.6781 941.1702,184.6781 Q939.327,184.6781 938.3565,183.4635 Q937.3861,182.2489 937.3861,179.954 Q937.3861,177.653 938.3565,176.4384 Q939.327,175.2238 941.1702,175.2238 Q941.689,175.2238 942.1651,175.3337 Q942.6412,175.4435 943.0562,175.6632 L943.0562,177.6652 Q942.5924,177.238 942.156,177.0396 Q941.7196,176.8412 941.2557,176.8412 Q940.2669,176.8412 939.7634,177.6255 Q939.2598,178.4098 939.2598,179.954 Q939.2598,181.4921 939.7634,182.2764 Q940.2669,183.0607 941.2557,183.0607 Q941.7196,183.0607 942.156,182.8623 Q942.5924,182.664 943.0562,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="964.0625" y="184.5378">SplitLongToByteMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="884.375" x2="1145.8333" y1="195.5078" y2="195.5078"/><ellipse cx="894.7917" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="906.25" y="237.7889">SplitLongToByteMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="884.375" x2="971.3542" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="974.4792" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1058.8542" x2="1145.8333" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="884.375" x2="1145.8333" y1="247.4976" y2="247.4976"/><ellipse cx="894.7917" cy="258.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="906.25" y="265.8671">void entries(LongToByteMap.EntryVisitor)</text><ellipse cx="894.7917" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="906.25" y="285.612">byte get(long key)</text><ellipse cx="894.7917" cy="322.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="906.25" y="329.2684">boolean containsKey(long key)</text><ellipse cx="894.7917" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="906.25" y="349.0133">LongIterator keys()</text><ellipse cx="894.7917" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="906.25" y="368.7581">void put(long key, byte value)</text><ellipse cx="894.7917" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="906.25" y="388.503">boolean remove(long key)</text><ellipse cx="894.7917" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="906.25" y="408.2479">ByteIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="884.375" x2="980.7292" y1="305.1931" y2="305.1931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="983.8542" y="309.0027">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1049.4792" x2="1145.8333" y1="305.1931" y2="305.1931"/><!--MD5=[ef14bcef69138822e1b48ba4f12b63f3]
class SplitLongToIntMap--><rect codeLine="44" fill="#282828" height="253.8371" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="7.2917" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="7.2917" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="7.2917" y="187.1745"/><rect codeLine="44" fill="none" height="253.8371" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="7.2917" y="164.1195"/><ellipse cx="66.1458" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M68.0562,184.2387 Q67.629,184.4584 67.159,184.5683 Q66.689,184.6781 66.1702,184.6781 Q64.327,184.6781 63.3565,183.4635 Q62.3861,182.2489 62.3861,179.954 Q62.3861,177.653 63.3565,176.4384 Q64.327,175.2238 66.1702,175.2238 Q66.689,175.2238 67.1651,175.3337 Q67.6412,175.4435 68.0562,175.6632 L68.0562,177.6652 Q67.5924,177.238 67.156,177.0396 Q66.7196,176.8412 66.2557,176.8412 Q65.2669,176.8412 64.7634,177.6255 Q64.2598,178.4098 64.2598,179.954 Q64.2598,181.4921 64.7634,182.2764 Q65.2669,183.0607 66.2557,183.0607 Q66.7196,183.0607 67.156,182.8623 Q67.5924,182.664 68.0562,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="89.0625" y="184.5378">SplitLongToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="261.4583" y1="195.5078" y2="195.5078"/><ellipse cx="18.75" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="30.2083" y="237.7889">SplitLongToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="91.1458" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="94.2708" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="178.6458" x2="261.4583" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="261.4583" y1="247.4976" y2="247.4976"/><ellipse cx="18.75" cy="258.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="30.2083" y="265.8671">void entries(LongToIntMap.EntryVisitor)</text><ellipse cx="18.75" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="30.2083" y="285.612">int get(long key)</text><ellipse cx="18.75" cy="322.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="30.2083" y="329.2684">boolean containsKey(long key)</text><ellipse cx="18.75" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="30.2083" y="349.0133">LongIterator keys()</text><ellipse cx="18.75" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="30.2083" y="368.7581">void put(long key, int value)</text><ellipse cx="18.75" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="30.2083" y="388.503">boolean remove(long key)</text><ellipse cx="18.75" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="30.2083" y="408.2479">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="100.5208" y1="305.1931" y2="305.1931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="103.6458" y="309.0027">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="169.2708" x2="261.4583" y1="305.1931" y2="305.1931"/><!--MD5=[52afe792c50e067479042a27d2114020]
class SplitLongToLongMap--><rect codeLine="61" fill="#282828" height="253.8371" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="299.4792" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="299.4792" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="299.4792" y="187.1745"/><rect codeLine="61" fill="none" height="253.8371" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="299.4792" y="164.1195"/><ellipse cx="357.8125" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M359.7229,184.2387 Q359.2957,184.4584 358.8257,184.5683 Q358.3557,184.6781 357.8369,184.6781 Q355.9937,184.6781 355.0232,183.4635 Q354.0527,182.2489 354.0527,179.954 Q354.0527,177.653 355.0232,176.4384 Q355.9937,175.2238 357.8369,175.2238 Q358.3557,175.2238 358.8318,175.3337 Q359.3079,175.4435 359.7229,175.6632 L359.7229,177.6652 Q359.259,177.238 358.8226,177.0396 Q358.3862,176.8412 357.9224,176.8412 Q356.9336,176.8412 356.4301,177.6255 Q355.9265,178.4098 355.9265,179.954 Q355.9265,181.4921 356.4301,182.2764 Q356.9336,183.0607 357.9224,183.0607 Q358.3862,183.0607 358.8226,182.8623 Q359.259,182.664 359.7229,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="137.5" x="380.7292" y="184.5378">SplitLongToLongMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="300.5208" x2="567.1875" y1="195.5078" y2="195.5078"/><ellipse cx="310.9375" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="322.3958" y="237.7889">SplitLongToLongMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="300.5208" x2="390.1042" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="393.2292" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="477.6042" x2="567.1875" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="300.5208" x2="567.1875" y1="247.4976" y2="247.4976"/><ellipse cx="310.9375" cy="258.9559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="322.3958" y="265.8671">void entries(LongToLongMap.EntryVisitor)</text><ellipse cx="310.9375" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="322.3958" y="285.612">long get(long key)</text><ellipse cx="310.9375" cy="322.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="322.3958" y="329.2684">boolean containsKey(long key)</text><ellipse cx="310.9375" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="322.3958" y="349.0133">LongIterator keys()</text><ellipse cx="310.9375" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="322.3958" y="368.7581">void put(long key, long value)</text><ellipse cx="310.9375" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="322.3958" y="388.503">boolean remove(long key)</text><ellipse cx="310.9375" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="322.3958" y="408.2479">LongIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="300.5208" x2="399.4792" y1="305.1931" y2="305.1931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="402.6042" y="309.0027">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="468.2292" x2="567.1875" y1="305.1931" y2="305.1931"/><!--MD5=[2dbf538002e9ad59efd038bad64db3a2]
reverse link SplitPrimitiveMap to SplitIntToIntMap--><path codeLine="8" d="M705.6979,122.5361 C707.1771,134.9632 708.8542,149.1507 710.5938,163.8903 " fill="none" id="SplitPrimitiveMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="698.4479,123.2757,703.2396,101.734,712.9271,121.5674,698.4479,123.2757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9b8b15e161c7f422a47b215cbe12e445]
reverse link PrimitiveScalarMap to SplitIntToIntMap--><path codeLine="9" d="M528.9792,115.3174 C547.1563,130.2653 568.2188,147.8382 586.9792,164.1195 C592.75,169.1299 598.625,174.2861 604.5417,179.5049 " fill="none" id="PrimitiveScalarMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="524.1146,120.7549,512.6042,101.9215,533.3438,109.4632,524.1146,120.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[42a18a6fd1c762375d2c47fe1d73e6dd]
reverse link SplitPrimitiveMap to SplitLongToByteMap--><path codeLine="25" d="M770.7188,110.8695 C800.6563,125.6715 835.4583,144.3174 865.1042,164.1195 C871.0417,168.0882 877.0208,172.2549 882.9792,176.557 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="767.4167,117.3799,751.8438,101.734,773.7708,104.2549,767.4167,117.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7f4d3046b89bb9ae161467daade763f4]
reverse link PrimitiveScalarMap to SplitLongToByteMap--><path codeLine="26" d="M584.0625,98.5882 C688.3542,119.6924 839.9792,151.682 865.1042,164.1195 C871.1979,167.1403 877.2604,170.4528 883.25,174.0049 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="582.5417,105.7236,563.5625,94.4528,585.4271,91.4215,582.5417,105.7236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8447b494efe3cef70e5d6b1743be066c]
reverse link SplitPrimitiveMap to SplitLongToIntMap--><path codeLine="42" d="M604.3229,97.7028 C482.9688,121.7653 289.0729,160.5465 281.7708,164.1195 C275.2813,167.2965 268.8438,170.8278 262.5,174.6299 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="603.125,90.5049,624.9792,93.609,605.9583,104.8174,603.125,90.5049" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2a36385a340796500f8d19ec27c5a970]
reverse link PrimitiveScalarMap to SplitLongToIntMap--><path codeLine="43" d="M395.6563,109.1195 C359.1458,123.432 317.1563,142.2028 281.7708,164.1195 C275.3438,168.0986 268.9167,172.359 262.5208,176.807 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="393.2396,102.2445,415.3021,101.6299,398.4375,115.8695,393.2396,102.2445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d0a1b7ac5b8eda5e2aa3281b0eb70717]
reverse link SplitPrimitiveMap to SplitLongToLongMap--><path codeLine="59" d="M652.1354,114.3799 C631.8542,129.5153 608.1146,147.484 586.9792,164.1195 C580.8958,168.9111 574.6875,173.8382 568.4479,178.8278 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="647.8438,108.484,668.9167,101.9007,656.5417,120.182,647.8438,108.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[47c292327a2f38ddd5846813bb5c62d1]
reverse link PrimitiveScalarMap to SplitLongToLongMap--><path codeLine="60" d="M473.6042,122.0674 C470.6354,134.5986 467.2396,148.9632 463.7083,163.8903 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="466.5208,120.3278,478.4063,101.734,480.7083,123.6924,466.5208,120.3278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d68cfb2e076d9335eeae4aa7f29d5c0f]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.primitive.collections.map.split"
    
    interface PrimitiveScalarMap
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.primitive.collections.map.split"
    
    interface PrimitiveScalarMap
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>