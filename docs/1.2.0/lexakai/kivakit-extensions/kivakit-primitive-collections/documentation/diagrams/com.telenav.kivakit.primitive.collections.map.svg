<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1333.3333px" preserveAspectRatio="none" style="width:1287px;height:1333px;background:#333333;" version="1.1" viewBox="0 0 1287 1333" width="1287.5px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="475" x="399.2188" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="452.0833" x="410.6771" y="30.5583">com.telenav.kivakit.primitive.collections.map</text><!--MD5=[461ead75c8f34a287020110dfde66e72]
cluster PrimitiveMap--><polygon fill="#333333" points="1079.6875,85.9945,1176.5625,85.9945,1183.8542,113.2161,1270.3125,113.2161,1270.3125,207.8695,1079.6875,207.8695,1079.6875,85.9945" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="1079.6875" x2="1183.8542" y1="113.2161" y2="113.2161"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="1086.9792" y="103.2878">PrimitiveMap</text><!--MD5=[1339e61574b4e6ec7714144f68ea13bf]
class PrimitiveMap.MapToString--><rect codeLine="30" fill="#282828" height="48.055" id="PrimitiveMap.MapToString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="1125" y="134.9528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="1125" y="134.9528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="119.7917" x="1125" y="158.0078"/><rect codeLine="30" fill="none" height="48.055" id="PrimitiveMap.MapToString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="119.7917" x="1125" y="134.9528"/><ellipse cx="1139.5833" cy="150.647" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1136.9873,147.8088 L1136.9873,146.2219 L1142.4133,146.2219 L1142.4133,147.8088 L1140.6006,147.8088 L1140.6006,153.7476 L1142.4133,153.7476 L1142.4133,155.3345 L1136.9873,155.3345 L1136.9873,153.7476 L1138.8,153.7476 L1138.8,147.8088 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="82.2917" x="1156.25" y="155.3711">MapToString</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1126.0417" x2="1243.75" y1="166.3411" y2="166.3411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1126.0417" x2="1243.75" y1="174.6745" y2="174.6745"/><!--MD5=[671a1279844fa3fe982a569b5ebd1ae8]
class HashingStrategy--><rect codeLine="18" fill="#282828" height="210.1807" id="HashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="278.125" x="93.75" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="278.125" x="93.75" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="278.125" x="93.75" y="76.7578"/><rect codeLine="18" fill="none" height="210.1807" id="HashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="278.125" x="93.75" y="53.7028"/><ellipse cx="172.3958" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M169.7998,66.5588 L169.7998,64.9719 L175.2258,64.9719 L175.2258,66.5588 L173.4131,66.5588 L173.4131,72.4976 L175.2258,72.4976 L175.2258,74.0845 L169.7998,74.0845 L169.7998,72.4976 L171.6125,72.4976 L171.6125,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="106.25" x="195.3125" y="74.1211">HashingStrategy</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="94.7917" x2="370.8333" y1="85.0911" y2="85.0911"/><ellipse cx="105.2083" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="116.6667" y="127.3722">Count rehashThreshold()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="94.7917" x2="198.4375" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="201.5625" y="107.1065">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="267.1875" x2="370.8333" y1="103.2969" y2="103.2969"/><ellipse cx="105.2083" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="116.6667" y="171.0286">Estimate recommendedSize()</text><ellipse cx="105.2083" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="245.8333" x="116.6667" y="190.7735">HashingStrategy withCapacity(Estimate size)</text><ellipse cx="105.2083" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="116.6667" y="210.5184">HashingStrategy withIncreasedCapacity()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="94.7917" x2="197.3958" y1="146.9533" y2="146.9533"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="200.5208" y="150.7629">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="268.2292" x2="370.8333" y1="146.9533" y2="146.9533"/><ellipse cx="105.2083" cy="247.2636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="116.6667" y="254.1748">Percent maximumOccupancy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="94.7917" x2="211.4583" y1="230.0995" y2="230.0995"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="214.5833" y="233.9091">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="254.1667" x2="370.8333" y1="230.0995" y2="230.0995"/><!--MD5=[b463c1a193e15eab4d9aa79d3e80d632]
class DefaultHashingStrategy--><rect codeLine="9" fill="#282828" height="131.2012" id="DefaultHashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="451.0417" x="7.2917" y="678.182"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="451.0417" x="7.2917" y="678.182"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="451.0417" x="7.2917" y="701.237"/><rect codeLine="9" fill="none" height="131.2012" id="DefaultHashingStrategy" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="451.0417" x="7.2917" y="678.182"/><ellipse cx="148.4375" cy="693.8761" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M150.3479,698.3012 Q149.9207,698.5209 149.4507,698.6308 Q148.9807,698.7406 148.4619,698.7406 Q146.6187,698.7406 145.6482,697.526 Q144.6777,696.3114 144.6777,694.0165 Q144.6777,691.7155 145.6482,690.5009 Q146.6187,689.2863 148.4619,689.2863 Q148.9807,689.2863 149.4568,689.3962 Q149.9329,689.506 150.3479,689.7257 L150.3479,691.7277 Q149.884,691.3005 149.4476,691.1021 Q149.0112,690.9037 148.5474,690.9037 Q147.5586,690.9037 147.0551,691.688 Q146.5515,692.4723 146.5515,694.0165 Q146.5515,695.5546 147.0551,696.3389 Q147.5586,697.1232 148.5474,697.1232 Q149.0112,697.1232 149.4476,696.9248 Q149.884,696.7265 150.3479,696.2992 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="154.1667" x="171.3542" y="698.6003">DefaultHashingStrategy</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="457.2917" y1="709.5703" y2="709.5703"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="457.2917" y1="717.9036" y2="717.9036"/><ellipse cx="18.75" cy="729.362" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="418.75" x="30.2083" y="736.2732">DefaultHashingStrategy of(Estimate capacity, Percent maximumOccupancy)</text><ellipse cx="18.75" cy="749.1069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="250" x="30.2083" y="756.0181">DefaultHashingStrategy of(Estimate capacity)</text><ellipse cx="18.75" cy="792.7633" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="30.2083" y="799.6745">Percent defaultMaximumOccupancy()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="211.4583" y1="775.5992" y2="775.5992"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="214.5833" y="779.4088">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="254.1667" x2="457.2917" y1="775.5992" y2="775.5992"/><!--MD5=[cdcfbef7eada179514580dedadd264bd]
class PrimitiveCollection--><rect fill="#282828" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="581.7708" y="134.9528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="581.7708" y="134.9528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="160.4167" x="581.7708" y="158.0078"/><rect fill="none" height="48.055" id="PrimitiveCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="160.4167" x="581.7708" y="134.9528"/><ellipse cx="596.3542" cy="150.647" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M598.2646,155.072 Q597.8373,155.2917 597.3674,155.4016 Q596.8974,155.5115 596.3786,155.5115 Q594.5353,155.5115 593.5649,154.2969 Q592.5944,153.0823 592.5944,150.7874 Q592.5944,148.4863 593.5649,147.2717 Q594.5353,146.0571 596.3786,146.0571 Q596.8974,146.0571 597.3735,146.167 Q597.8495,146.2769 598.2646,146.4966 L598.2646,148.4985 Q597.8007,148.0713 597.3643,147.8729 Q596.9279,147.6746 596.464,147.6746 Q595.4753,147.6746 594.9717,148.4589 Q594.4682,149.2432 594.4682,150.7874 Q594.4682,152.3254 594.9717,153.1097 Q595.4753,153.894 596.464,153.894 Q596.9279,153.894 597.3643,153.6957 Q597.8007,153.4973 598.2646,153.0701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="613.0208" y="155.3711">PrimitiveCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="582.8125" x2="741.1458" y1="166.3411" y2="166.3411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="582.8125" x2="741.1458" y1="174.6745" y2="174.6745"/><!--MD5=[7dc83dba370c73a9f85e44bd982e6617]
class PrimitiveMap--><rect codeLine="35" fill="#282828" height="834.7717" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="494.7917" y="326.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="494.7917" y="326.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="334.375" x="494.7917" y="349.6745"/><rect codeLine="35" fill="none" height="834.7717" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="334.375" x="494.7917" y="326.6195"/><ellipse cx="612.5" cy="342.3136" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M612.0931,339.0157 L611.2447,342.745 L612.9476,342.745 Z M610.9945,337.3678 L613.1978,337.3678 L615.6576,346.4803 L613.857,346.4803 L613.2955,344.2281 L610.8846,344.2281 L610.3353,346.4803 L608.5347,346.4803 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="635.4167" y="347.0378">PrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="495.8333" x2="828.125" y1="358.0078" y2="358.0078"/><polygon fill="#FFFF44" points="506.25,388.1694,510.4167,392.336,506.25,396.5027,502.0833,392.336" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="79.1667" x="517.7083" y="400.2889">PrimitiveMap()</text><polygon fill="#FFFF44" points="506.25,407.9142,510.4167,412.0809,506.25,416.2476,502.0833,412.0809" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="517.7083" y="420.0338">PrimitiveMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.8333" x2="618.2292" y1="376.2136" y2="376.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="621.3542" y="380.0232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="705.7292" x2="828.125" y1="376.2136" y2="376.2136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.8333" x2="828.125" y1="429.7424" y2="429.7424"/><polygon fill="#FFFF44" points="506.25,435.9924,510.4167,440.1591,506.25,444.3258,502.0833,440.1591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="517.7083" y="448.112">void compare(PrimitiveMap that)</text><polygon fill="#FFFF44" points="506.25,455.7373,510.4167,459.904,506.25,464.0706,502.0833,459.904" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="517.7083" y="467.8569">HashingStrategy hashingStrategy()</text><polygon fill="#FFFF44" points="506.25,475.4822,510.4167,479.6488,506.25,483.8155,502.0833,479.6488" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="517.7083" y="487.6017">int slots()</text><polygon fill="#FFFF44" points="506.25,519.1386,510.4167,523.3053,506.25,527.4719,502.0833,523.3053" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="517.7083" y="531.2581">boolean isTombstone(int key)</text><polygon fill="#FFFF44" points="506.25,538.8835,510.4167,543.0501,506.25,547.2168,502.0833,543.0501" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="517.7083" y="551.003">boolean isTombstone(Object key)</text><polygon fill="#FFFF44" points="506.25,558.6283,510.4167,562.795,506.25,566.9617,502.0833,562.795" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="517.7083" y="570.7479">boolean isTombstone(long key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.8333" x2="635.4167" y1="507.1828" y2="507.1828"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="638.5417" y="510.9924">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="688.5417" x2="828.125" y1="507.1828" y2="507.1828"/><ellipse cx="506.25" cy="607.4931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="517.7083" y="614.4043">boolean contains(long[] values, long value)</text><ellipse cx="506.25" cy="627.238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="517.7083" y="634.1492">boolean contains(T[] values, T value)</text><ellipse cx="506.25" cy="646.9828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="218.75" x="517.7083" y="653.894">boolean contains(int[] values, int value)</text><ellipse cx="506.25" cy="666.7277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="517.7083" y="673.6389">boolean isEmpty(long key)</text><ellipse cx="506.25" cy="686.4726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="517.7083" y="693.3838">boolean isEmpty(byte key)</text><ellipse cx="506.25" cy="706.2174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="517.7083" y="713.1287">boolean isEmpty(int key)</text><ellipse cx="506.25" cy="725.9623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="155.2083" x="517.7083" y="732.8735">boolean isEmpty(String key)</text><polygon fill="#FFFF44" points="506.25,740.4989,510.4167,744.6655,506.25,748.8322,502.0833,744.6655" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="517.7083" y="752.6184">int hash(long value)</text><polygon fill="#FFFF44" points="506.25,760.2437,510.4167,764.4104,506.25,768.5771,502.0833,764.4104" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="517.7083" y="772.3633">int hash(int value)</text><polygon fill="#FFFF44" points="506.25,779.9886,510.4167,784.1553,506.25,788.3219,502.0833,784.1553" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="264.5833" x="517.7083" y="792.1082">PrimitiveMap hashingStrategy(HashingStrategy)</text><polygon fill="#FFFF44" points="506.25,799.7335,510.4167,803.9001,506.25,808.0668,502.0833,803.9001" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="517.7083" y="811.853">void increaseSize()</text><polygon fill="#FFFF44" points="506.25,819.4784,510.4167,823.645,506.25,827.8117,502.0833,823.645" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="517.7083" y="831.5979">long index(long hash)</text><polygon fill="#FFFF44" points="506.25,839.2232,510.4167,843.3899,506.25,847.5566,502.0833,843.3899" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="517.7083" y="851.3428">int index(int index)</text><polygon fill="#FFFF44" points="506.25,858.9681,510.4167,863.1348,506.25,867.3014,502.0833,863.1348" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="517.7083" y="871.0876">int index(long[] values, long value)</text><polygon fill="#FFFF44" points="506.25,878.713,510.4167,882.8796,506.25,887.0463,502.0833,882.8796" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="171.875" x="517.7083" y="890.8325">int index(int[] values, int value)</text><polygon fill="#FFFF44" points="506.25,898.4578,510.4167,902.6245,506.25,906.7912,502.0833,902.6245" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="517.7083" y="910.5774">int index(Object[] values, Object value)</text><polygon fill="#FFFF44" points="506.25,918.2027,510.4167,922.3694,506.25,926.5361,502.0833,922.3694" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="517.7083" y="930.3223">PrimitiveMap newMap()</text><polygon fill="#FFFF44" points="506.25,937.9476,510.4167,942.1143,506.25,946.2809,502.0833,942.1143" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="517.7083" y="950.0671">IntIterator nonEmptyIndexes(byte[] values)</text><polygon fill="#FFFF44" points="506.25,957.6925,510.4167,961.8591,506.25,966.0258,502.0833,961.8591" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="517.7083" y="969.812">IntIterator nonEmptyIndexes(long[] values)</text><polygon fill="#FFFF44" points="506.25,977.4373,510.4167,981.604,506.25,985.7707,502.0833,981.604" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="517.7083" y="989.5569">IntIterator nonEmptyIndexes(int[] values)</text><polygon fill="#FFFF44" points="506.25,997.1822,510.4167,1001.3489,506.25,1005.5155,502.0833,1001.3489" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="517.7083" y="1009.3018">IntIterator nonEmptyIndexes(T[] values)</text><polygon fill="#FFFF44" points="506.25,1016.9271,510.4167,1021.0938,506.25,1025.2604,502.0833,1021.0938" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="245.8333" x="517.7083" y="1029.0466">LongIterator nonEmptyValues(long[] values)</text><polygon fill="#FFFF44" points="506.25,1036.672,510.4167,1040.8386,506.25,1045.0053,502.0833,1040.8386" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="517.7083" y="1048.7915">IntIterator nonEmptyValues(int[] values)</text><polygon fill="#FFFF44" points="506.25,1056.4168,510.4167,1060.5835,506.25,1064.7502,502.0833,1060.5835" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="517.7083" y="1068.5364">ByteIterator nonEmptyValues(byte[] values)</text><polygon fill="#FFFF44" points="506.25,1076.1617,510.4167,1080.3284,506.25,1084.495,502.0833,1080.3284" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="517.7083" y="1088.2813">Iterator&lt;T&gt; nonEmptyValues(T[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.8333" x2="627.6042" y1="590.329" y2="590.329"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="630.7292" y="594.1386">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="696.3542" x2="828.125" y1="590.329" y2="590.329"/><polygon fill="#FFFF44" points="506.25,1119.8181,510.4167,1123.9848,506.25,1128.1514,502.0833,1123.9848" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="158.3333" x="517.7083" y="1131.9377">void copy(PrimitiveMap that)</text><polygon fill="#FFFF44" points="506.25,1139.563,510.4167,1143.7297,506.25,1147.8963,502.0833,1143.7297" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="302.0833" x="517.7083" y="1151.6825">void copyEntries(PrimitiveMap that, ProgressReporter)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.8333" x2="626.5625" y1="1107.8623" y2="1107.8623"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="629.6875" y="1111.672">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="697.3958" x2="828.125" y1="1107.8623" y2="1107.8623"/><!--MD5=[aff4b5caafd4910c5c8c1fb6650f9b6b]
class PrimitiveScalarMap--><rect codeLine="79" fill="#282828" height="194.6025" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="271.875" x="779.1667" y="61.5153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="271.875" x="779.1667" y="61.5153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="271.875" x="779.1667" y="84.5703"/><rect codeLine="79" fill="none" height="194.6025" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="271.875" x="779.1667" y="61.5153"/><ellipse cx="846.875" cy="77.2095" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M844.279,74.3713 L844.279,72.7844 L849.705,72.7844 L849.705,74.3713 L847.8923,74.3713 L847.8923,80.3101 L849.705,80.3101 L849.705,81.897 L844.279,81.897 L844.279,80.3101 L846.0917,80.3101 L846.0917,74.3713 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="121.875" x="869.7917" y="81.9336">PrimitiveScalarMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="780.2083" x2="1050" y1="92.9036" y2="92.9036"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="780.2083" x2="1050" y1="101.237" y2="101.237"/><ellipse cx="790.625" cy="112.6953" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="802.0833" y="119.6065">long getScalar(long key)</text><ellipse cx="790.625" cy="156.3517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="802.0833" y="163.2629">boolean isScalarValueNull(long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="780.2083" x2="888.5417" y1="139.1876" y2="139.1876"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="891.6667" y="142.9972">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="941.6667" x2="1050" y1="139.1876" y2="139.1876"/><ellipse cx="790.625" cy="200.0081" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="802.0833" y="206.9194">boolean isScalarKeyNull(long key)</text><ellipse cx="790.625" cy="219.753" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="239.5833" x="802.0833" y="226.6642">void putScalar(long key, Quantizable value)</text><ellipse cx="790.625" cy="239.4979" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="802.0833" y="246.4091">void putScalar(long key, long value)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="780.2083" x2="880.7292" y1="182.844" y2="182.844"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="883.8542" y="186.6536">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="949.4792" x2="1050" y1="182.844" y2="182.844"/><!--MD5=[7570133d8164067c1a3a4c75d824a8d3]
class SplitPrimitiveMap--><rect codeLine="92" fill="#282828" height="103.123" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="577.6042" y="1223.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="577.6042" y="1223.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="168.75" x="577.6042" y="1246.5495"/><rect codeLine="92" fill="none" height="103.123" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="168.75" x="577.6042" y="1223.4945"/><ellipse cx="600.1563" cy="1239.1886" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M599.7493,1235.8907 L598.901,1239.62 L600.6038,1239.62 Z M598.6507,1234.2428 L600.8541,1234.2428 L603.3138,1243.3553 L601.5133,1243.3553 L600.9517,1241.1031 L598.5409,1241.1031 L597.9915,1243.3553 L596.191,1243.3553 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="113.5417" x="618.5938" y="1243.9128">SplitPrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="578.6458" x2="745.3125" y1="1254.8828" y2="1254.8828"/><polygon fill="#FFFF44" points="589.0625,1285.0444,593.2292,1289.211,589.0625,1293.3777,584.8958,1289.211" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="600.5208" y="1297.1639">SplitPrimitiveMap()</text><polygon fill="#FFFF44" points="589.0625,1304.7892,593.2292,1308.9559,589.0625,1313.1226,584.8958,1308.9559" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="600.5208" y="1316.9088">SplitPrimitiveMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="578.6458" x2="618.2292" y1="1273.0886" y2="1273.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="621.3542" y="1276.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="705.7292" x2="745.3125" y1="1273.0886" y2="1273.0886"/><!--MD5=[0754655fb52758b3ad82002fbd402b68]
reverse link HashingStrategy to DefaultHashingStrategy--><path codeLine="8" d="M232.8125,285.2132 C232.8125,405.7653 232.8125,583.2757 232.8125,677.8486 " fill="none" id="HashingStrategy-backto-DefaultHashingStrategy" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="225.5208,284.984,232.8125,264.1507,240.1042,284.984,225.5208,284.984" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[69733526af6d042158e0c4d64d9e320f]
reverse link PrimitiveCollection to PrimitiveMap--><path codeLine="34" d="M661.9792,204.3799 C661.9792,234.4945 661.9792,277.6195 661.9792,326.5361 " fill="none" id="PrimitiveCollection-backto-PrimitiveMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="654.6875,203.9945,661.9792,183.1611,669.2708,203.9945,654.6875,203.9945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5d0e7a1d6ed25fb4431f591a99579779]
reverse link PrimitiveMap to SplitPrimitiveMap--><path codeLine="91" d="M661.9792,1182.484 C661.9792,1197.557 661.9792,1211.2965 661.9792,1223.2861 " fill="none" id="PrimitiveMap-backto-SplitPrimitiveMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="654.6875,1181.9736,661.9792,1161.1403,669.2708,1181.9736,654.6875,1181.9736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[e84e268a9833f24819d160505ba61787]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.primitive.collections.map"
    
    interface HashingStrategy
    
    HashingStrategy <|- - DefaultHashingStrategy
    class DefaultHashingStrategy
    {
        - -
        +DefaultHashingStrategy of(Estimate capacity, Percent maximumOccupancy)
        +DefaultHashingStrategy of(Estimate capacity)
        - -(math)- -
        +Percent defaultMaximumOccupancy()
    }
    
    interface HashingStrategy
    {
        - -(collection)- -
        +Count rehashThreshold()
        - -(functional)- -
        +Estimate recommendedSize()
        +HashingStrategy withCapacity(Estimate size)
        +HashingStrategy withIncreasedCapacity()
        - -(math)- -
        +Percent maximumOccupancy()
    }
    
    interface PrimitiveMap.MapToString
    {
    }
    
    PrimitiveCollection <|- - PrimitiveMap
    abstract class PrimitiveMap
    {
        - -(constructors)- -
        #PrimitiveMap()
        #PrimitiveMap(String)
        - -
        #void compare(PrimitiveMap that)
        #HashingStrategy hashingStrategy()
        #int slots()
        - -(checks)- -
        #boolean isTombstone(int key)
        #boolean isTombstone(Object key)
        #boolean isTombstone(long key)
        - -(collection)- -
        +boolean contains(long[] values, long value)
        +boolean contains(T[] values, T value)
        +boolean contains(int[] values, int value)
        +boolean isEmpty(long key)
        +boolean isEmpty(byte key)
        +boolean isEmpty(int key)
        +boolean isEmpty(String key)
        #int hash(long value)
        #int hash(int value)
        #PrimitiveMap hashingStrategy(HashingStrategy)
        #void increaseSize()
        #long index(long hash)
        #int index(int index)
        #int index(long[] values, long value)
        #int index(int[] values, int value)
        #int index(Object[] values, Object value)
        #PrimitiveMap newMap()
        #IntIterator nonEmptyIndexes(byte[] values)
        #IntIterator nonEmptyIndexes(long[] values)
        #IntIterator nonEmptyIndexes(int[] values)
        #IntIterator nonEmptyIndexes(T[] values)
        #LongIterator nonEmptyValues(long[] values)
        #IntIterator nonEmptyValues(int[] values)
        #ByteIterator nonEmptyValues(byte[] values)
        #Iterator<T> nonEmptyValues(T[] values)
        - -(filesystem)- -
        #void copy(PrimitiveMap that)
        #void copyEntries(PrimitiveMap that, ProgressReporter)
    }
    
    interface PrimitiveScalarMap
    {
        - -
        +long getScalar(long key)
        - -(checks)- -
        +boolean isScalarValueNull(long value)
        - -(collection)- -
        +boolean isScalarKeyNull(long key)
        +void putScalar(long key, Quantizable value)
        +void putScalar(long key, long value)
    }
    
    PrimitiveMap <|- - SplitPrimitiveMap
    abstract class SplitPrimitiveMap
    {
        - -(constructors)- -
        #SplitPrimitiveMap()
        #SplitPrimitiveMap(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.primitive.collections.map"
    
    interface HashingStrategy
    
    HashingStrategy <|- - DefaultHashingStrategy
    class DefaultHashingStrategy
    {
        - -
        +DefaultHashingStrategy of(Estimate capacity, Percent maximumOccupancy)
        +DefaultHashingStrategy of(Estimate capacity)
        - -(math)- -
        +Percent defaultMaximumOccupancy()
    }
    
    interface HashingStrategy
    {
        - -(collection)- -
        +Count rehashThreshold()
        - -(functional)- -
        +Estimate recommendedSize()
        +HashingStrategy withCapacity(Estimate size)
        +HashingStrategy withIncreasedCapacity()
        - -(math)- -
        +Percent maximumOccupancy()
    }
    
    interface PrimitiveMap.MapToString
    {
    }
    
    PrimitiveCollection <|- - PrimitiveMap
    abstract class PrimitiveMap
    {
        - -(constructors)- -
        #PrimitiveMap()
        #PrimitiveMap(String)
        - -
        #void compare(PrimitiveMap that)
        #HashingStrategy hashingStrategy()
        #int slots()
        - -(checks)- -
        #boolean isTombstone(int key)
        #boolean isTombstone(Object key)
        #boolean isTombstone(long key)
        - -(collection)- -
        +boolean contains(long[] values, long value)
        +boolean contains(T[] values, T value)
        +boolean contains(int[] values, int value)
        +boolean isEmpty(long key)
        +boolean isEmpty(byte key)
        +boolean isEmpty(int key)
        +boolean isEmpty(String key)
        #int hash(long value)
        #int hash(int value)
        #PrimitiveMap hashingStrategy(HashingStrategy)
        #void increaseSize()
        #long index(long hash)
        #int index(int index)
        #int index(long[] values, long value)
        #int index(int[] values, int value)
        #int index(Object[] values, Object value)
        #PrimitiveMap newMap()
        #IntIterator nonEmptyIndexes(byte[] values)
        #IntIterator nonEmptyIndexes(long[] values)
        #IntIterator nonEmptyIndexes(int[] values)
        #IntIterator nonEmptyIndexes(T[] values)
        #LongIterator nonEmptyValues(long[] values)
        #IntIterator nonEmptyValues(int[] values)
        #ByteIterator nonEmptyValues(byte[] values)
        #Iterator<T> nonEmptyValues(T[] values)
        - -(filesystem)- -
        #void copy(PrimitiveMap that)
        #void copyEntries(PrimitiveMap that, ProgressReporter)
    }
    
    interface PrimitiveScalarMap
    {
        - -
        +long getScalar(long key)
        - -(checks)- -
        +boolean isScalarValueNull(long value)
        - -(collection)- -
        +boolean isScalarKeyNull(long key)
        +void putScalar(long key, Quantizable value)
        +void putScalar(long key, long value)
    }
    
    PrimitiveMap <|- - SplitPrimitiveMap
    abstract class SplitPrimitiveMap
    {
        - -(constructors)- -
        #SplitPrimitiveMap()
        #SplitPrimitiveMap(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>