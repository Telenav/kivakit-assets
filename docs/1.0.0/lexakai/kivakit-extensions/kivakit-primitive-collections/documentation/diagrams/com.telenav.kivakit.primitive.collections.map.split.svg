<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="444.7917px" preserveAspectRatio="none" style="width:1156px;height:444px;background:#333333;" version="1.1" viewBox="0 0 1156 444" width="1156.25px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="525" x="308.3333" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="502.0833" x="319.7917" y="30.5583">com.telenav.kivakit.primitive.collections.map.split</text><!--MD5=[aff4b5caafd4910c5c8c1fb6650f9b6b]
class PrimitiveScalarMap--><rect codeLine="6" fill="#282828" height="48.055" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="406.25" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="406.25" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="406.25" y="76.7578"/><rect codeLine="6" fill="none" height="48.055" id="PrimitiveScalarMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="406.25" y="53.7028"/><ellipse cx="420.8333" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M418.2373,66.5588 L418.2373,64.9719 L423.6633,64.9719 L423.6633,66.5588 L421.8506,66.5588 L421.8506,72.4976 L423.6633,72.4976 L423.6633,74.0845 L418.2373,74.0845 L418.2373,72.4976 L420.05,72.4976 L420.05,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="121.875" x="437.5" y="74.1211">PrimitiveScalarMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="407.2917" x2="564.5833" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="407.2917" x2="564.5833" y1="93.4245" y2="93.4245"/><!--MD5=[7570133d8164067c1a3a4c75d824a8d3]
class SplitPrimitiveMap--><rect fill="#282828" height="48.055" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="151.0417" x="627.0833" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="151.0417" x="627.0833" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="151.0417" x="627.0833" y="76.7578"/><rect fill="none" height="48.055" id="SplitPrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="151.0417" x="627.0833" y="53.7028"/><ellipse cx="641.6667" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M643.5771,73.822 Q643.1498,74.0417 642.6799,74.1516 Q642.2099,74.2615 641.6911,74.2615 Q639.8478,74.2615 638.8774,73.0469 Q637.9069,71.8323 637.9069,69.5374 Q637.9069,67.2363 638.8774,66.0217 Q639.8478,64.8071 641.6911,64.8071 Q642.2099,64.8071 642.686,64.917 Q643.162,65.0269 643.5771,65.2466 L643.5771,67.2485 Q643.1132,66.8213 642.6768,66.6229 Q642.2404,66.4246 641.7765,66.4246 Q640.7878,66.4246 640.2842,67.2089 Q639.7807,67.9932 639.7807,69.5374 Q639.7807,71.0754 640.2842,71.8597 Q640.7878,72.644 641.7765,72.644 Q642.2404,72.644 642.6768,72.4457 Q643.1132,72.2473 643.5771,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="113.5417" x="658.3333" y="74.1211">SplitPrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="628.125" x2="777.0833" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="628.125" x2="777.0833" y1="93.4245" y2="93.4245"/><!--MD5=[ab32211fbb9f0f10fe3c4d06d29fe61f]
class SplitIntToIntMap--><rect codeLine="10" fill="#282828" height="273.5819" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="606.7708" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="606.7708" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="606.7708" y="187.1745"/><rect codeLine="10" fill="none" height="273.5819" id="SplitIntToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="606.7708" y="164.1195"/><ellipse cx="666.1458" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M668.0562,184.2387 Q667.629,184.4584 667.159,184.5683 Q666.689,184.6781 666.1702,184.6781 Q664.327,184.6781 663.3565,183.4635 Q662.3861,182.2489 662.3861,179.954 Q662.3861,177.653 663.3565,176.4384 Q664.327,175.2238 666.1702,175.2238 Q666.689,175.2238 667.1651,175.3337 Q667.6412,175.4435 668.0562,175.6632 L668.0562,177.6652 Q667.5924,177.238 667.156,177.0396 Q666.7196,176.8412 666.2557,176.8412 Q665.2669,176.8412 664.7634,177.6255 Q664.2598,178.4098 664.2598,179.954 Q664.2598,181.4921 664.7634,182.2764 Q665.2669,183.0607 666.2557,183.0607 Q666.7196,183.0607 667.156,182.8623 Q667.5924,182.664 668.0562,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="108.3333" x="689.0625" y="184.5378">SplitIntToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="607.8125" x2="847.3958" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="618.2292,225.6694,622.3958,229.836,618.2292,234.0027,614.0625,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="629.6875" y="237.7889">SplitIntToIntMap()</text><ellipse cx="618.2292" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="629.6875" y="257.5338">SplitIntToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="607.8125" x2="683.8542" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="686.9792" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="771.3542" x2="847.3958" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="607.8125" x2="847.3958" y1="267.2424" y2="267.2424"/><ellipse cx="618.2292" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="629.6875" y="285.612">void entries(IntToIntMap.EntryVisitor)</text><ellipse cx="618.2292" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="629.6875" y="305.3569">int get(int key)</text><ellipse cx="618.2292" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="629.6875" y="349.0133">boolean containsKey(int key)</text><ellipse cx="618.2292" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="629.6875" y="368.7581">IntIterator keys()</text><ellipse cx="618.2292" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="629.6875" y="388.503">void put(int key, int value)</text><ellipse cx="618.2292" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="629.6875" y="408.2479">boolean remove(int key)</text><ellipse cx="618.2292" cy="421.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="629.6875" y="427.9928">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="607.8125" x2="693.2292" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="696.3542" y="328.7476">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.9792" x2="847.3958" y1="324.9379" y2="324.9379"/><!--MD5=[dfe124e4b4908e38b60aed9b25001332]
class SplitLongToByteMap--><rect codeLine="28" fill="#282828" height="273.5819" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="885.4167" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="885.4167" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="263.5417" x="885.4167" y="187.1745"/><rect codeLine="28" fill="none" height="273.5819" id="SplitLongToByteMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="263.5417" x="885.4167" y="164.1195"/><ellipse cx="943.2292" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M945.1396,184.2387 Q944.7123,184.4584 944.2424,184.5683 Q943.7724,184.6781 943.2536,184.6781 Q941.4103,184.6781 940.4399,183.4635 Q939.4694,182.2489 939.4694,179.954 Q939.4694,177.653 940.4399,176.4384 Q941.4103,175.2238 943.2536,175.2238 Q943.7724,175.2238 944.2485,175.3337 Q944.7245,175.4435 945.1396,175.6632 L945.1396,177.6652 Q944.6757,177.238 944.2393,177.0396 Q943.8029,176.8412 943.339,176.8412 Q942.3503,176.8412 941.8467,177.6255 Q941.3432,178.4098 941.3432,179.954 Q941.3432,181.4921 941.8467,182.2764 Q942.3503,183.0607 943.339,183.0607 Q943.8029,183.0607 944.2393,182.8623 Q944.6757,182.664 945.1396,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="966.1458" y="184.5378">SplitLongToByteMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="886.4583" x2="1147.9167" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="896.875,225.6694,901.0417,229.836,896.875,234.0027,892.7083,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="908.3333" y="237.7889">SplitLongToByteMap()</text><ellipse cx="896.875" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="908.3333" y="257.5338">SplitLongToByteMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="886.4583" x2="973.4375" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="976.5625" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1060.9375" x2="1147.9167" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="886.4583" x2="1147.9167" y1="267.2424" y2="267.2424"/><ellipse cx="896.875" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="908.3333" y="285.612">void entries(LongToByteMap.EntryVisitor)</text><ellipse cx="896.875" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="908.3333" y="305.3569">byte get(long key)</text><ellipse cx="896.875" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="908.3333" y="349.0133">boolean containsKey(long key)</text><ellipse cx="896.875" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="908.3333" y="368.7581">LongIterator keys()</text><ellipse cx="896.875" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="908.3333" y="388.503">void put(long key, byte value)</text><ellipse cx="896.875" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="908.3333" y="408.2479">boolean remove(long key)</text><ellipse cx="896.875" cy="421.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="908.3333" y="427.9928">ByteIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="886.4583" x2="982.8125" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="985.9375" y="328.7476">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1051.5625" x2="1147.9167" y1="324.9379" y2="324.9379"/><!--MD5=[ef14bcef69138822e1b48ba4f12b63f3]
class SplitLongToIntMap--><rect codeLine="46" fill="#282828" height="273.5819" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="9.375" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="9.375" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="255.2083" x="9.375" y="187.1745"/><rect codeLine="46" fill="none" height="273.5819" id="SplitLongToIntMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="255.2083" x="9.375" y="164.1195"/><ellipse cx="68.2292" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M70.1396,184.2387 Q69.7123,184.4584 69.2424,184.5683 Q68.7724,184.6781 68.2536,184.6781 Q66.4103,184.6781 65.4399,183.4635 Q64.4694,182.2489 64.4694,179.954 Q64.4694,177.653 65.4399,176.4384 Q66.4103,175.2238 68.2536,175.2238 Q68.7724,175.2238 69.2485,175.3337 Q69.7245,175.4435 70.1396,175.6632 L70.1396,177.6652 Q69.6757,177.238 69.2393,177.0396 Q68.8029,176.8412 68.339,176.8412 Q67.3503,176.8412 66.8467,177.6255 Q66.3432,178.4098 66.3432,179.954 Q66.3432,181.4921 66.8467,182.2764 Q67.3503,183.0607 68.339,183.0607 Q68.8029,183.0607 69.2393,182.8623 Q69.6757,182.664 70.1396,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="91.1458" y="184.5378">SplitLongToIntMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="263.5417" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="20.8333,225.6694,25,229.836,20.8333,234.0027,16.6667,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="32.2917" y="237.7889">SplitLongToIntMap()</text><ellipse cx="20.8333" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="32.2917" y="257.5338">SplitLongToIntMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="93.2292" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="96.3542" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="180.7292" x2="263.5417" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="263.5417" y1="267.2424" y2="267.2424"/><ellipse cx="20.8333" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="32.2917" y="285.612">void entries(LongToIntMap.EntryVisitor)</text><ellipse cx="20.8333" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="32.2917" y="305.3569">int get(long key)</text><ellipse cx="20.8333" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="32.2917" y="349.0133">boolean containsKey(long key)</text><ellipse cx="20.8333" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="32.2917" y="368.7581">LongIterator keys()</text><ellipse cx="20.8333" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="32.2917" y="388.503">void put(long key, int value)</text><ellipse cx="20.8333" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="32.2917" y="408.2479">boolean remove(long key)</text><ellipse cx="20.8333" cy="421.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="32.2917" y="427.9928">IntIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="102.6042" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="105.7292" y="328.7476">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="171.3542" x2="263.5417" y1="324.9379" y2="324.9379"/><!--MD5=[52afe792c50e067479042a27d2114020]
class SplitLongToLongMap--><rect codeLine="64" fill="#282828" height="273.5819" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="301.5625" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="301.5625" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="268.75" x="301.5625" y="187.1745"/><rect codeLine="64" fill="none" height="273.5819" id="SplitLongToLongMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="268.75" x="301.5625" y="164.1195"/><ellipse cx="359.8958" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M361.8062,184.2387 Q361.379,184.4584 360.909,184.5683 Q360.439,184.6781 359.9202,184.6781 Q358.077,184.6781 357.1065,183.4635 Q356.1361,182.2489 356.1361,179.954 Q356.1361,177.653 357.1065,176.4384 Q358.077,175.2238 359.9202,175.2238 Q360.439,175.2238 360.9151,175.3337 Q361.3912,175.4435 361.8062,175.6632 L361.8062,177.6652 Q361.3424,177.238 360.906,177.0396 Q360.4696,176.8412 360.0057,176.8412 Q359.0169,176.8412 358.5134,177.6255 Q358.0098,178.4098 358.0098,179.954 Q358.0098,181.4921 358.5134,182.2764 Q359.0169,183.0607 360.0057,183.0607 Q360.4696,183.0607 360.906,182.8623 Q361.3424,182.664 361.8062,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="137.5" x="382.8125" y="184.5378">SplitLongToLongMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="302.6042" x2="569.2708" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="313.0208,225.6694,317.1875,229.836,313.0208,234.0027,308.8542,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="324.4792" y="237.7889">SplitLongToLongMap()</text><ellipse cx="313.0208" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="324.4792" y="257.5338">SplitLongToLongMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="302.6042" x2="392.1875" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="395.3125" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="479.6875" x2="569.2708" y1="213.7136" y2="213.7136"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="302.6042" x2="569.2708" y1="267.2424" y2="267.2424"/><ellipse cx="313.0208" cy="278.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="324.4792" y="285.612">void entries(LongToLongMap.EntryVisitor)</text><ellipse cx="313.0208" cy="298.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="324.4792" y="305.3569">long get(long key)</text><ellipse cx="313.0208" cy="342.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="324.4792" y="349.0133">boolean containsKey(long key)</text><ellipse cx="313.0208" cy="361.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="324.4792" y="368.7581">LongIterator keys()</text><ellipse cx="313.0208" cy="381.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="324.4792" y="388.503">void put(long key, long value)</text><ellipse cx="313.0208" cy="401.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="324.4792" y="408.2479">boolean remove(long key)</text><ellipse cx="313.0208" cy="421.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="324.4792" y="427.9928">LongIterator values()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="302.6042" x2="401.5625" y1="324.9379" y2="324.9379"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="404.6875" y="328.7476">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="470.3125" x2="569.2708" y1="324.9379" y2="324.9379"/><!--MD5=[2dbf538002e9ad59efd038bad64db3a2]
reverse link SplitPrimitiveMap to SplitIntToIntMap--><path codeLine="8" d="M707.625,123.1299 C709,135.3799 710.5833,149.3382 712.2292,163.9215 " fill="none" id="SplitPrimitiveMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="700.3229,123.4945,705.2292,101.9736,714.8125,121.859,700.3229,123.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9b8b15e161c7f422a47b215cbe12e445]
reverse link PrimitiveScalarMap to SplitIntToIntMap--><path codeLine="9" d="M531.375,114.9632 C549.6042,129.859 570.6146,147.484 589.0625,164.1195 C594.8229,169.307 600.6563,174.6611 606.5208,180.109 " fill="none" id="PrimitiveScalarMap-backto-SplitIntToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="526.5313,120.4215,514.9375,101.6403,535.7083,109.0882,526.5313,120.4215" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[42a18a6fd1c762375d2c47fe1d73e6dd]
reverse link SplitPrimitiveMap to SplitLongToByteMap--><path codeLine="26" d="M773.8333,110.6715 C803.6875,125.3174 838.1354,143.9215 867.1875,164.1195 C873.25,168.3278 879.3229,172.7653 885.3646,177.359 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="770.6146,117.2132,754.9792,101.6299,776.9167,104.0674,770.6146,117.2132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7f4d3046b89bb9ae161467daade763f4]
reverse link PrimitiveScalarMap to SplitLongToByteMap--><path codeLine="27" d="M586.2292,98.4111 C690.6042,119.3695 842.3021,151.2132 867.1875,164.1195 C873.2708,167.2757 879.3021,170.734 885.2396,174.4424 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToByteMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="584.7188,105.5465,565.7188,94.3174,587.5729,91.2445,584.7188,105.5465" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8447b494efe3cef70e5d6b1743be066c]
reverse link SplitPrimitiveMap to SplitLongToIntMap--><path codeLine="44" d="M606.3854,97.6611 C485.0104,121.682 291.0938,160.4111 283.8542,164.1195 C277.3646,167.4528 270.9479,171.1507 264.6354,175.1299 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="605.1875,90.4632,627.0417,93.5778,608.0208,104.7757,605.1875,90.4632" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2a36385a340796500f8d19ec27c5a970]
reverse link PrimitiveScalarMap to SplitLongToIntMap--><path codeLine="45" d="M395.6354,109.1299 C359.4583,123.2653 318.2813,141.8903 283.8542,164.1195 C277.4375,168.2653 271.0313,172.7028 264.6875,177.3486 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToIntMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="393.0729,102.307,415.1458,101.7549,398.2396,115.9424,393.0729,102.307" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d0a1b7ac5b8eda5e2aa3281b0eb70717]
reverse link SplitPrimitiveMap to SplitLongToLongMap--><path codeLine="62" d="M653.4688,114.3174 C633.2396,129.3278 609.7396,147.2132 589.0625,164.1195 C583.0104,169.0674 576.8646,174.1715 570.6875,179.3695 " fill="none" id="SplitPrimitiveMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="649.1563,108.432,670.2604,101.9528,657.8021,120.182,649.1563,108.432" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[47c292327a2f38ddd5846813bb5c62d1]
reverse link PrimitiveScalarMap to SplitLongToLongMap--><path codeLine="63" d="M476.0104,122.6611 C473.2188,135.0257 470.0208,149.1507 466.6875,163.9215 " fill="none" id="PrimitiveScalarMap-backto-SplitLongToLongMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="468.9792,120.6924,480.6771,101.9736,483.2083,123.9007,468.9792,120.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[85dbf03630e3b24970ce59ac2033d269]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.primitive.collections.map.split"
    
    interface PrimitiveScalarMap
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        #SplitIntToIntMap()
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        #SplitLongToByteMap()
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        #SplitLongToIntMap()
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        #SplitLongToLongMap()
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.primitive.collections.map.split"
    
    interface PrimitiveScalarMap
    
    SplitPrimitiveMap <|- - SplitIntToIntMap
    PrimitiveScalarMap <|- - SplitIntToIntMap
    class SplitIntToIntMap
    {
        - -(constructors)- -
        #SplitIntToIntMap()
        +SplitIntToIntMap(String)
        - -
        +void entries(IntToIntMap.EntryVisitor)
        +int get(int key)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntIterator keys()
        +void put(int key, int value)
        +boolean remove(int key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToByteMap
    PrimitiveScalarMap <|- - SplitLongToByteMap
    class SplitLongToByteMap
    {
        - -(constructors)- -
        #SplitLongToByteMap()
        +SplitLongToByteMap(String)
        - -
        +void entries(LongToByteMap.EntryVisitor)
        +byte get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, byte value)
        +boolean remove(long key)
        +ByteIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToIntMap
    PrimitiveScalarMap <|- - SplitLongToIntMap
    class SplitLongToIntMap
    {
        - -(constructors)- -
        #SplitLongToIntMap()
        +SplitLongToIntMap(String)
        - -
        +void entries(LongToIntMap.EntryVisitor)
        +int get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, int value)
        +boolean remove(long key)
        +IntIterator values()
    }
    
    SplitPrimitiveMap <|- - SplitLongToLongMap
    PrimitiveScalarMap <|- - SplitLongToLongMap
    class SplitLongToLongMap
    {
        - -(constructors)- -
        #SplitLongToLongMap()
        +SplitLongToLongMap(String)
        - -
        +void entries(LongToLongMap.EntryVisitor)
        +long get(long key)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongIterator keys()
        +void put(long key, long value)
        +boolean remove(long key)
        +LongIterator values()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>