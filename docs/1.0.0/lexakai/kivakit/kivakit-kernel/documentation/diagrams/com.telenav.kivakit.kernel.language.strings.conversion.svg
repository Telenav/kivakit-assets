<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="819.7917px" preserveAspectRatio="none" style="width:868px;height:819px;background:#333333;" version="1.1" viewBox="0 0 868 819" width="868.75px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="568.75" x="142.7083" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="545.8333" x="154.1667" y="30.5583">com.telenav.kivakit.kernel.language.strings.conversion</text><!--MD5=[f39ad9880bdb1ab85099c19a5add36ec]
class AsString--><rect codeLine="15" fill="#282828" height="103.123" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="195.8333" x="250" y="251.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="195.8333" x="250" y="251.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="195.8333" x="250" y="274.6745"/><rect codeLine="15" fill="none" height="103.123" id="AsString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="195.8333" x="250" y="251.6195"/><ellipse cx="313.0208" cy="267.3136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M310.4248,264.4755 L310.4248,262.8886 L315.8508,262.8886 L315.8508,264.4755 L314.0381,264.4755 L314.0381,270.4142 L315.8508,270.4142 L315.8508,272.0011 L310.4248,272.0011 L310.4248,270.4142 L312.2375,270.4142 L312.2375,264.4755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="55.2083" x="335.9375" y="272.0378">AsString</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="251.0417" x2="444.7917" y1="283.0078" y2="283.0078"/><ellipse cx="261.4583" cy="318.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="272.9167" y="325.2889">String asString(StringFormat)</text><ellipse cx="261.4583" cy="338.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="272.9167" y="345.0338">String asString()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="251.0417" x2="309.375" y1="301.2136" y2="301.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="312.5" y="305.0232">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="386.4583" x2="444.7917" y1="301.2136" y2="301.2136"/><!--MD5=[73c439f56ccfa7e4c59d3223bd3c8a84]
class AsIndentedString--><rect codeLine="8" fill="#282828" height="83.3781" id="AsIndentedString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="683.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="683.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="706.9661"/><rect codeLine="8" fill="none" height="83.3781" id="AsIndentedString" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="358.3333" x="7.2917" y="683.9111"/><ellipse cx="122.9167" cy="699.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M120.3206,696.7672 L120.3206,695.1803 L125.7467,695.1803 L125.7467,696.7672 L123.9339,696.7672 L123.9339,702.7059 L125.7467,702.7059 L125.7467,704.2928 L120.3206,704.2928 L120.3206,702.7059 L122.1334,702.7059 L122.1334,696.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="112.5" x="145.8333" y="704.3294">AsIndentedString</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="364.5833" y1="715.2995" y2="715.2995"/><ellipse cx="18.75" cy="750.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="30.2083" y="757.5806">AsStringIndenter asString(StringFormat, AsStringIndenter)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="147.9167" y1="733.5052" y2="733.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="151.0417" y="737.3149">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="225" x2="364.5833" y1="733.5052" y2="733.5052"/><!--MD5=[996ac6a52658a55545bd1a69d7408e22]
class StringFormat--><rect codeLine="49" fill="#282828" height="174.8576" id="StringFormat" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="214.5833" x="402.0833" y="638.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="214.5833" x="402.0833" y="638.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="214.5833" x="402.0833" y="661.1328"/><rect codeLine="49" fill="none" height="174.8576" id="StringFormat" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="214.5833" x="402.0833" y="638.0778"/><ellipse cx="459.8958" cy="653.772" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M461.8062,658.197 Q461.379,658.4167 460.909,658.5266 Q460.439,658.6365 459.9202,658.6365 Q458.077,658.6365 457.1065,657.4219 Q456.1361,656.2073 456.1361,653.9124 Q456.1361,651.6113 457.1065,650.3967 Q458.077,649.1821 459.9202,649.1821 Q460.439,649.1821 460.9151,649.292 Q461.3912,649.4019 461.8062,649.6216 L461.8062,651.6235 Q461.3424,651.1963 460.906,650.9979 Q460.4696,650.7996 460.0057,650.7996 Q459.0169,650.7996 458.5134,651.5839 Q458.0098,652.3682 458.0098,653.9124 Q458.0098,655.4504 458.5134,656.2347 Q459.0169,657.019 460.0057,657.019 Q460.4696,657.019 460.906,656.8207 Q461.3424,656.6223 461.8062,656.1951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="482.8125" y="658.4961">StringFormat</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="403.125" x2="615.625" y1="669.4661" y2="669.4661"/><ellipse cx="413.5417" cy="704.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="425" y="711.7472">StringFormat(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.125" x2="465.625" y1="687.6719" y2="687.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="468.75" y="691.4815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="553.125" x2="615.625" y1="687.6719" y2="687.6719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.125" x2="615.625" y1="721.4559" y2="721.4559"/><ellipse cx="413.5417" cy="732.9142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="425" y="739.8254">StringFormat of(String identifier)</text><ellipse cx="413.5417" cy="776.5706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="91.6667" x="425" y="783.4819">boolean isHtml()</text><ellipse cx="413.5417" cy="796.3155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="425" y="803.2267">boolean isText()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="403.125" x2="482.8125" y1="759.4065" y2="759.4065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="485.9375" y="763.2161">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="535.9375" x2="615.625" y1="759.4065" y2="759.4065"/><!--MD5=[cfa2ae0579e846e31ec0958097c5ab34]
class AsStringIndenter--><rect codeLine="22" fill="#282828" height="499.1089" id="AsStringIndenter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="379.1667" x="482.2917" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="379.1667" x="482.2917" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="379.1667" x="482.2917" y="76.7578"/><rect codeLine="22" fill="none" height="499.1089" id="AsStringIndenter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="379.1667" x="482.2917" y="53.7028"/><ellipse cx="609.8958" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M611.8062,73.822 Q611.379,74.0417 610.909,74.1516 Q610.439,74.2615 609.9202,74.2615 Q608.077,74.2615 607.1065,73.0469 Q606.1361,71.8323 606.1361,69.5374 Q606.1361,67.2363 607.1065,66.0217 Q608.077,64.8071 609.9202,64.8071 Q610.439,64.8071 610.9151,64.917 Q611.3912,65.0269 611.8062,65.2466 L611.8062,67.2485 Q611.3424,66.8213 610.906,66.6229 Q610.4696,66.4246 610.0057,66.4246 Q609.0169,66.4246 608.5134,67.2089 Q608.0098,67.9932 608.0098,69.5374 Q608.0098,71.0754 608.5134,71.8597 Q609.0169,72.644 610.0057,72.644 Q610.4696,72.644 610.906,72.4457 Q611.3424,72.2473 611.8062,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="109.375" x="632.8125" y="74.1211">AsStringIndenter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="483.3333" x2="860.4167" y1="85.0911" y2="85.0911"/><ellipse cx="493.75" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="505.2083" y="127.3722">AsStringIndenter(StringFormat)</text><ellipse cx="493.75" cy="140.2059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="505.2083" y="147.1171">AsStringIndenter(StringFormat, int)</text><ellipse cx="493.75" cy="159.9508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="505.2083" y="166.862">AsStringIndenter(StringFormat, int, PropertyFilter)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="628.125" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="631.25" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="715.625" x2="860.4167" y1="103.2969" y2="103.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="860.4167" y1="176.5706" y2="176.5706"/><ellipse cx="493.75" cy="188.029" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="505.2083" y="194.9402">boolean haveVisited(Object)</text><ellipse cx="493.75" cy="207.7738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="505.2083" y="214.6851">int indentationLevel()</text><ellipse cx="493.75" cy="227.5187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="505.2083" y="234.4299">void visited(Object)</text><ellipse cx="493.75" cy="271.1751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="505.2083" y="278.0863">boolean canExplore(Object value)</text><ellipse cx="493.75" cy="290.92" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="505.2083" y="297.8312">boolean isLeaf(Object)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="645.3125" y1="254.011" y2="254.011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="648.4375" y="257.8206">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="698.4375" x2="860.4167" y1="254.011" y2="254.011"/><ellipse cx="493.75" cy="334.5764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="505.2083" y="341.4876">void add(String line, Object... arguments)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="637.5" y1="317.4123" y2="317.4123"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="640.625" y="321.2219">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="706.25" x2="860.4167" y1="317.4123" y2="317.4123"/><ellipse cx="493.75" cy="378.2328" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="188.5417" x="505.2083" y="385.144">AsStringIndenter asString(Object)</text><ellipse cx="493.75" cy="397.9777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="346.875" x="505.2083" y="404.8889">AsStringIndenter bracketed(Iterable&lt;?&gt;, Consumer&lt;Object&gt;)</text><ellipse cx="493.75" cy="417.7226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="306.25" x="505.2083" y="424.6338">AsStringIndenter indented(String label, Runnable code)</text><ellipse cx="493.75" cy="437.4674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="237.5" x="505.2083" y="444.3787">AsStringIndenter indented(Runnable code)</text><ellipse cx="493.75" cy="457.2123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="505.2083" y="464.1235">AsStringIndenter label(String label)</text><ellipse cx="493.75" cy="476.9572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="505.2083" y="483.8684">AsStringIndenter labeled(String label, Object)</text><ellipse cx="493.75" cy="496.7021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="505.2083" y="503.6133">AsStringIndenter levels(Maximum levels)</text><ellipse cx="493.75" cy="516.4469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="505.2083" y="523.3582">AsStringIndenter pruneAt(Class&lt;?&gt; leaf)</text><ellipse cx="493.75" cy="536.1918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="505.2083" y="543.103">AsStringIndenter text(String label)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="633.3333" y1="361.0687" y2="361.0687"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="636.4583" y="364.8783">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="710.4167" x2="860.4167" y1="361.0687" y2="361.0687"/><!--MD5=[82745fb3594d66fc8679447c9e6b7ece]
reverse link AsString to AsIndentedString--><path codeLine="7" d="M320.9479,374.432 C286.9583,462.9111 229.6667,612.0674 202.1354,683.7132 " fill="none" id="AsString-backto-AsIndentedString" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="314.1667,371.7549,328.4375,354.9215,327.7813,376.984,314.1667,371.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[907c7b1b247f509ce155cf746118db29]
link AsString to StringFormat--><path codeLine="14" d="M367.3958,354.9215 C393.7917,423.6403 441.3854,547.5361 474.1458,632.8174 " fill="none" id="AsString-to-StringFormat" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="476.0833,637.859,476.6279,627.6143,474.2236,632.9941,468.8439,630.5898,476.0833,637.859" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="83.3333" x="465.625" y="600.1628">formats with</text><!--MD5=[d60679335133dfbf773691670fe887c9]
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.kernel.language.strings.conversion"
    
    interface AsString
    AsString <|- - AsIndentedString
    interface AsIndentedString
    {
        - -(conversion)- -
        +AsStringIndenter asString(StringFormat, AsStringIndenter)
    }
    
    AsString - -> StringFormat : "formats with"
    interface AsString
    {
        - -(conversion)- -
        +String asString(StringFormat)
        +String asString()
    }
    
    class AsStringIndenter
    {
        - -(constructors)- -
        +AsStringIndenter(StringFormat)
        +AsStringIndenter(StringFormat, int)
        +AsStringIndenter(StringFormat, int, PropertyFilter)
        - -
        +boolean haveVisited(Object)
        +int indentationLevel()
        +void visited(Object)
        - -(checks)- -
        +boolean canExplore(Object value)
        +boolean isLeaf(Object)
        - -(collection)- -
        +void add(String line, Object... arguments)
        - -(conversion)- -
        +AsStringIndenter asString(Object)
        +AsStringIndenter bracketed(Iterable<?>, Consumer<Object>)
        +AsStringIndenter indented(String label, Runnable code)
        +AsStringIndenter indented(Runnable code)
        +AsStringIndenter label(String label)
        +AsStringIndenter labeled(String label, Object)
        +AsStringIndenter levels(Maximum levels)
        +AsStringIndenter pruneAt(Class<?> leaf)
        +AsStringIndenter text(String label)
    }
    
    class StringFormat
    {
        - -(constructors)- -
        +StringFormat(String)
        - -
        +StringFormat of(String identifier)
        - -(checks)- -
        +boolean isHtml()
        +boolean isText()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.kernel.language.strings.conversion"
    
    interface AsString
    AsString <|- - AsIndentedString
    interface AsIndentedString
    {
        - -(conversion)- -
        +AsStringIndenter asString(StringFormat, AsStringIndenter)
    }
    
    AsString - -> StringFormat : "formats with"
    interface AsString
    {
        - -(conversion)- -
        +String asString(StringFormat)
        +String asString()
    }
    
    class AsStringIndenter
    {
        - -(constructors)- -
        +AsStringIndenter(StringFormat)
        +AsStringIndenter(StringFormat, int)
        +AsStringIndenter(StringFormat, int, PropertyFilter)
        - -
        +boolean haveVisited(Object)
        +int indentationLevel()
        +void visited(Object)
        - -(checks)- -
        +boolean canExplore(Object value)
        +boolean isLeaf(Object)
        - -(collection)- -
        +void add(String line, Object... arguments)
        - -(conversion)- -
        +AsStringIndenter asString(Object)
        +AsStringIndenter bracketed(Iterable<?>, Consumer<Object>)
        +AsStringIndenter indented(String label, Runnable code)
        +AsStringIndenter indented(Runnable code)
        +AsStringIndenter label(String label)
        +AsStringIndenter labeled(String label, Object)
        +AsStringIndenter levels(Maximum levels)
        +AsStringIndenter pruneAt(Class<?> leaf)
        +AsStringIndenter text(String label)
    }
    
    class StringFormat
    {
        - -(constructors)- -
        +StringFormat(String)
        - -
        +StringFormat of(String identifier)
        - -(checks)- -
        +boolean isHtml()
        +boolean isText()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>