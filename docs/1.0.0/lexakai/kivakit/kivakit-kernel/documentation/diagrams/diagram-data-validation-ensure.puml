@startuml

    !include lexakai.theme
    
    title "Data - State Validation"
    
    Ensure --> EnsureFailure : "reports"
    class Ensure
    {
        --
        +T ensure(Supplier<Boolean> valid, String message, Object... arguments)
        +T ensure(boolean condition, String message, Object... arguments)
        +T ensure(boolean condition, Throwable, String message, Object... arguments)
        +boolean ensure(boolean condition)
        +void ensureWithin(double expected, double actual, double maximumDifference)
        +T illegalState(String message, Object... arguments)
        +T illegalState(Throwable, String message, Object... arguments)
        #void ensureBetween(double actual, double low, double high)
        --(checks)--
        +T ensureEqual(T given, T expected, String message, Object... arguments)
        +T ensureEqual(T given, T expected)
        +boolean ensureFalse(boolean condition)
        +T ensureNotEqual(T given, T expected)
        +T ensureNotNull(T object, String message, Object... arguments)
        +T ensureNotNull(T object)
        +T ensureNull(T object, String message, Object... arguments)
        +T ensureNull(T object)
        --(command line parsing)--
        +T illegalArgument(String message, Object... arguments)
        --(functional)--
        +T unsupported()
        +T unsupported(String message, Object... arguments)
        --(io)--
        #void ensureClose(Number expected, Number actual, int numberOfDecimalsToMatch)
        --(status)--
        +T fail(Throwable, String message, Object... arguments)
        +T fail()
        +T fail(String message, Object... arguments)
    }
    
    Problem <|-- EnsureFailure
    class EnsureFailure
    {
        --(constructors)--
        +EnsureFailure()
        +EnsureFailure(String, Object)
        +EnsureFailure(Throwable, String, Object)
    }
    
@enduml

