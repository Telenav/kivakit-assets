<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="661.4583px" preserveAspectRatio="none" style="width:3173px;height:661px;background:#333333;" version="1.1" viewBox="0 0 3173 661" width="3173.9583px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="232.2917" x="1463.5417" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="209.375" x="1475" y="30.5583">Primitive Multi-Maps</text><!--MD5=[4b74817909f2df5a21a89f40177dcefd]
class PrimitiveScalarMultiMap--><rect codeLine="177" fill="#282828" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="406.25" x="1098.4375" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="406.25" x="1098.4375" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="406.25" x="1098.4375" y="187.1745"/><rect codeLine="177" fill="none" height="162.3576" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="406.25" x="1098.4375" y="164.1195"/><ellipse cx="1216.6667" cy="179.8136" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1214.0706,176.9755 L1214.0706,175.3886 L1219.4967,175.3886 L1219.4967,176.9755 L1217.6839,176.9755 L1217.6839,182.9142 L1219.4967,182.9142 L1219.4967,184.5011 L1214.0706,184.5011 L1214.0706,182.9142 L1215.8834,182.9142 L1215.8834,176.9755 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="1239.5833" y="184.5378">PrimitiveScalarMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1099.4792" x2="1503.6458" y1="195.5078" y2="195.5078"/><ellipse cx="1109.8958" cy="230.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="211.4583" x="1121.3542" y="237.7889">PrimitiveList getPrimitiveList(long key)</text><ellipse cx="1109.8958" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="248.9583" x="1121.3542" y="257.5338">PrimitiveList getSignedPrimitiveList(long key)</text><ellipse cx="1109.8958" cy="270.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1121.3542" y="277.2786">boolean isScalarKeyNull(long key)</text><ellipse cx="1109.8958" cy="290.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="373.9583" x="1121.3542" y="297.0235">void putPrimitiveList(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="1109.8958" cy="309.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="281.25" x="1121.3542" y="316.7684">void putPrimitiveList(long key, PrimitiveList values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1099.4792" x2="1267.1875" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1270.3125" y="217.5232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1335.9375" x2="1503.6458" y1="213.7136" y2="213.7136"/><!--MD5=[4a7d52b0cad6b45b436e1f956697a54c]
class IntMultiMap--><rect codeLine="13" fill="#282828" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="203.125" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="203.125" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="203.125" y="206.9661"/><rect codeLine="13" fill="none" height="122.8678" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="203.125" y="183.9111"/><ellipse cx="333.3333" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M330.7373,196.7672 L330.7373,195.1803 L336.1633,195.1803 L336.1633,196.7672 L334.3506,196.7672 L334.3506,202.7059 L336.1633,202.7059 L336.1633,204.2928 L330.7373,204.2928 L330.7373,202.7059 L332.55,202.7059 L332.55,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="356.25" y="204.3294">IntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="204.1667" x2="555.2083" y1="215.2995" y2="215.2995"/><ellipse cx="214.5833" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="226.0417" y="257.5806">IntArray get(long key)</text><ellipse cx="214.5833" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="226.0417" y="277.3254">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="214.5833" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="226.0417" y="297.0703">void putAll(long key, IntArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="204.1667" x2="345.3125" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="348.4375" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="414.0625" x2="555.2083" y1="233.5052" y2="233.5052"/><!--MD5=[48dd5ec133c92f0a147a857e74e30812]
class LongMultiMap--><rect codeLine="86" fill="#282828" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="2241.6667" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="2241.6667" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="2241.6667" y="206.9661"/><rect codeLine="86" fill="none" height="122.8678" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="2241.6667" y="183.9111"/><ellipse cx="2364.5833" cy="199.6053" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2361.9873,196.7672 L2361.9873,195.1803 L2367.4133,195.1803 L2367.4133,196.7672 L2365.6006,196.7672 L2365.6006,202.7059 L2367.4133,202.7059 L2367.4133,204.2928 L2361.9873,204.2928 L2361.9873,202.7059 L2363.8,202.7059 L2363.8,196.7672 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="2387.5" y="204.3294">LongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2242.7083" x2="2593.75" y1="215.2995" y2="215.2995"/><ellipse cx="2253.125" cy="250.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="2264.5833" y="257.5806">LongArray get(long key)</text><ellipse cx="2253.125" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="2264.5833" y="277.3254">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="2253.125" cy="290.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="2264.5833" y="297.0703">void putAll(long key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2242.7083" x2="2383.8542" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2386.9792" y="237.3149">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2452.6042" x2="2593.75" y1="233.5052" y2="233.5052"/><!--MD5=[680db2e54b1aeab47909911dbd9c18b9]
class Sized--><rect codeLine="84" fill="#282828" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2019.7917" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2019.7917" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="71.875" x="2019.7917" y="76.7578"/><rect codeLine="84" fill="none" height="48.055" id="Sized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="71.875" x="2019.7917" y="53.7028"/><ellipse cx="2034.375" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M2031.779,66.5588 L2031.779,64.9719 L2037.205,64.9719 L2037.205,66.5588 L2035.3923,66.5588 L2035.3923,72.4976 L2037.205,72.4976 L2037.205,74.0845 L2031.779,74.0845 L2031.779,72.4976 L2033.5917,72.4976 L2033.5917,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="34.375" x="2051.0417" y="74.1211">Sized</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2020.8333" x2="2090.625" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2020.8333" x2="2090.625" y1="93.4245" y2="93.4245"/><!--MD5=[a5cc76553a2d1b24632df0d2f7f0bb23]
class PrimitiveMultiMap--><rect codeLine="170" fill="#282828" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1541.6667" y="193.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1541.6667" y="193.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="171.875" x="1541.6667" y="216.862"/><rect codeLine="170" fill="none" height="103.123" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="171.875" x="1541.6667" y="193.807"/><ellipse cx="1563.75" cy="209.5011" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M1563.3431,206.2032 L1562.4947,209.9325 L1564.1976,209.9325 Z M1562.2445,204.5553 L1564.4478,204.5553 L1566.9076,213.6678 L1565.107,213.6678 L1564.5455,211.4156 L1562.1346,211.4156 L1561.5853,213.6678 L1559.7847,213.6678 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="117.7083" x="1582.0833" y="214.2253">PrimitiveMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1542.7083" x2="1712.5" y1="225.1953" y2="225.1953"/><polygon fill="#FFFF44" points="1553.125,255.3569,1557.2917,259.5235,1553.125,263.6902,1548.9583,259.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1564.5833" y="267.4764">PrimitiveMultiMap()</text><polygon fill="#FFFF44" points="1553.125,275.1017,1557.2917,279.2684,1553.125,283.4351,1548.9583,279.2684" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="1564.5833" y="287.2213">PrimitiveMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1542.7083" x2="1583.8542" y1="243.4011" y2="243.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1586.9792" y="247.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1671.3542" x2="1712.5" y1="243.4011" y2="243.4011"/><!--MD5=[7995b2c959e8c01f457074ea15d83b1b]
class IntToByteFixedMultiMap--><rect codeLine="23" fill="#282828" height="225.7589" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="523.9583" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="523.9583" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="523.9583" y="431.9661"/><rect codeLine="23" fill="none" height="225.7589" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="523.9583" y="408.9111"/><ellipse cx="614.5833" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M616.4937,429.0304 Q616.0665,429.2501 615.5965,429.3599 Q615.1265,429.4698 614.6077,429.4698 Q612.7645,429.4698 611.794,428.2552 Q610.8236,427.0406 610.8236,424.7457 Q610.8236,422.4447 611.794,421.2301 Q612.7645,420.0155 614.6077,420.0155 Q615.1265,420.0155 615.6026,420.1253 Q616.0787,420.2352 616.4937,420.4549 L616.4937,422.4569 Q616.0299,422.0296 615.5935,421.8313 Q615.1571,421.6329 614.6932,421.6329 Q613.7044,421.6329 613.2009,422.4172 Q612.6973,423.2015 612.6973,424.7457 Q612.6973,426.2838 613.2009,427.0681 Q613.7044,427.8524 614.6932,427.8524 Q615.1571,427.8524 615.5935,427.654 Q616.0299,427.4556 616.4937,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="157.2917" x="637.5" y="429.3294">IntToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="525" x2="876.0417" y1="440.2995" y2="440.2995"/><ellipse cx="535.4167" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="546.875" y="482.5806">IntToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525" x2="656.7708" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="659.8958" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="744.2708" x2="876.0417" y1="458.5052" y2="458.5052"/><ellipse cx="535.4167" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="546.875" y="526.237">boolean containsKey(int key)</text><ellipse cx="535.4167" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="546.875" y="545.9819">ByteArray get(int key)</text><ellipse cx="535.4167" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="546.875" y="565.7267">IntIterator keys()</text><ellipse cx="535.4167" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="546.875" y="585.4716">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="535.4167" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="546.875" y="605.2165">void putAll(int key, ByteArray values)</text><ellipse cx="535.4167" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="546.875" y="624.9613">void putAll(int key, byte[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="525" x2="666.1458" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="669.2708" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="734.8958" x2="876.0417" y1="502.1617" y2="502.1617"/><!--MD5=[0c99b87e1465ab30b0b6d2d6a13d9fa0]
class IntToIntFixedMultiMap--><rect codeLine="39" fill="#282828" height="206.014" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="441.862"/><rect codeLine="39" fill="none" height="206.014" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="7.2917" y="418.807"/><ellipse cx="41.5625" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M43.4729,438.9262 Q43.0457,439.1459 42.5757,439.2558 Q42.1057,439.3656 41.5869,439.3656 Q39.7437,439.3656 38.7732,438.151 Q37.8027,436.9364 37.8027,434.6415 Q37.8027,432.3405 38.7732,431.1259 Q39.7437,429.9113 41.5869,429.9113 Q42.1057,429.9113 42.5818,430.0212 Q43.0579,430.131 43.4729,430.3507 L43.4729,432.3527 Q43.009,431.9255 42.5726,431.7271 Q42.1362,431.5287 41.6724,431.5287 Q40.6836,431.5287 40.1801,432.313 Q39.6765,433.0973 39.6765,434.6415 Q39.6765,436.1796 40.1801,436.9639 Q40.6836,437.7482 41.6724,437.7482 Q42.1362,437.7482 42.5726,437.5498 Q43.009,437.3515 43.4729,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="146.875" x="62.6042" y="439.2253">IntToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="234.375" y1="450.1953" y2="450.1953"/><ellipse cx="18.75" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="30.2083" y="492.4764">IntToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="77.6042" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="80.7292" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="165.1042" x2="234.375" y1="468.4011" y2="468.4011"/><ellipse cx="18.75" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="30.2083" y="536.1328">boolean containsKey(int key)</text><ellipse cx="18.75" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="30.2083" y="555.8777">IntArray get(int key)</text><ellipse cx="18.75" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="30.2083" y="575.6226">IntIterator keys()</text><ellipse cx="18.75" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="30.2083" y="595.3674">void putAll(int key, IntArray values)</text><ellipse cx="18.75" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="30.2083" y="615.1123">void putAll(int key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="86.9792" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="90.1042" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="155.7292" x2="234.375" y1="512.0575" y2="512.0575"/><!--MD5=[3f4bc82daf44942da3f53ac3b6d5365d]
class IntToLongFixedMultiMap--><rect codeLine="54" fill="#282828" height="206.014" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2082.8125" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2082.8125" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="2082.8125" y="441.862"/><rect codeLine="54" fill="none" height="206.014" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="2082.8125" y="418.807"/><ellipse cx="2116.6146" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2118.525,438.9262 Q2118.0977,439.1459 2117.6278,439.2558 Q2117.1578,439.3656 2116.639,439.3656 Q2114.7957,439.3656 2113.8253,438.151 Q2112.8548,436.9364 2112.8548,434.6415 Q2112.8548,432.3405 2113.8253,431.1259 Q2114.7957,429.9113 2116.639,429.9113 Q2117.1578,429.9113 2117.6339,430.0212 Q2118.1099,430.131 2118.525,430.3507 L2118.525,432.3527 Q2118.0611,431.9255 2117.6247,431.7271 Q2117.1883,431.5287 2116.7244,431.5287 Q2115.7357,431.5287 2115.2321,432.313 Q2114.7286,433.0973 2114.7286,434.6415 Q2114.7286,436.1796 2115.2321,436.9639 Q2115.7357,437.7482 2116.7244,437.7482 Q2117.1883,437.7482 2117.6247,437.5498 Q2118.0611,437.3515 2118.525,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="2137.5521" y="439.2253">IntToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2083.8542" x2="2323.4375" y1="450.1953" y2="450.1953"/><ellipse cx="2094.2708" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2105.7292" y="492.4764">IntToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2083.8542" x2="2159.8958" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2163.0208" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2247.3958" x2="2323.4375" y1="468.4011" y2="468.4011"/><ellipse cx="2094.2708" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2105.7292" y="536.1328">boolean containsKey(int key)</text><ellipse cx="2094.2708" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2105.7292" y="555.8777">LongArray get(int key)</text><ellipse cx="2094.2708" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2105.7292" y="575.6226">IntIterator keys()</text><ellipse cx="2094.2708" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2105.7292" y="595.3674">void putAll(int key, long[] values)</text><ellipse cx="2094.2708" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2105.7292" y="615.1123">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2083.8542" x2="2169.2708" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2172.3958" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2238.0208" x2="2323.4375" y1="512.0575" y2="512.0575"/><!--MD5=[1c02724945c6df932588753ceecaf5f0]
class IntToPackedArrayFixedMultiMap--><rect codeLine="69" fill="#282828" height="265.2486" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2361.4583" y="389.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2361.4583" y="389.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="2361.4583" y="412.1745"/><rect codeLine="69" fill="none" height="265.2486" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="2361.4583" y="389.1195"/><ellipse cx="2521.3542" cy="404.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2523.2646,409.2387 Q2522.8373,409.4584 2522.3674,409.5683 Q2521.8974,409.6781 2521.3786,409.6781 Q2519.5353,409.6781 2518.5649,408.4635 Q2517.5944,407.2489 2517.5944,404.954 Q2517.5944,402.653 2518.5649,401.4384 Q2519.5353,400.2238 2521.3786,400.2238 Q2521.8974,400.2238 2522.3735,400.3337 Q2522.8495,400.4435 2523.2646,400.6632 L2523.2646,402.6652 Q2522.8007,402.238 2522.3643,402.0396 Q2521.9279,401.8412 2521.464,401.8412 Q2520.4753,401.8412 2519.9717,402.6255 Q2519.4682,403.4098 2519.4682,404.954 Q2519.4682,406.4921 2519.9717,407.2764 Q2520.4753,408.0607 2521.464,408.0607 Q2521.9279,408.0607 2522.3643,407.8623 Q2522.8007,407.664 2523.2646,407.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="208.3333" x="2544.2708" y="409.5378">IntToPackedArrayFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2362.5" x2="2903.125" y1="420.5078" y2="420.5078"/><ellipse cx="2372.9167" cy="455.8777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="2384.375" y="462.7889">IntToPackedArrayFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2362.5" x2="2589.0625" y1="438.7136" y2="438.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2592.1875" y="442.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2676.5625" x2="2903.125" y1="438.7136" y2="438.7136"/><ellipse cx="2372.9167" cy="499.5341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="510.4167" x="2384.375" y="506.4453">IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)</text><ellipse cx="2372.9167" cy="519.279" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="2384.375" y="526.1902">boolean containsKey(int key)</text><ellipse cx="2372.9167" cy="539.0238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="2384.375" y="545.9351">LongArray get(int key)</text><ellipse cx="2372.9167" cy="558.7687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2384.375" y="565.6799">LongArray getSigned(int key)</text><ellipse cx="2372.9167" cy="578.5136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="2384.375" y="585.4248">IntIterator keys()</text><ellipse cx="2372.9167" cy="598.2585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="2384.375" y="605.1697">IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)</text><ellipse cx="2372.9167" cy="618.0033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2384.375" y="624.9146">void putAll(int key, long[] values)</text><ellipse cx="2372.9167" cy="637.7482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="2384.375" y="644.6594">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2362.5" x2="2598.4375" y1="482.37" y2="482.37"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2601.5625" y="486.1796">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2667.1875" x2="2903.125" y1="482.37" y2="482.37"/><!--MD5=[473ca2dc791c307a8457cba60dc406cc]
class LongToByteFixedMultiMap--><rect codeLine="96" fill="#282828" height="225.7589" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="913.5417" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="913.5417" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="913.5417" y="431.9661"/><rect codeLine="96" fill="none" height="225.7589" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="913.5417" y="408.9111"/><ellipse cx="996.875" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M998.7854,429.0304 Q998.3582,429.2501 997.8882,429.3599 Q997.4182,429.4698 996.8994,429.4698 Q995.0562,429.4698 994.0857,428.2552 Q993.1152,427.0406 993.1152,424.7457 Q993.1152,422.4447 994.0857,421.2301 Q995.0562,420.0155 996.8994,420.0155 Q997.4182,420.0155 997.8943,420.1253 Q998.3704,420.2352 998.7854,420.4549 L998.7854,422.4569 Q998.3215,422.0296 997.8851,421.8313 Q997.4487,421.6329 996.9849,421.6329 Q995.9961,421.6329 995.4926,422.4172 Q994.989,423.2015 994.989,424.7457 Q994.989,426.2838 995.4926,427.0681 Q995.9961,427.8524 996.9849,427.8524 Q997.4487,427.8524 997.8851,427.654 Q998.3215,427.4556 998.7854,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="171.875" x="1019.7917" y="429.3294">LongToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="914.5833" x2="1265.625" y1="440.2995" y2="440.2995"/><ellipse cx="925" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="936.4583" y="482.5806">LongToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="914.5833" x2="1046.3542" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1049.4792" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1133.8542" x2="1265.625" y1="458.5052" y2="458.5052"/><ellipse cx="925" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="936.4583" y="526.237">boolean containsKey(long key)</text><ellipse cx="925" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="936.4583" y="545.9819">ByteArray get(long key)</text><ellipse cx="925" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="936.4583" y="565.7267">LongIterator keys()</text><ellipse cx="925" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="936.4583" y="585.4716">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="925" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="936.4583" y="605.2165">void putAll(long key, byte[] values)</text><ellipse cx="925" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="936.4583" y="624.9613">void putAll(long key, ByteArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="914.5833" x2="1055.7292" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1058.8542" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1124.4792" x2="1265.625" y1="502.1617" y2="502.1617"/><!--MD5=[4920d5307010b5c3664756a173cd7c76]
class LongToIntFixedMultiMap--><rect codeLine="111" fill="#282828" height="225.7589" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="1303.125" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="1303.125" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="1303.125" y="431.9661"/><rect codeLine="111" fill="none" height="225.7589" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="1303.125" y="408.9111"/><ellipse cx="1391.6667" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1393.5771,429.0304 Q1393.1498,429.2501 1392.6799,429.3599 Q1392.2099,429.4698 1391.6911,429.4698 Q1389.8478,429.4698 1388.8774,428.2552 Q1387.9069,427.0406 1387.9069,424.7457 Q1387.9069,422.4447 1388.8774,421.2301 Q1389.8478,420.0155 1391.6911,420.0155 Q1392.2099,420.0155 1392.686,420.1253 Q1393.162,420.2352 1393.5771,420.4549 L1393.5771,422.4569 Q1393.1132,422.0296 1392.6768,421.8313 Q1392.2404,421.6329 1391.7765,421.6329 Q1390.7878,421.6329 1390.2842,422.4172 Q1389.7807,423.2015 1389.7807,424.7457 Q1389.7807,426.2838 1390.2842,427.0681 Q1390.7878,427.8524 1391.7765,427.8524 Q1392.2404,427.8524 1392.6768,427.654 Q1393.1132,427.4556 1393.5771,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="1414.5833" y="429.3294">LongToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1304.1667" x2="1655.2083" y1="440.2995" y2="440.2995"/><ellipse cx="1314.5833" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="1326.0417" y="482.5806">LongToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1304.1667" x2="1435.9375" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1439.0625" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1523.4375" x2="1655.2083" y1="458.5052" y2="458.5052"/><ellipse cx="1314.5833" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1326.0417" y="526.237">boolean containsKey(long key)</text><ellipse cx="1314.5833" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1326.0417" y="545.9819">IntArray get(long key)</text><ellipse cx="1314.5833" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1326.0417" y="565.7267">LongIterator keys()</text><ellipse cx="1314.5833" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="1326.0417" y="585.4716">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="1314.5833" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="1326.0417" y="605.2165">void putAll(long key, IntArray values)</text><ellipse cx="1314.5833" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="1326.0417" y="624.9613">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1304.1667" x2="1445.3125" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1448.4375" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1514.0625" x2="1655.2083" y1="502.1617" y2="502.1617"/><!--MD5=[f812a7756caac12083cc8aed90c40b12]
class LongToIntMultiMap--><rect codeLine="127" fill="#282828" height="206.014" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="441.862"/><rect codeLine="127" fill="none" height="206.014" id="LongToIntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="271.875" y="418.807"/><ellipse cx="309.4271" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M311.3375,438.9262 Q310.9102,439.1459 310.4403,439.2558 Q309.9703,439.3656 309.4515,439.3656 Q307.6082,439.3656 306.6378,438.151 Q305.6673,436.9364 305.6673,434.6415 Q305.6673,432.3405 306.6378,431.1259 Q307.6082,429.9113 309.4515,429.9113 Q309.9703,429.9113 310.4464,430.0212 Q310.9224,430.131 311.3375,430.3507 L311.3375,432.3527 Q310.8736,431.9255 310.4372,431.7271 Q310.0008,431.5287 309.5369,431.5287 Q308.5482,431.5287 308.0446,432.313 Q307.5411,433.0973 307.5411,434.6415 Q307.5411,436.1796 308.0446,436.9639 Q308.5482,437.7482 309.5369,437.7482 Q310.0008,437.7482 310.4372,437.5498 Q310.8736,437.3515 311.3375,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="127.0833" x="331.1979" y="439.2253">LongToIntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="272.9167" x2="486.4583" y1="450.1953" y2="450.1953"/><ellipse cx="283.3333" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="294.7917" y="492.4764">LongToIntMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="272.9167" x2="335.9375" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="339.0625" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="423.4375" x2="486.4583" y1="468.4011" y2="468.4011"/><ellipse cx="283.3333" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="294.7917" y="536.1328">void add(long key, int value)</text><ellipse cx="283.3333" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="294.7917" y="555.8777">boolean containsKey(long key)</text><ellipse cx="283.3333" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="294.7917" y="575.6226">IntIterator iterator(long key)</text><ellipse cx="283.3333" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="294.7917" y="595.3674">LongIterator keys()</text><ellipse cx="283.3333" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="294.7917" y="615.1123">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="272.9167" x2="345.3125" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="348.4375" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="414.0625" x2="486.4583" y1="512.0575" y2="512.0575"/><!--MD5=[3d6da11c5d686df0fe655d1f9f470d58]
class LongToLongFixedMultiMap--><rect codeLine="141" fill="#282828" height="225.7589" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="1692.7083" y="408.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="1692.7083" y="408.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="353.125" x="1692.7083" y="431.9661"/><rect codeLine="141" fill="none" height="225.7589" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="353.125" x="1692.7083" y="408.9111"/><ellipse cx="1773.9583" cy="424.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1775.8687,429.0304 Q1775.4415,429.2501 1774.9715,429.3599 Q1774.5015,429.4698 1773.9827,429.4698 Q1772.1395,429.4698 1771.169,428.2552 Q1770.1986,427.0406 1770.1986,424.7457 Q1770.1986,422.4447 1771.169,421.2301 Q1772.1395,420.0155 1773.9827,420.0155 Q1774.5015,420.0155 1774.9776,420.1253 Q1775.4537,420.2352 1775.8687,420.4549 L1775.8687,422.4569 Q1775.4049,422.0296 1774.9685,421.8313 Q1774.5321,421.6329 1774.0682,421.6329 Q1773.0794,421.6329 1772.5759,422.4172 Q1772.0723,423.2015 1772.0723,424.7457 Q1772.0723,426.2838 1772.5759,427.0681 Q1773.0794,427.8524 1774.0682,427.8524 Q1774.5321,427.8524 1774.9685,427.654 Q1775.4049,427.4556 1775.8687,427.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="176.0417" x="1796.875" y="429.3294">LongToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1693.75" x2="2044.7917" y1="440.2995" y2="440.2995"/><ellipse cx="1704.1667" cy="475.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1715.625" y="482.5806">LongToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1693.75" x2="1825.5208" y1="458.5052" y2="458.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1828.6458" y="462.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1913.0208" x2="2044.7917" y1="458.5052" y2="458.5052"/><ellipse cx="1704.1667" cy="519.3258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1715.625" y="526.237">boolean containsKey(long key)</text><ellipse cx="1704.1667" cy="539.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="1715.625" y="545.9819">LongArray get(long key)</text><ellipse cx="1704.1667" cy="558.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1715.625" y="565.7267">LongIterator keys()</text><ellipse cx="1704.1667" cy="578.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="1715.625" y="585.4716">void putAll(long key, List&lt;? extends LongValued&gt; values)</text><ellipse cx="1704.1667" cy="598.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="1715.625" y="605.2165">void putAll(long key, LongArray values)</text><ellipse cx="1704.1667" cy="618.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="1715.625" y="624.9613">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1693.75" x2="1834.8958" y1="502.1617" y2="502.1617"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1838.0208" y="505.9713">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1903.6458" x2="2044.7917" y1="502.1617" y2="502.1617"/><!--MD5=[54cb38786c5431f48ed21fde5339d796]
class LongToLongMultiMap--><rect codeLine="157" fill="#282828" height="206.014" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2940.625" y="418.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2940.625" y="418.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="2940.625" y="441.862"/><rect codeLine="157" fill="none" height="206.014" id="LongToLongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="2940.625" y="418.807"/><ellipse cx="2976.3021" cy="434.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2978.2125,438.9262 Q2977.7852,439.1459 2977.3153,439.2558 Q2976.8453,439.3656 2976.3265,439.3656 Q2974.4832,439.3656 2973.5128,438.151 Q2972.5423,436.9364 2972.5423,434.6415 Q2972.5423,432.3405 2973.5128,431.1259 Q2974.4832,429.9113 2976.3265,429.9113 Q2976.8453,429.9113 2977.3214,430.0212 Q2977.7974,430.131 2978.2125,430.3507 L2978.2125,432.3527 Q2977.7486,431.9255 2977.3122,431.7271 Q2976.8758,431.5287 2976.4119,431.5287 Q2975.4232,431.5287 2974.9196,432.313 Q2974.4161,433.0973 2974.4161,434.6415 Q2974.4161,436.1796 2974.9196,436.9639 Q2975.4232,437.7482 2976.4119,437.7482 Q2976.8758,437.7482 2977.3122,437.5498 Q2977.7486,437.3515 2978.2125,436.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="141.6667" x="2997.6563" y="439.2253">LongToLongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2941.6667" x2="3165.625" y1="450.1953" y2="450.1953"/><ellipse cx="2952.0833" cy="485.5652" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="2963.5417" y="492.4764">LongToLongMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2941.6667" x2="3009.8958" y1="468.4011" y2="468.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="3013.0208" y="472.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3097.3958" x2="3165.625" y1="468.4011" y2="468.4011"/><ellipse cx="2952.0833" cy="529.2216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="2963.5417" y="536.1328">void add(long key, long value)</text><ellipse cx="2952.0833" cy="548.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="2963.5417" y="555.8777">boolean containsKey(long key)</text><ellipse cx="2952.0833" cy="568.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="2963.5417" y="575.6226">LongIterator iterator(long key)</text><ellipse cx="2952.0833" cy="588.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="2963.5417" y="595.3674">LongIterator keys()</text><ellipse cx="2952.0833" cy="608.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="2963.5417" y="615.1123">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2941.6667" x2="3019.2708" y1="512.0575" y2="512.0575"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="3022.3958" y="515.8671">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="3088.0208" x2="3165.625" y1="512.0575" y2="512.0575"/><!--MD5=[7dc83dba370c73a9f85e44bd982e6617]
class PrimitiveMap--><rect fill="#282828" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1566.6667" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1566.6667" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="121.875" x="1566.6667" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="121.875" x="1566.6667" y="53.7028"/><ellipse cx="1581.25" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1583.1604,73.822 Q1582.7332,74.0417 1582.2632,74.1516 Q1581.7932,74.2615 1581.2744,74.2615 Q1579.4312,74.2615 1578.4607,73.0469 Q1577.4902,71.8323 1577.4902,69.5374 Q1577.4902,67.2363 1578.4607,66.0217 Q1579.4312,64.8071 1581.2744,64.8071 Q1581.7932,64.8071 1582.2693,64.917 Q1582.7454,65.0269 1583.1604,65.2466 L1583.1604,67.2485 Q1582.6965,66.8213 1582.2601,66.6229 Q1581.8237,66.4246 1581.3599,66.4246 Q1580.3711,66.4246 1579.8676,67.2089 Q1579.364,67.9932 1579.364,69.5374 Q1579.364,71.0754 1579.8676,71.8597 Q1580.3711,72.644 1581.3599,72.644 Q1581.8237,72.644 1582.2601,72.4457 Q1582.6965,72.2473 1583.1604,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="84.375" x="1597.9167" y="74.1211">PrimitiveMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1567.7083" x2="1687.5" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1567.7083" x2="1687.5" y1="93.4245" y2="93.4245"/><!--MD5=[1a7d64ae7d6032b4ac7c56e7ae9b010e]
reverse link Sized to IntMultiMap--><path codeLine="12" d="M1997.3854,83.2653 C1845.8646,95.2132 1427.4792,128.984 1079.6875,164.1195 C901.3958,182.1299 697.9167,205.7965 556.4792,222.7445 " fill="none" id="Sized-backto-IntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1996.4479,76.0153,2017.7813,81.6507,1997.5833,90.557,1996.4479,76.0153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[770650b6aa5dc9033e07e0c3b0aa7834]
reverse link PrimitiveMultiMap to IntToByteFixedMultiMap--><path codeLine="21" d="M1554.1771,310.109 C1543.9896,316.5778 1533.2813,322.3278 1522.3958,326.6195 C1261.8125,429.2965 1158.6979,293.859 895.3125,389.1195 C880.7188,394.4007 866.1771,401.0153 851.9688,408.4528 " fill="none" id="PrimitiveMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1549.8646,304.2236,1571.1354,298.3278,1558.1875,316.2028,1549.8646,304.2236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfe75cc93891e215cab385e322d933a5]
reverse link PrimitiveScalarMultiMap to IntToByteFixedMultiMap--><path codeLine="22" d="M1076.8125,313.8174 C1016.5625,334.9736 952.3542,360.4111 895.3125,389.1195 C883.5521,395.0361 871.6563,401.557 859.8646,408.432 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1074.375,306.9424,1096.4479,307.0257,1079.1354,320.7236,1074.375,306.9424" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[40e566c2ad01f56e72d1dfc432edcffd]
reverse link PrimitiveMultiMap to IntToIntFixedMultiMap--><path codeLine="36" d="M1555.3229,310.0361 C1544.8229,316.6715 1533.7188,322.484 1522.3958,326.6195 C1257.25,423.4945 511.8229,274.9632 253.6458,389.1195 C237.1875,396.3903 221.6563,406.7132 207.4063,418.4007 " fill="none" id="PrimitiveMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1550.9271,304.2236,1572.1875,298.3174,1559.25,316.1924,1550.9271,304.2236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b74cfb8c1523d3d80b86cd2cbb5c95b3]
reverse link IntMultiMap to IntToIntFixedMultiMap--><path codeLine="37" d="M307.0417,323.5986 C279.375,352.9945 247.3958,386.9736 217.8542,418.359 " fill="none" id="IntMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="301.6875,318.6507,321.2708,308.4736,312.3021,328.6403,301.6875,318.6507" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ca7d41135a34a5c01f19527588a0cc1f]
reverse link PrimitiveScalarMultiMap to IntToIntFixedMultiMap--><path codeLine="38" d="M1076.0521,269.4007 C790.2083,299.7445 325.75,353.4528 253.6458,389.1195 C238.1042,396.807 223.2708,407.0361 209.5521,418.4111 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1074.9688,262.1924,1096.4583,267.2445,1076.5,276.6924,1074.9688,262.1924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3857c396d8df5291198e30b6d54db019]
reverse link PrimitiveMultiMap to IntToLongFixedMultiMap--><path codeLine="51" d="M1735.7604,267.7757 C1827.6563,289.109 1960.7083,327.682 2064.0625,389.1195 C2078.2396,397.5465 2092.1563,407.6403 2105.375,418.4528 " fill="none" id="PrimitiveMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1734.1667,274.8903,1715.4479,263.1924,1737.375,260.6611,1734.1667,274.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b208f5301ffb6aa1d0864148c88413a3]
reverse link LongMultiMap to IntToLongFixedMultiMap--><path codeLine="52" d="M2356.9271,324.8278 C2334.1667,353.9424 2308,387.4111 2283.8021,418.359 " fill="none" id="LongMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2351.0625,320.4945,2369.6354,308.5674,2362.5521,329.4736,2351.0625,320.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9e29c53af3e023a1cc72b386db0c1677]
reverse link PrimitiveScalarMultiMap to IntToLongFixedMultiMap--><path codeLine="53" d="M1526.5625,326.8174 C1763.9479,376.682 1851.1146,289.9424 2064.0625,389.1195 C2080.375,396.7132 2096.0208,406.9736 2110.5417,418.4215 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1525.3229,334.0049,1506.5729,322.3486,1528.5,319.7757,1525.3229,334.0049" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0a9b88a08c1b70fdd1382184510f9c97]
reverse link PrimitiveMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="66" d="M1736.0833,260.1924 C1877.8229,279.984 2132.6458,321.6715 2342.1875,389.1195 C2348.5208,391.1611 2354.8854,393.2965 2361.2917,395.5153 " fill="none" id="PrimitiveMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1735.1146,267.4215,1715.4688,257.3695,1737.1042,252.9736,1735.1146,267.4215" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[739e3bc5dd5521c98c7ebbf11aa9bab5]
reverse link LongMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="67" d="M2479.4479,324.7132 C2495.1042,344.7445 2512.3854,366.8486 2529.5313,388.7861 " fill="none" id="LongMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2473.9063,329.4736,2466.8229,308.5674,2485.3958,320.4945,2473.9063,329.4736" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1814b039795f1d96cf6a4878df1f11c8]
reverse link PrimitiveScalarMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="68" d="M1526.6563,326.8486 C1884.5833,399.2236 1995.5729,300.2653 2342.1875,389.1195 C2348.4896,390.734 2354.8333,392.484 2361.1875,394.3382 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1525.4063,334.0361,1506.5104,322.6403,1528.3958,319.7653,1525.4063,334.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[665d9528b330b09b5b48766def62ecb6]
reverse link Sized to LongMultiMap--><path codeLine="85" d="M2112.3854,104.5882 C2158.5417,125.682 2225.5729,156.307 2285.1354,183.5153 " fill="none" id="Sized-backto-LongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2109.5,111.2861,2093.5833,95.9945,2115.5625,98.0257,2109.5,111.2861" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[464a3c0904bac3ae1c62d95220e1b4a7]
reverse link PrimitiveMultiMap to LongToByteFixedMultiMap--><path codeLine="94" d="M1551.0833,310.057 C1541.75,316.2028 1532.0833,321.8903 1522.3958,326.6195 C1424.3229,374.5257 1384.2917,344.0153 1284.8958,389.1195 C1272.25,394.859 1259.5313,401.3903 1246.9792,408.4215 " fill="none" id="PrimitiveMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1546.5625,304.3278,1567.8021,298.3174,1554.9375,316.2549,1546.5625,304.3278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dcf07fe2b95df686e43efa64177c11db]
reverse link PrimitiveScalarMultiMap to LongToByteFixedMultiMap--><path codeLine="95" d="M1226.0313,344.4528 C1209.9688,365.307 1192.8854,387.4736 1176.4583,408.807 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1220.0938,340.2132,1238.5833,328.1611,1231.6458,349.109,1220.0938,340.2132" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b6127586369a48f529fa8b0b8768bc87]
reverse link PrimitiveMultiMap to LongToIntFixedMultiMap--><path codeLine="109" d="M1589.6979,316.7549 C1574.6667,344.6507 1557,377.432 1540.2708,408.4632 " fill="none" id="PrimitiveMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1583.0833,313.6611,1599.3854,298.7861,1595.9167,320.5778,1583.0833,313.6611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5ba56ab4753696a05af8ee779fdc3a81]
reverse link PrimitiveScalarMultiMap to LongToIntFixedMultiMap--><path codeLine="110" d="M1365.8021,345.4007 C1379.1563,365.9736 1393.3125,387.7965 1406.9479,408.807 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1359.8854,349.682,1354.6563,328.234,1372.1146,341.734,1359.8854,349.682" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[abe75afdbc3ea6e7aff1c1c1d12d537a]
reverse link PrimitiveMultiMap to LongToIntMultiMap--><path codeLine="124" d="M1555.2813,309.9111 C1544.7917,316.557 1533.6979,322.4111 1522.3958,326.6195 C1310.2708,405.5882 711.0521,293.8382 505.7292,389.1195 C489.9375,396.4528 475.1146,406.7132 461.5625,418.307 " fill="none" id="PrimitiveMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1550.875,304.0882,1572.1354,298.1611,1559.2083,316.057,1550.875,304.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5b3d3871f42ea3109effd0d1ad5b1512]
reverse link IntMultiMap to LongToIntMultiMap--><path codeLine="125" d="M379.6875,329.3903 C379.6875,357.4111 379.6875,389.0153 379.6875,418.359 " fill="none" id="IntMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="372.3958,329.734,379.6875,308.9007,386.9792,329.734,372.3958,329.734" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[deb2b9b86d6f9fe1788c14fdf0d7f203]
reverse link PrimitiveScalarMultiMap to LongToIntMultiMap--><path codeLine="126" d="M1075.9271,271.0674 C876.2917,295.734 602.1458,337.3799 505.7292,389.1195 C491.0833,396.9736 477.1458,407.1507 464.2396,418.3695 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1074.9271,263.8486,1096.4896,268.557,1076.6875,278.3278,1074.9271,263.8486" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3c0bce9bbf3284ca7c87272c80f02058]
reverse link PrimitiveMultiMap to LongToLongFixedMultiMap--><path codeLine="139" d="M1687.0521,313.9215 C1712.1354,342.4215 1742.0313,376.3799 1770.2813,408.4632 " fill="none" id="PrimitiveMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1681.8333,319.0361,1673.5313,298.5778,1692.7708,309.4007,1681.8333,319.0361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ff0ad0b37dad764f0dc7a89862a469b3]
reverse link PrimitiveScalarMultiMap to LongToLongFixedMultiMap--><path codeLine="140" d="M1525.7604,329.859 C1595.6563,356.3486 1658.7083,380.9007 1674.4792,389.1195 C1685.9792,395.109 1697.6146,401.6403 1709.1875,408.484 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1523.2917,336.7236,1506.3854,322.5361,1528.4479,323.0778,1523.2917,336.7236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9958715f31b6e54ca599fd7b793c6070]
reverse link PrimitiveMultiMap to LongToLongMultiMap--><path codeLine="154" d="M1735.8438,262.4632 C1855.1042,279.7965 2052.6563,307.4945 2223.4375,326.6195 C2378.4167,343.9736 2781.1875,322.9424 2922.3958,389.1195 C2938.3333,396.5882 2953.4271,406.8486 2967.3229,418.3695 " fill="none" id="PrimitiveMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1734.9167,269.6924,1715.3542,259.4736,1737.0208,255.2653,1734.9167,269.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[4d9a3dece8a4a24f432bf94c4d13e872]
reverse link LongMultiMap to LongToLongMultiMap--><path codeLine="155" d="M2616.6875,278.1299 C2713.5833,299.5465 2829.0833,334.2445 2922.3958,389.1195 C2936.4479,397.3903 2950.0729,407.5153 2962.875,418.4632 " fill="none" id="LongMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="2615.4271,285.3174,2596.5729,273.8278,2618.4792,271.057,2615.4271,285.3174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[677cf828ea3df87ae06e94fd094142e9]
reverse link PrimitiveScalarMultiMap to LongToLongMultiMap--><path codeLine="156" d="M1526.9479,326.5674 C1863.9896,381.8278 2644,266.1299 2922.3958,389.1195 C2938.7917,396.359 2954.2396,406.6611 2968.3958,418.3382 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1525.6667,333.7445,1506.4688,322.859,1528.2604,319.3903,1525.6667,333.7445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[c3f63cf971db9fe9151941242150ac8a]
reverse link PrimitiveMap to PrimitiveMultiMap--><path codeLine="169" d="M1627.6042,124.4528 C1627.6042,145.859 1627.6042,171.432 1627.6042,193.4528 " fill="none" id="PrimitiveMap-backto-PrimitiveMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1620.3125,124.4945,1627.6042,103.6611,1634.8958,124.4945,1620.3125,124.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[57245e909101835becd01cd2e78ddbf8]
@startuml

    !include lexakai.theme
    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, IntArray values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, IntArray values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends LongValued> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "Primitive Multi-Maps"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    interface Sized
    Sized <|- - IntMultiMap
    interface IntMultiMap
    {
        - -(collection)- -
        +IntArray get(long key)
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, IntArray values)
    }
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    interface Sized
    Sized <|- - LongMultiMap
    interface LongMultiMap
    {
        - -(collection)- -
        +LongArray get(long key)
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, IntArray values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToIntMultiMap
    IntMultiMap <|- - LongToIntMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntMultiMap
    class LongToIntMultiMap
    {
        - -(constructors)- -
        +LongToIntMultiMap(String)
        - -(collection)- -
        +void add(long key, int value)
        +boolean containsKey(long key)
        +IntIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends LongValued> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongMultiMap
    LongMultiMap <|- - LongToLongMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongMultiMap
    class LongToLongMultiMap
    {
        - -(constructors)- -
        +LongToLongMultiMap(String)
        - -(collection)- -
        +void add(long key, long value)
        +boolean containsKey(long key)
        +LongIterator iterator(long key)
        +LongIterator keys()
        +void putAll(long key, long[] values)
    }
    
    PrimitiveMap <|- - PrimitiveMultiMap
    abstract class PrimitiveMultiMap
    {
        - -(constructors)- -
        #PrimitiveMultiMap()
        #PrimitiveMultiMap(String)
    }
    
    interface PrimitiveScalarMultiMap
    {
        - -(collection)- -
        +PrimitiveList getPrimitiveList(long key)
        +PrimitiveList getSignedPrimitiveList(long key)
        +boolean isScalarKeyNull(long key)
        +void putPrimitiveList(long key, List<? extends LongValued> values)
        +void putPrimitiveList(long key, PrimitiveList values)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>