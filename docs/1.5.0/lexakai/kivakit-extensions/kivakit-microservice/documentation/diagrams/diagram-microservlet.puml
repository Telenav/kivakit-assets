@startuml

    !include lexakai.theme
    
    title "Microservlets"
    
    abstract BaseComponent
    abstract BaseMicroservletResponse
    
    interface MicroservletResponse
    interface Named
    interface MicroservletRequestHandler
    interface MicroservletRequest
    
    BaseComponent <|-- BaseMicroservletRequest
    MicroservletRequest <|-- BaseMicroservletRequest
    MicroservletRequestHandler <|-- BaseMicroservletRequest
    abstract class BaseMicroservletRequest
    {
        --(time)--
        #Frequency statisticsReportingFrequency()
    }
    
    BaseComponent <|-- BaseMicroservletResponse
    MicroservletResponse <|-- BaseMicroservletResponse
    abstract class BaseMicroservletResponse
    {
        --(constructors)--
        +BaseMicroservletResponse()
        +BaseMicroservletResponse(Result<?>)
    }
    
    BaseComponent <|-- Microservlet
    Named <|-- Microservlet
    Microservlet --> JettyMicroservletRequestCycle : "attaches"
    Microservlet --> MicroservletRequest : "references sub-class"
    Microservlet --> MicroservletResponse : "references sub-class"
    abstract class Microservlet<Request, Response>
    {
        --(constructors)--
        +Microservlet(Class<? extends Request>, Class<? extends Response>)
        --
        +String description()
        +Class<? extends Request> requestType()
        +Response respond(MicroservletRequest)
        +Class<? extends Response> responseType()
        #String get(String key)
        --(collection)--
        #PropertyMap parameters()
        --(conversion)--
        #int asInt(String key)
        #long asLong(String key)
        #T asObject(String key, Class<Converter<String,T>> converterType)
        #T asObject(String key, Converter<String,T>)
        --(extension points)--
        +Response onRespond(Request)
    }
    
    BaseMicroservletResponse <|-- MicroservletErrorResponse
    class MicroservletErrorResponse
    {
        --(collection)--
        +List<MicroservletError> errors()
        +boolean isEmpty()
        --(messaging)--
        +void send(Listener)
    }
    
    interface Component
    interface HttpProblemReportingTrait
    interface MicroservletRequestHandler
    interface Validatable
    Validatable <|-- MicroservletRequest
    Component <|-- MicroservletRequest
    HttpProblemReportingTrait <|-- MicroservletRequest
    MicroservletRequestHandler <|-- MicroservletRequest
    interface MicroservletRequest
    {
        --
        +Class<? extends MicroservletResponse> responseType()
    }
    
    interface Listener
    Listener <|-- MicroservletRequestHandler
    interface MicroservletRequestHandler
    {
        --
        +void onRequestHandlingStatistics(MicroservletRequestHandlingStatistics)
        +MicroservletResponse respond(String path)
        --(extension points)--
        +MicroservletResponse onRespond()
    }
    
    interface Component
    interface HttpProblemReportingTrait
    interface Validatable
    Validatable <|-- MicroservletResponse
    Component <|-- MicroservletResponse
    HttpProblemReportingTrait <|-- MicroservletResponse
    interface MicroservletResponse
    {
        --
        +void prepareResponse()
        --(lifecycle)--
        +void endResponse()
    }
    
@enduml

