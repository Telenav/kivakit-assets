<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1194.7917px" preserveAspectRatio="none" style="width:531px;height:1194px;background:#333333;" version="1.1" viewBox="0 0 531 1194" width="531.25px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="518.75" x="2.0833" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="495.8333" x="13.5417" y="30.5583">com.telenav.kivakit.core.kernel.language.patterns</text><!--MD5=[e57988045781fc9269750b4152037d27]
class Pattern--><rect codeLine="20" fill="#282828" height="843.1051" id="Pattern" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="103.9063" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="103.9063" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="333.3333" x="103.9063" y="76.7578"/><rect codeLine="20" fill="none" height="843.1051" id="Pattern" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="333.3333" x="103.9063" y="53.7028"/><ellipse cx="240.3646" cy="69.397" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M240.4785,66.099 L239.6301,69.8283 L241.333,69.8283 Z M239.3799,64.4511 L241.5833,64.4511 L244.043,73.5636 L242.2424,73.5636 L241.6809,71.3114 L239.27,71.3114 L238.7207,73.5636 L236.9202,73.5636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="45.8333" x="263.2813" y="74.1211">Pattern</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="104.9479" x2="436.1979" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="436.1979" y1="93.4245" y2="93.4245"/><ellipse cx="115.3646" cy="104.8828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="168.75" x="126.8229" y="111.794">Expression anyOf(T[] options)</text><ellipse cx="115.3646" cy="124.6277" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="126.8229" y="131.5389">int bind(int group)</text><ellipse cx="115.3646" cy="144.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="234.375" x="126.8229" y="151.2838">Group&lt;Boolean&gt; booleanGroup(Listener)</text><ellipse cx="115.3646" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="126.8229" y="171.0286">Pattern caseInsensitive()</text><ellipse cx="115.3646" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="126.8229" y="190.7735">Expression constant(String expression)</text><ellipse cx="115.3646" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="126.8229" y="210.5184">Expression expression(String expression)</text><ellipse cx="115.3646" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="126.8229" y="230.2633">Group&lt;Float&gt; floatGroup(Listener)</text><ellipse cx="115.3646" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="126.8229" y="250.0081">Group&lt;T&gt; group(Converter&lt;String,T&gt;)</text><ellipse cx="115.3646" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="126.8229" y="269.753">Group&lt;String&gt; group(Listener)</text><ellipse cx="115.3646" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="176.0417" x="126.8229" y="289.4979">boolean lookingAt(String input)</text><ellipse cx="115.3646" cy="302.3315" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="126.8229" y="309.2428">boolean matches(CharSequence input)</text><ellipse cx="115.3646" cy="322.0764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="126.8229" y="328.9876">boolean matchesIgnoreCase(CharSequence input)</text><ellipse cx="115.3646" cy="341.8213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="126.8229" y="348.7325">Pattern oneOrMore()</text><ellipse cx="115.3646" cy="361.5662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="126.8229" y="368.4774">Pattern optional()</text><ellipse cx="115.3646" cy="381.311" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="126.8229" y="388.2222">Pattern then(String that)</text><ellipse cx="115.3646" cy="401.0559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="126.8229" y="407.9671">Pattern then(Pattern that)</text><ellipse cx="115.3646" cy="420.8008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="184.375" x="126.8229" y="427.712">Pattern withOptionalWhiteSpace()</text><ellipse cx="115.3646" cy="440.5457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="126.8229" y="447.4569">ZeroOrMore zeroOrMore()</text><ellipse cx="115.3646" cy="484.2021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="126.8229" y="491.1133">String toExpression()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="232.0313" y1="467.038" y2="467.038"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="235.1563" y="470.8476">(conversion)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="309.1146" x2="436.1979" y1="467.038" y2="467.038"/><ellipse cx="115.3646" cy="527.8585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="126.8229" y="534.7697">Pattern parenthesized()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="235.1563" y1="510.6944" y2="510.6944"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="238.2813" y="514.504">(functional)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="305.9896" x2="436.1979" y1="510.6944" y2="510.6944"/><ellipse cx="115.3646" cy="571.5149" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="126.8229" y="578.4261">Pattern or(String that)</text><ellipse cx="115.3646" cy="591.2598" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="126.8229" y="598.171">Pattern or(Pattern that)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="245.0521" y1="554.3508" y2="554.3508"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="248.1771" y="558.1604">(logical)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="296.0938" x2="436.1979" y1="554.3508" y2="554.3508"/><ellipse cx="115.3646" cy="634.9162" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="126.8229" y="641.8274">String afterMatch(String input)</text><ellipse cx="115.3646" cy="654.6611" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="126.8229" y="661.5723">Matcher matcher(CharSequence input)</text><ellipse cx="115.3646" cy="674.4059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="265.625" x="126.8229" y="681.3171">Matcher matcher(CharSequence input, int flags)</text><ellipse cx="115.3646" cy="694.1508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="301.0417" x="126.8229" y="701.062">Matcher matcherCaseInsensitive(CharSequence input)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="237.2396" y1="617.7521" y2="617.7521"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="240.3646" y="621.5617">(matching)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="303.9063" x2="436.1979" y1="617.7521" y2="617.7521"/><ellipse cx="115.3646" cy="737.8072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="126.8229" y="744.7184">CharacterClass anyOf(String characters)</text><ellipse cx="115.3646" cy="757.5521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="201.0417" x="126.8229" y="764.4633">Character character(char character)</text><ellipse cx="115.3646" cy="777.297" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="269.7917" x="126.8229" y="784.2082">CharacterClass characterClass(Object... objects)</text><ellipse cx="115.3646" cy="797.0418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="126.8229" y="803.953">Group&lt;Integer&gt; integerGroup(Listener)</text><ellipse cx="115.3646" cy="816.7867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="126.8229" y="823.6979">LiteralCharacter literal(char character)</text><ellipse cx="115.3646" cy="836.5316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="234.375" x="126.8229" y="843.4428">CharacterClass range(char first, char last)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="238.8021" y1="720.6431" y2="720.6431"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="241.9271" y="724.4527">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="302.3438" x2="436.1979" y1="720.6431" y2="720.6431"/><ellipse cx="115.3646" cy="880.188" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="126.8229" y="887.0992">boolean find(String input)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="104.9479" x2="244.5313" y1="863.0239" y2="863.0239"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="45.8333" x="247.6563" y="866.8335">(search)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="296.6146" x2="436.1979" y1="863.0239" y2="863.0239"/><!--MD5=[3637e2e3ff64f8c7ec072f5df5e3a1dc]
class Expression--><rect codeLine="7" fill="#282828" height="83.3781" id="Expression" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="136.4583" x="110.6771" y="958.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="136.4583" x="110.6771" y="958.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="136.4583" x="110.6771" y="981.9661"/><rect codeLine="7" fill="none" height="83.3781" id="Expression" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="136.4583" x="110.6771" y="958.9111"/><ellipse cx="137.9167" cy="974.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M139.8271,979.0304 Q139.3998,979.2501 138.9299,979.3599 Q138.4599,979.4698 137.9411,979.4698 Q136.0978,979.4698 135.1274,978.2552 Q134.1569,977.0406 134.1569,974.7457 Q134.1569,972.4447 135.1274,971.2301 Q136.0978,970.0155 137.9411,970.0155 Q138.4599,970.0155 138.936,970.1253 Q139.412,970.2352 139.8271,970.4549 L139.8271,972.4569 Q139.3632,972.0296 138.9268,971.8313 Q138.4904,971.6329 138.0265,971.6329 Q137.0378,971.6329 136.5342,972.4172 Q136.0307,973.2015 136.0307,974.7457 Q136.0307,976.2838 136.5342,977.0681 Q137.0378,977.8524 138.0265,977.8524 Q138.4904,977.8524 138.9268,977.654 Q139.3632,977.4556 139.8271,977.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="70.8333" x="157.3958" y="979.3294">Expression</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="111.7188" x2="246.0938" y1="990.2995" y2="990.2995"/><ellipse cx="122.1354" cy="1025.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="133.5938" y="1032.5806">Expression(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="111.7188" x2="135.1563" y1="1008.5052" y2="1008.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="138.2813" y="1012.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="222.6563" x2="246.0938" y1="1008.5052" y2="1008.5052"/><!--MD5=[4e3c243b741064b5e493fd018240553e]
class Parenthesized--><rect codeLine="14" fill="#282828" height="83.3781" id="Parenthesized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="158.3333" x="284.1146" y="958.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="158.3333" x="284.1146" y="958.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="158.3333" x="284.1146" y="981.9661"/><rect codeLine="14" fill="none" height="83.3781" id="Parenthesized" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="158.3333" x="284.1146" y="958.9111"/><ellipse cx="312.2917" cy="974.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M314.2021,979.0304 Q313.7748,979.2501 313.3049,979.3599 Q312.8349,979.4698 312.3161,979.4698 Q310.4728,979.4698 309.5024,978.2552 Q308.5319,977.0406 308.5319,974.7457 Q308.5319,972.4447 309.5024,971.2301 Q310.4728,970.0155 312.3161,970.0155 Q312.8349,970.0155 313.311,970.1253 Q313.787,970.2352 314.2021,970.4549 L314.2021,972.4569 Q313.7382,972.0296 313.3018,971.8313 Q312.8654,971.6329 312.4015,971.6329 Q311.4128,971.6329 310.9092,972.4172 Q310.4057,973.2015 310.4057,974.7457 Q310.4057,976.2838 310.9092,977.0681 Q311.4128,977.8524 312.4015,977.8524 Q312.8654,977.8524 313.3018,977.654 Q313.7382,977.4556 314.2021,977.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="90.625" x="331.9792" y="979.3294">Parenthesized</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="285.1563" x2="441.4063" y1="990.2995" y2="990.2995"/><ellipse cx="295.5729" cy="1025.6694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="307.0313" y="1032.5806">Parenthesized(Pattern)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="285.1563" x2="319.5313" y1="1008.5052" y2="1008.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="322.6563" y="1012.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="407.0313" x2="441.4063" y1="1008.5052" y2="1008.5052"/><!--MD5=[06323c3b370a0856520f4c7b3512c77d]
class SimplifiedPattern--><rect codeLine="65" fill="#282828" height="83.3781" id="SimplifiedPattern" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="167.7083" x="95.0521" y="1104.7445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="167.7083" x="95.0521" y="1104.7445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="167.7083" x="95.0521" y="1127.7995"/><rect codeLine="65" fill="none" height="83.3781" id="SimplifiedPattern" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="167.7083" x="95.0521" y="1104.7445"/><ellipse cx="118.0729" cy="1120.4386" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M119.9833,1124.8637 Q119.5561,1125.0834 119.0861,1125.1933 Q118.6161,1125.3031 118.0973,1125.3031 Q116.2541,1125.3031 115.2836,1124.0885 Q114.3132,1122.8739 114.3132,1120.579 Q114.3132,1118.278 115.2836,1117.0634 Q116.2541,1115.8488 118.0973,1115.8488 Q118.6161,1115.8488 119.0922,1115.9587 Q119.5683,1116.0685 119.9833,1116.2882 L119.9833,1118.2902 Q119.5194,1117.863 119.083,1117.6646 Q118.6466,1117.4662 118.1828,1117.4662 Q117.194,1117.4662 116.6905,1118.2505 Q116.1869,1119.0348 116.1869,1120.579 Q116.1869,1122.1171 116.6905,1122.9014 Q117.194,1123.6857 118.1828,1123.6857 Q118.6466,1123.6857 119.083,1123.4873 Q119.5194,1123.289 119.9833,1122.8617 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="111.4583" x="136.6146" y="1125.1628">SimplifiedPattern</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="96.0938" x2="261.7188" y1="1136.1328" y2="1136.1328"/><ellipse cx="106.5104" cy="1171.5027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="117.9688" y="1178.4139">SimplifiedPattern(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="96.0938" x2="135.1563" y1="1154.3386" y2="1154.3386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="138.2813" y="1158.1482">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="222.6563" x2="261.7188" y1="1154.3386" y2="1154.3386"/><!--MD5=[4a2196550f3ff7b135f20d33792829e1]
reverse link Pattern to Expression--><path codeLine="6" d="M193.3333,917.1611 C190.5833,932.859 188.125,946.8903 186.0521,958.7445 " fill="none" id="Pattern-backto-Expression" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="186.1875,915.6924,196.9583,896.432,200.5521,918.2132,186.1875,915.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b3e99f5862f50f293699a4382c94533c]
reverse link Pattern to Parenthesized--><path codeLine="13" d="M348.6875,917.1611 C351.4688,932.859 353.9583,946.8903 356.0521,958.7445 " fill="none" id="Pattern-backto-Parenthesized" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="341.4688,918.2236,345.0208,896.432,355.8333,915.6715,341.4688,918.2236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[80ceafdda22b61e7567b03f05590789e]
reverse link Expression to SimplifiedPattern--><path codeLine="64" d="M178.9063,1063.484 C178.9063,1077.3382 178.9063,1091.7028 178.9063,1104.4632 " fill="none" id="Expression-backto-SimplifiedPattern" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="171.6146,1063.2653,178.9063,1042.432,186.1979,1063.2653,171.6146,1063.2653" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[806c8461620830a2114ae1471abe91b9]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.kivakit.core.kernel.language.patterns"
    
    Pattern <|- - Expression
    class Expression
    {
        - -(constructors)- -
        +Expression(String)
    }
    
    Pattern <|- - Parenthesized
    class Parenthesized
    {
        - -(constructors)- -
        +Parenthesized(Pattern)
    }
    
    abstract class Pattern
    {
        - -
        +Expression anyOf(T[] options)
        +int bind(int group)
        +Group<Boolean> booleanGroup(Listener)
        +Pattern caseInsensitive()
        +Expression constant(String expression)
        +Expression expression(String expression)
        +Group<Float> floatGroup(Listener)
        +Group<T> group(Converter<String,T>)
        +Group<String> group(Listener)
        +boolean lookingAt(String input)
        +boolean matches(CharSequence input)
        +boolean matchesIgnoreCase(CharSequence input)
        +Pattern oneOrMore()
        +Pattern optional()
        +Pattern then(String that)
        +Pattern then(Pattern that)
        +Pattern withOptionalWhiteSpace()
        +ZeroOrMore zeroOrMore()
        - -(conversion)- -
        +String toExpression()
        - -(functional)- -
        +Pattern parenthesized()
        - -(logical)- -
        +Pattern or(String that)
        +Pattern or(Pattern that)
        - -(matching)- -
        +String afterMatch(String input)
        +Matcher matcher(CharSequence input)
        +Matcher matcher(CharSequence input, int flags)
        +Matcher matcherCaseInsensitive(CharSequence input)
        - -(primitive)- -
        +CharacterClass anyOf(String characters)
        +Character character(char character)
        +CharacterClass characterClass(Object... objects)
        +Group<Integer> integerGroup(Listener)
        +LiteralCharacter literal(char character)
        +CharacterClass range(char first, char last)
        - -(search)- -
        +boolean find(String input)
    }
    
    Expression <|- - SimplifiedPattern
    class SimplifiedPattern
    {
        - -(constructors)- -
        +SimplifiedPattern(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.kernel.language.patterns"
    
    Pattern <|- - Expression
    class Expression
    {
        - -(constructors)- -
        +Expression(String)
    }
    
    Pattern <|- - Parenthesized
    class Parenthesized
    {
        - -(constructors)- -
        +Parenthesized(Pattern)
    }
    
    abstract class Pattern
    {
        - -
        +Expression anyOf(T[] options)
        +int bind(int group)
        +Group<Boolean> booleanGroup(Listener)
        +Pattern caseInsensitive()
        +Expression constant(String expression)
        +Expression expression(String expression)
        +Group<Float> floatGroup(Listener)
        +Group<T> group(Converter<String,T>)
        +Group<String> group(Listener)
        +boolean lookingAt(String input)
        +boolean matches(CharSequence input)
        +boolean matchesIgnoreCase(CharSequence input)
        +Pattern oneOrMore()
        +Pattern optional()
        +Pattern then(String that)
        +Pattern then(Pattern that)
        +Pattern withOptionalWhiteSpace()
        +ZeroOrMore zeroOrMore()
        - -(conversion)- -
        +String toExpression()
        - -(functional)- -
        +Pattern parenthesized()
        - -(logical)- -
        +Pattern or(String that)
        +Pattern or(Pattern that)
        - -(matching)- -
        +String afterMatch(String input)
        +Matcher matcher(CharSequence input)
        +Matcher matcher(CharSequence input, int flags)
        +Matcher matcherCaseInsensitive(CharSequence input)
        - -(primitive)- -
        +CharacterClass anyOf(String characters)
        +Character character(char character)
        +CharacterClass characterClass(Object... objects)
        +Group<Integer> integerGroup(Listener)
        +LiteralCharacter literal(char character)
        +CharacterClass range(char first, char last)
        - -(search)- -
        +boolean find(String input)
    }
    
    Expression <|- - SimplifiedPattern
    class SimplifiedPattern
    {
        - -(constructors)- -
        +SimplifiedPattern(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>