<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="456.25px" preserveAspectRatio="none" style="width:2665px;height:456px;background:#333333;" version="1.1" viewBox="0 0 2665 456" width="2665.625px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="639.5833" x="1005.7292" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="616.6667" x="1017.1875" y="30.5583">com.telenav.kivakit.core.collections.primitive.map.multi.fixed</text><!--MD5=[4b74817909f2df5a21a89f40177dcefd]
class PrimitiveScalarMultiMap--><rect codeLine="6" fill="#282828" height="48.055" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="1144.2708" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="1144.2708" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="1144.2708" y="76.7578"/><rect codeLine="6" fill="none" height="48.055" id="PrimitiveScalarMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="1144.2708" y="53.7028"/><ellipse cx="1158.8542" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1155.7373,66.5588 L1155.7373,64.9719 L1161.1633,64.9719 L1161.1633,66.5588 L1159.3506,66.5588 L1159.3506,72.4976 L1161.1633,72.4976 L1161.1633,74.0845 L1155.7373,74.0845 L1155.7373,72.4976 L1157.55,72.4976 L1157.55,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="1175.5208" y="74.1211">PrimitiveScalarMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1145.3125" x2="1335.9375" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1145.3125" x2="1335.9375" y1="93.4245" y2="93.4245"/><!--MD5=[4a7d52b0cad6b45b436e1f956697a54c]
class IntMultiMap--><rect codeLine="7" fill="#282828" height="48.055" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="923.4375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="923.4375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="923.4375" y="76.7578"/><rect codeLine="7" fill="none" height="48.055" id="IntMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="923.4375" y="53.7028"/><ellipse cx="938.0208" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M934.904,66.5588 L934.904,64.9719 L940.33,64.9719 L940.33,66.5588 L938.5173,66.5588 L938.5173,72.4976 L940.33,72.4976 L940.33,74.0845 L934.904,74.0845 L934.904,72.4976 L936.7167,72.4976 L936.7167,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="954.6875" y="74.1211">IntMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="924.4792" x2="1038.0208" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="924.4792" x2="1038.0208" y1="93.4245" y2="93.4245"/><!--MD5=[48dd5ec133c92f0a147a857e74e30812]
class LongMultiMap--><rect codeLine="8" fill="#282828" height="48.055" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="279.6875" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="279.6875" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="130.2083" x="279.6875" y="76.7578"/><rect codeLine="8" fill="none" height="48.055" id="LongMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="130.2083" x="279.6875" y="53.7028"/><ellipse cx="294.2708" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M291.154,66.5588 L291.154,64.9719 L296.58,64.9719 L296.58,66.5588 L294.7673,66.5588 L294.7673,72.4976 L296.58,72.4976 L296.58,74.0845 L291.154,74.0845 L291.154,72.4976 L292.9667,72.4976 L292.9667,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="310.9375" y="74.1211">LongMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="280.7292" x2="408.8542" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="280.7292" x2="408.8542" y1="93.4245" y2="93.4245"/><!--MD5=[a5cc76553a2d1b24632df0d2f7f0bb23]
class PrimitiveMultiMap--><rect fill="#282828" height="48.055" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="1373.4375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="1373.4375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="155.2083" x="1373.4375" y="76.7578"/><rect fill="none" height="48.055" id="PrimitiveMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="155.2083" x="1373.4375" y="53.7028"/><ellipse cx="1388.0208" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1389.9312,73.822 Q1389.504,74.0417 1389.034,74.1516 Q1388.564,74.2615 1388.0452,74.2615 Q1386.202,74.2615 1385.2315,73.0469 Q1384.2611,71.8323 1384.2611,69.5374 Q1384.2611,67.2363 1385.2315,66.0217 Q1386.202,64.8071 1388.0452,64.8071 Q1388.564,64.8071 1389.0401,64.917 Q1389.5162,65.0269 1389.9312,65.2466 L1389.9312,67.2485 Q1389.4674,66.8213 1389.031,66.6229 Q1388.5946,66.4246 1388.1307,66.4246 Q1387.1419,66.4246 1386.6384,67.2089 Q1386.1348,67.9932 1386.1348,69.5374 Q1386.1348,71.0754 1386.6384,71.8597 Q1387.1419,72.644 1388.1307,72.644 Q1388.5946,72.644 1389.031,72.4457 Q1389.4674,72.2473 1389.9312,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="117.7083" x="1404.6875" y="74.1211">PrimitiveMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1374.4792" x2="1527.6042" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1374.4792" x2="1527.6042" y1="93.4245" y2="93.4245"/><!--MD5=[7995b2c959e8c01f457074ea15d83b1b]
class IntToByteFixedMultiMap--><rect codeLine="12" fill="#282828" height="245.5037" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1522.9167" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1522.9167" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1522.9167" y="206.9661"/><rect codeLine="12" fill="none" height="245.5037" id="IntToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1522.9167" y="183.9111"/><ellipse cx="1614.0625" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1615.9729,204.0304 Q1615.5457,204.2501 1615.0757,204.3599 Q1614.6057,204.4698 1614.0869,204.4698 Q1612.2437,204.4698 1611.2732,203.2552 Q1610.3027,202.0406 1610.3027,199.7457 Q1610.3027,197.4447 1611.2732,196.2301 Q1612.2437,195.0155 1614.0869,195.0155 Q1614.6057,195.0155 1615.0818,195.1253 Q1615.5579,195.2352 1615.9729,195.4549 L1615.9729,197.4569 Q1615.509,197.0296 1615.0726,196.8313 Q1614.6362,196.6329 1614.1724,196.6329 Q1613.1836,196.6329 1612.6801,197.4172 Q1612.1765,198.2015 1612.1765,199.7457 Q1612.1765,201.2838 1612.6801,202.0681 Q1613.1836,202.8524 1614.1724,202.8524 Q1614.6362,202.8524 1615.0726,202.654 Q1615.509,202.4556 1615.9729,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="157.2917" x="1636.9792" y="204.3294">IntToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1523.9583" x2="1876.0417" y1="215.2995" y2="215.2995"/><polygon fill="#FFFF44" points="1534.375,245.461,1538.5417,249.6277,1534.375,253.7944,1530.2083,249.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="1545.8333" y="257.5806">IntToByteFixedMultiMap()</text><ellipse cx="1534.375" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="1545.8333" y="277.3254">IntToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1523.9583" x2="1656.25" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1659.375" y="237.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1743.75" x2="1876.0417" y1="233.5052" y2="233.5052"/><ellipse cx="1534.375" cy="314.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="1545.8333" y="320.9819">boolean containsKey(int key)</text><ellipse cx="1534.375" cy="333.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="1545.8333" y="340.7267">ByteArray get(int key)</text><ellipse cx="1534.375" cy="353.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="1545.8333" y="360.4716">IntIterator keys()</text><ellipse cx="1534.375" cy="373.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="204.1667" x="1545.8333" y="380.2165">void putAll(int key, ByteArray values)</text><ellipse cx="1534.375" cy="393.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="1545.8333" y="399.9613">void putAll(int key, byte[] values)</text><ellipse cx="1534.375" cy="412.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1545.8333" y="419.7062">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1523.9583" x2="1665.625" y1="296.9065" y2="296.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1668.75" y="300.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1734.375" x2="1876.0417" y1="296.9065" y2="296.9065"/><!--MD5=[0c99b87e1465ab30b0b6d2d6a13d9fa0]
class IntToIntFixedMultiMap--><rect codeLine="29" fill="#282828" height="225.7589" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="867.1875" y="193.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="867.1875" y="193.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="228.125" x="867.1875" y="216.862"/><rect codeLine="29" fill="none" height="225.7589" id="IntToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="228.125" x="867.1875" y="193.807"/><ellipse cx="901.4583" cy="209.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M903.3687,213.9262 Q902.9415,214.1459 902.4715,214.2558 Q902.0015,214.3656 901.4827,214.3656 Q899.6395,214.3656 898.669,213.151 Q897.6986,211.9364 897.6986,209.6415 Q897.6986,207.3405 898.669,206.1259 Q899.6395,204.9113 901.4827,204.9113 Q902.0015,204.9113 902.4776,205.0212 Q902.9537,205.131 903.3687,205.3507 L903.3687,207.3527 Q902.9049,206.9255 902.4685,206.7271 Q902.0321,206.5287 901.5682,206.5287 Q900.5794,206.5287 900.0759,207.313 Q899.5723,208.0973 899.5723,209.6415 Q899.5723,211.1796 900.0759,211.9639 Q900.5794,212.7482 901.5682,212.7482 Q902.0321,212.7482 902.4685,212.5498 Q902.9049,212.3515 903.3687,211.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="146.875" x="922.5" y="214.2253">IntToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="868.2292" x2="1094.2708" y1="225.1953" y2="225.1953"/><polygon fill="#FFFF44" points="878.6458,255.3569,882.8125,259.5235,878.6458,263.6902,874.4792,259.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="890.1042" y="267.4764">IntToIntFixedMultiMap()</text><ellipse cx="878.6458" cy="280.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="890.1042" y="287.2213">IntToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="868.2292" x2="937.5" y1="243.4011" y2="243.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="940.625" y="247.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1025" x2="1094.2708" y1="243.4011" y2="243.4011"/><ellipse cx="878.6458" cy="323.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="890.1042" y="330.8777">boolean containsKey(int key)</text><ellipse cx="878.6458" cy="343.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="890.1042" y="350.6226">IntArray get(int key)</text><ellipse cx="878.6458" cy="363.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="890.1042" y="370.3674">IntIterator keys()</text><ellipse cx="878.6458" cy="383.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="195.8333" x="890.1042" y="390.1123">void putAll(int key, IntArray values)</text><ellipse cx="878.6458" cy="402.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="890.1042" y="409.8572">void putAll(int key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="868.2292" x2="946.875" y1="306.8024" y2="306.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="950" y="310.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1015.625" x2="1094.2708" y1="306.8024" y2="306.8024"/><!--MD5=[3f4bc82daf44942da3f53ac3b6d5365d]
class IntToLongFixedMultiMap--><rect codeLine="45" fill="#282828" height="225.7589" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="9.375" y="193.807"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="9.375" y="193.807"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="241.6667" x="9.375" y="216.862"/><rect codeLine="45" fill="none" height="225.7589" id="IntToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="241.6667" x="9.375" y="193.807"/><ellipse cx="43.1771" cy="209.5011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M45.0875,213.9262 Q44.6602,214.1459 44.1903,214.2558 Q43.7203,214.3656 43.2015,214.3656 Q41.3582,214.3656 40.3878,213.151 Q39.4173,211.9364 39.4173,209.6415 Q39.4173,207.3405 40.3878,206.1259 Q41.3582,204.9113 43.2015,204.9113 Q43.7203,204.9113 44.1964,205.0212 Q44.6724,205.131 45.0875,205.3507 L45.0875,207.3527 Q44.6236,206.9255 44.1872,206.7271 Q43.7508,206.5287 43.2869,206.5287 Q42.2982,206.5287 41.7946,207.313 Q41.2911,208.0973 41.2911,209.6415 Q41.2911,211.1796 41.7946,211.9639 Q42.2982,212.7482 43.2869,212.7482 Q43.7508,212.7482 44.1872,212.5498 Q44.6236,212.3515 45.0875,211.9242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="64.1146" y="214.2253">IntToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="250" y1="225.1953" y2="225.1953"/><polygon fill="#FFFF44" points="20.8333,255.3569,25,259.5235,20.8333,263.6902,16.6667,259.5235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="32.2917" y="267.4764">IntToLongFixedMultiMap()</text><ellipse cx="20.8333" cy="280.3101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="32.2917" y="287.2213">IntToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="86.4583" y1="243.4011" y2="243.4011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="89.5833" y="247.2107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="173.9583" x2="250" y1="243.4011" y2="243.4011"/><ellipse cx="20.8333" cy="323.9665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="32.2917" y="330.8777">boolean containsKey(int key)</text><ellipse cx="20.8333" cy="343.7113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="32.2917" y="350.6226">LongArray get(int key)</text><ellipse cx="20.8333" cy="363.4562" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="32.2917" y="370.3674">IntIterator keys()</text><ellipse cx="20.8333" cy="383.2011" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="32.2917" y="390.1123">void putAll(int key, long[] values)</text><ellipse cx="20.8333" cy="402.946" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="32.2917" y="409.8572">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="95.8333" y1="306.8024" y2="306.8024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="98.9583" y="310.612">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="164.5833" x2="250" y1="306.8024" y2="306.8024"/><!--MD5=[1c02724945c6df932588753ceecaf5f0]
class IntToPackedArrayFixedMultiMap--><rect codeLine="61" fill="#282828" height="284.9935" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="288.0208" y="164.1195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="288.0208" y="164.1195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="542.7083" x="288.0208" y="187.1745"/><rect codeLine="61" fill="none" height="284.9935" id="IntToPackedArrayFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="542.7083" x="288.0208" y="164.1195"/><ellipse cx="447.9167" cy="179.8136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M449.8271,184.2387 Q449.3998,184.4584 448.9299,184.5683 Q448.4599,184.6781 447.9411,184.6781 Q446.0978,184.6781 445.1274,183.4635 Q444.1569,182.2489 444.1569,179.954 Q444.1569,177.653 445.1274,176.4384 Q446.0978,175.2238 447.9411,175.2238 Q448.4599,175.2238 448.936,175.3337 Q449.412,175.4435 449.8271,175.6632 L449.8271,177.6652 Q449.3632,177.238 448.9268,177.0396 Q448.4904,176.8412 448.0265,176.8412 Q447.0378,176.8412 446.5342,177.6255 Q446.0307,178.4098 446.0307,179.954 Q446.0307,181.4921 446.5342,182.2764 Q447.0378,183.0607 448.0265,183.0607 Q448.4904,183.0607 448.9268,182.8623 Q449.3632,182.664 449.8271,182.2367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="208.3333" x="470.8333" y="184.5378">IntToPackedArrayFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="289.0625" x2="829.6875" y1="195.5078" y2="195.5078"/><polygon fill="#FFFF44" points="299.4792,225.6694,303.6458,229.836,299.4792,234.0027,295.3125,229.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="310.9375" y="237.7889">IntToPackedArrayFixedMultiMap()</text><ellipse cx="299.4792" cy="250.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="220.8333" x="310.9375" y="257.5338">IntToPackedArrayFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="289.0625" x2="515.625" y1="213.7136" y2="213.7136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="518.75" y="217.5232">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="603.125" x2="829.6875" y1="213.7136" y2="213.7136"/><ellipse cx="299.4792" cy="294.279" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="510.4167" x="310.9375" y="301.1902">IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)</text><ellipse cx="299.4792" cy="314.0238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="310.9375" y="320.9351">boolean containsKey(int key)</text><ellipse cx="299.4792" cy="333.7687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="310.9375" y="340.6799">LongArray get(int key)</text><ellipse cx="299.4792" cy="353.5136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="162.5" x="310.9375" y="360.4248">LongArray getSigned(int key)</text><ellipse cx="299.4792" cy="373.2585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="310.9375" y="380.1697">IntIterator keys()</text><ellipse cx="299.4792" cy="393.0033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="377.0833" x="310.9375" y="399.9146">IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)</text><ellipse cx="299.4792" cy="412.7482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="310.9375" y="419.6594">void putAll(int key, long[] values)</text><ellipse cx="299.4792" cy="432.4931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="310.9375" y="439.4043">void putAll(int key, LongArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="289.0625" x2="525" y1="277.1149" y2="277.1149"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="528.125" y="280.9245">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="593.75" x2="829.6875" y1="277.1149" y2="277.1149"/><!--MD5=[473ca2dc791c307a8457cba60dc406cc]
class LongToByteFixedMultiMap--><rect codeLine="79" fill="#282828" height="245.5037" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1913.5417" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1913.5417" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1913.5417" y="206.9661"/><rect codeLine="79" fill="none" height="245.5037" id="LongToByteFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1913.5417" y="183.9111"/><ellipse cx="1997.3958" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1999.3062,204.0304 Q1998.879,204.2501 1998.409,204.3599 Q1997.939,204.4698 1997.4202,204.4698 Q1995.577,204.4698 1994.6065,203.2552 Q1993.6361,202.0406 1993.6361,199.7457 Q1993.6361,197.4447 1994.6065,196.2301 Q1995.577,195.0155 1997.4202,195.0155 Q1997.939,195.0155 1998.4151,195.1253 Q1998.8912,195.2352 1999.3062,195.4549 L1999.3062,197.4569 Q1998.8424,197.0296 1998.406,196.8313 Q1997.9696,196.6329 1997.5057,196.6329 Q1996.5169,196.6329 1996.0134,197.4172 Q1995.5098,198.2015 1995.5098,199.7457 Q1995.5098,201.2838 1996.0134,202.0681 Q1996.5169,202.8524 1997.5057,202.8524 Q1997.9696,202.8524 1998.406,202.654 Q1998.8424,202.4556 1999.3062,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="171.875" x="2020.3125" y="204.3294">LongToByteFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1914.5833" x2="2266.6667" y1="215.2995" y2="215.2995"/><polygon fill="#FFFF44" points="1925,245.461,1929.1667,249.6277,1925,253.7944,1920.8333,249.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="1936.4583" y="257.5806">LongToByteFixedMultiMap()</text><ellipse cx="1925" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1936.4583" y="277.3254">LongToByteFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1914.5833" x2="2046.875" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2050" y="237.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2134.375" x2="2266.6667" y1="233.5052" y2="233.5052"/><ellipse cx="1925" cy="314.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1936.4583" y="320.9819">boolean containsKey(long key)</text><ellipse cx="1925" cy="333.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="1936.4583" y="340.7267">ByteArray get(long key)</text><ellipse cx="1925" cy="353.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1936.4583" y="360.4716">LongIterator keys()</text><ellipse cx="1925" cy="373.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1936.4583" y="380.2165">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1925" cy="393.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1936.4583" y="399.9613">void putAll(long key, byte[] values)</text><ellipse cx="1925" cy="412.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="1936.4583" y="419.7062">void putAll(long key, ByteArray values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1914.5833" x2="2056.25" y1="296.9065" y2="296.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2059.375" y="300.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2125" x2="2266.6667" y1="296.9065" y2="296.9065"/><!--MD5=[4920d5307010b5c3664756a173cd7c76]
class LongToIntFixedMultiMap--><rect codeLine="95" fill="#282828" height="245.5037" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2304.1667" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2304.1667" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="2304.1667" y="206.9661"/><rect codeLine="95" fill="none" height="245.5037" id="LongToIntFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="2304.1667" y="183.9111"/><ellipse cx="2393.2292" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M2395.1396,204.0304 Q2394.7123,204.2501 2394.2424,204.3599 Q2393.7724,204.4698 2393.2536,204.4698 Q2391.4103,204.4698 2390.4399,203.2552 Q2389.4694,202.0406 2389.4694,199.7457 Q2389.4694,197.4447 2390.4399,196.2301 Q2391.4103,195.0155 2393.2536,195.0155 Q2393.7724,195.0155 2394.2485,195.1253 Q2394.7245,195.2352 2395.1396,195.4549 L2395.1396,197.4569 Q2394.6757,197.0296 2394.2393,196.8313 Q2393.8029,196.6329 2393.339,196.6329 Q2392.3503,196.6329 2391.8467,197.4172 Q2391.3432,198.2015 2391.3432,199.7457 Q2391.3432,201.2838 2391.8467,202.0681 Q2392.3503,202.8524 2393.339,202.8524 Q2393.8029,202.8524 2394.2393,202.654 Q2394.6757,202.4556 2395.1396,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="161.4583" x="2416.1458" y="204.3294">LongToIntFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="2305.2083" x2="2657.2917" y1="215.2995" y2="215.2995"/><polygon fill="#FFFF44" points="2315.625,245.461,2319.7917,249.6277,2315.625,253.7944,2311.4583,249.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="2327.0833" y="257.5806">LongToIntFixedMultiMap()</text><ellipse cx="2315.625" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="2327.0833" y="277.3254">LongToIntFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2305.2083" x2="2437.5" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="2440.625" y="237.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2525" x2="2657.2917" y1="233.5052" y2="233.5052"/><ellipse cx="2315.625" cy="314.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="2327.0833" y="320.9819">boolean containsKey(long key)</text><ellipse cx="2315.625" cy="333.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="2327.0833" y="340.7267">IntArray get(long key)</text><ellipse cx="2315.625" cy="353.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="2327.0833" y="360.4716">LongIterator keys()</text><ellipse cx="2315.625" cy="373.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="2327.0833" y="380.2165">void putAll(long key, IntArray values)</text><ellipse cx="2315.625" cy="393.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="2327.0833" y="399.9613">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="2315.625" cy="412.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="2327.0833" y="419.7062">void putAll(long key, int[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2305.2083" x2="2446.875" y1="296.9065" y2="296.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="2450" y="300.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="2515.625" x2="2657.2917" y1="296.9065" y2="296.9065"/><!--MD5=[3d6da11c5d686df0fe655d1f9f470d58]
class LongToLongFixedMultiMap--><rect codeLine="111" fill="#282828" height="245.5037" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1132.2917" y="183.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1132.2917" y="183.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="354.1667" x="1132.2917" y="206.9661"/><rect codeLine="111" fill="none" height="245.5037" id="LongToLongFixedMultiMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="354.1667" x="1132.2917" y="183.9111"/><ellipse cx="1214.0625" cy="199.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1215.9729,204.0304 Q1215.5457,204.2501 1215.0757,204.3599 Q1214.6057,204.4698 1214.0869,204.4698 Q1212.2437,204.4698 1211.2732,203.2552 Q1210.3027,202.0406 1210.3027,199.7457 Q1210.3027,197.4447 1211.2732,196.2301 Q1212.2437,195.0155 1214.0869,195.0155 Q1214.6057,195.0155 1215.0818,195.1253 Q1215.5579,195.2352 1215.9729,195.4549 L1215.9729,197.4569 Q1215.509,197.0296 1215.0726,196.8313 Q1214.6362,196.6329 1214.1724,196.6329 Q1213.1836,196.6329 1212.6801,197.4172 Q1212.1765,198.2015 1212.1765,199.7457 Q1212.1765,201.2838 1212.6801,202.0681 Q1213.1836,202.8524 1214.1724,202.8524 Q1214.6362,202.8524 1215.0726,202.654 Q1215.509,202.4556 1215.9729,202.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="176.0417" x="1236.9792" y="204.3294">LongToLongFixedMultiMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1133.3333" x2="1485.4167" y1="215.2995" y2="215.2995"/><polygon fill="#FFFF44" points="1143.75,245.461,1147.9167,249.6277,1143.75,253.7944,1139.5833,249.6277" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="1155.2083" y="257.5806">LongToLongFixedMultiMap()</text><ellipse cx="1143.75" cy="270.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1155.2083" y="277.3254">LongToLongFixedMultiMap(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1133.3333" x2="1265.625" y1="233.5052" y2="233.5052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1268.75" y="237.3149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1353.125" x2="1485.4167" y1="233.5052" y2="233.5052"/><ellipse cx="1143.75" cy="314.0706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="170.8333" x="1155.2083" y="320.9819">boolean containsKey(long key)</text><ellipse cx="1143.75" cy="333.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="1155.2083" y="340.7267">LongArray get(long key)</text><ellipse cx="1143.75" cy="353.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="1155.2083" y="360.4716">LongIterator keys()</text><ellipse cx="1143.75" cy="373.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="1155.2083" y="380.2165">void putAll(long key, List&lt;? extends Quantizable&gt; values)</text><ellipse cx="1143.75" cy="393.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="1155.2083" y="399.9613">void putAll(long key, LongArray values)</text><ellipse cx="1143.75" cy="412.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="1155.2083" y="419.7062">void putAll(long key, long[] values)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1133.3333" x2="1275" y1="296.9065" y2="296.9065"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1278.125" y="300.7161">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1343.75" x2="1485.4167" y1="296.9065" y2="296.9065"/><!--MD5=[770650b6aa5dc9033e07e0c3b0aa7834]
reverse link PrimitiveMultiMap to IntToByteFixedMultiMap--><path codeLine="10" d="M1491.8854,115.9632 C1512.5938,134.8486 1539.0521,158.984 1566.1042,183.6611 " fill="none" id="PrimitiveMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1486.7604,121.1507,1476.2813,101.7236,1496.5938,110.3799,1486.7604,121.1507" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dfe75cc93891e215cab385e322d933a5]
reverse link PrimitiveScalarMultiMap to IntToByteFixedMultiMap--><path codeLine="11" d="M1356.4583,107.4528 C1403.9167,121.4215 1458.5417,140.3799 1505.2083,164.1195 C1516.9479,170.0882 1528.75,176.734 1540.4167,183.807 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1354.2813,114.4215,1336.25,101.682,1358.2917,100.4007,1354.2813,114.4215" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[40e566c2ad01f56e72d1dfc432edcffd]
reverse link PrimitiveMultiMap to IntToIntFixedMultiMap--><path codeLine="26" d="M1352.7083,102.2445 C1257.2083,125.3278 1125.1042,157.9215 1114.5833,164.1195 C1100.6146,172.3486 1087.1979,182.4632 1074.6146,193.484 " fill="none" id="PrimitiveMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1351.1042,95.1299,1373.0729,97.3278,1354.5313,109.307,1351.1042,95.1299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b74cfb8c1523d3d80b86cd2cbb5c95b3]
reverse link IntMultiMap to IntToIntFixedMultiMap--><path codeLine="27" d="M981.25,122.8278 C981.25,143.2757 981.25,168.5882 981.25,193.7965 " fill="none" id="IntMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="973.9583,122.557,981.25,101.7236,988.5417,122.557,973.9583,122.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ca7d41135a34a5c01f19527588a0cc1f]
reverse link PrimitiveScalarMultiMap to IntToIntFixedMultiMap--><path codeLine="28" d="M1184.4688,112.9528 C1161.9375,127.6507 1136.2292,145.682 1114.5833,164.1195 C1103.7813,173.3174 1092.9375,183.3174 1082.3542,193.5986 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1180.625,106.7549,1202.1042,101.6924,1188.4792,119.0465,1180.625,106.7549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3857c396d8df5291198e30b6d54db019]
reverse link PrimitiveMultiMap to IntToLongFixedMultiMap--><path codeLine="42" d="M1352.6458,101.2549 C1084.0313,133.1715 484.1875,67.0465 269.7917,164.1195 C253.2813,171.5986 237.6667,181.9632 223.2813,193.7236 " fill="none" id="PrimitiveMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1351.7188,94.0257,1373.3333,98.5049,1353.6458,108.484,1351.7188,94.0257" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b208f5301ffb6aa1d0864148c88413a3]
reverse link LongMultiMap to IntToLongFixedMultiMap--><path codeLine="43" d="M308.5938,117.0049 C288.4375,138.3486 262.1771,166.1299 236.0313,193.7965 " fill="none" id="LongMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="303.4271,111.859,323.0313,101.7236,314.0313,121.8799,303.4271,111.859" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9e29c53af3e023a1cc72b386db0c1677]
reverse link PrimitiveScalarMultiMap to IntToLongFixedMultiMap--><path codeLine="44" d="M1123.4167,94.1507 C1101.4583,96.8174 1078.6979,99.432 1057.2917,101.6195 C882.6458,119.4528 428.9167,89.984 269.7917,164.1195 C253.5208,171.7028 238.0938,182.0465 223.8542,193.7236 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1122.5729,86.9111,1144.1458,91.5882,1124.3646,101.3799,1122.5729,86.9111" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0a9b88a08c1b70fdd1382184510f9c97]
reverse link PrimitiveMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="58" d="M1352.5104,101.7132 C1128.125,139.5465 1059.9063,101.4215 848.9583,164.1195 C842.9271,165.9111 836.8542,167.8278 830.7813,169.8382 " fill="none" id="PrimitiveMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1351.4896,94.484,1373.2604,98.0674,1354,108.8486,1351.4896,94.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[739e3bc5dd5521c98c7ebbf11aa9bab5]
reverse link LongMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="59" d="M381.25,117.2861 C393.9688,130.7445 409.0833,146.734 425.0521,163.6299 " fill="none" id="LongMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="375.5521,121.8799,366.5521,101.7236,386.1563,111.859,375.5521,121.8799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1814b039795f1d96cf6a4878df1f11c8]
reverse link PrimitiveScalarMultiMap to IntToPackedArrayFixedMultiMap--><path codeLine="60" d="M1122.8958,96.7549 C1044.0521,110.6924 938.6667,132.9007 848.9583,164.1195 C843.0104,166.1924 837.0313,168.3486 831.0208,170.5882 " fill="none" id="PrimitiveScalarMultiMap-backto-IntToPackedArrayFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1122.1146,89.4945,1143.8854,93.1403,1124.5938,103.8695,1122.1146,89.4945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[464a3c0904bac3ae1c62d95220e1b4a7]
reverse link PrimitiveMultiMap to LongToByteFixedMultiMap--><path codeLine="77" d="M1549.8333,85.2445 C1642.4583,94.2236 1783.1875,115.2549 1895.8333,164.1195 C1908.9688,169.8174 1922.0833,176.5257 1934.9375,183.8799 " fill="none" id="PrimitiveMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1548.8958,92.484,1528.8125,83.3382,1550.2188,77.9632,1548.8958,92.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dcf07fe2b95df686e43efa64177c11db]
reverse link PrimitiveScalarMultiMap to LongToByteFixedMultiMap--><path codeLine="78" d="M1357.8021,101.7028 C1598.4271,135.9215 1676.6563,78.6195 1895.8333,164.1195 C1909.8542,169.5882 1923.7917,176.3278 1937.375,183.859 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToByteFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1356.625,108.9007,1337.1146,98.5882,1358.7917,94.4736,1356.625,108.9007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b6127586369a48f529fa8b0b8768bc87]
reverse link PrimitiveMultiMap to LongToIntFixedMultiMap--><path codeLine="93" d="M1549.9375,82.3695 C1741.0833,90.5049 2154.1146,113.4945 2286.4583,164.1195 C2300.6146,169.5361 2314.6667,176.2549 2328.3646,183.807 " fill="none" id="PrimitiveMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1549.3646,89.6403,1528.8542,81.4945,1549.9688,75.0674,1549.3646,89.6403" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[5ba56ab4753696a05af8ee779fdc3a81]
reverse link PrimitiveScalarMultiMap to LongToIntFixedMultiMap--><path codeLine="94" d="M1357.8542,101.4424 C1592.125,126.932 2097.2813,95.5153 2286.4583,164.1195 C2301.1042,169.432 2315.6042,176.1924 2329.7083,183.8799 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToIntFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1356.875,108.6611,1337.0625,98.9215,1358.625,94.182,1356.875,108.6611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[3c0bce9bbf3284ca7c87272c80f02058]
reverse link PrimitiveMultiMap to LongToLongFixedMultiMap--><path codeLine="109" d="M1425.4688,119.6924 C1414.0625,137.9736 1399.9583,160.5778 1385.5625,183.6611 " fill="none" id="PrimitiveMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1419.4688,115.5465,1436.6771,101.7236,1431.8333,123.2653,1419.4688,115.5465" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ff0ad0b37dad764f0dc7a89862a469b3]
reverse link PrimitiveScalarMultiMap to LongToLongFixedMultiMap--><path codeLine="110" d="M1253.6563,121.7549 C1259.0833,139.6611 1265.6771,161.4424 1272.3958,183.6611 " fill="none" id="PrimitiveScalarMultiMap-backto-LongToLongFixedMultiMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1246.6563,123.7757,1247.5938,101.7236,1260.6146,119.557,1246.6563,123.7757" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2800d572bc952dfc5569ee06a376efa9]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.kivakit.core.collections.primitive.map.multi.fixed"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        #IntToByteFixedMultiMap()
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        #IntToIntFixedMultiMap()
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        #IntToLongFixedMultiMap()
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        #IntToPackedArrayFixedMultiMap()
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        #LongToByteFixedMultiMap()
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        #LongToIntFixedMultiMap()
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        #LongToLongFixedMultiMap()
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.collections.primitive.map.multi.fixed"
    
    interface PrimitiveScalarMultiMap
    interface IntMultiMap
    interface LongMultiMap
    
    PrimitiveMultiMap <|- - IntToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToByteFixedMultiMap
    class IntToByteFixedMultiMap
    {
        - -(constructors)- -
        #IntToByteFixedMultiMap()
        +IntToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +ByteArray get(int key)
        +IntIterator keys()
        +void putAll(int key, ByteArray values)
        +void putAll(int key, byte[] values)
        +void putAll(long key, List<? extends Quantizable> values)
    }
    
    PrimitiveMultiMap <|- - IntToIntFixedMultiMap
    IntMultiMap <|- - IntToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToIntFixedMultiMap
    class IntToIntFixedMultiMap
    {
        - -(constructors)- -
        #IntToIntFixedMultiMap()
        +IntToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +IntArray get(int key)
        +IntIterator keys()
        +void putAll(int key, IntArray values)
        +void putAll(int key, int[] values)
    }
    
    PrimitiveMultiMap <|- - IntToLongFixedMultiMap
    LongMultiMap <|- - IntToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToLongFixedMultiMap
    class IntToLongFixedMultiMap
    {
        - -(constructors)- -
        #IntToLongFixedMultiMap()
        +IntToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(int key)
        +LongArray get(int key)
        +IntIterator keys()
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - IntToPackedArrayFixedMultiMap
    LongMultiMap <|- - IntToPackedArrayFixedMultiMap
    PrimitiveScalarMultiMap <|- - IntToPackedArrayFixedMultiMap
    class IntToPackedArrayFixedMultiMap
    {
        - -(constructors)- -
        #IntToPackedArrayFixedMultiMap()
        +IntToPackedArrayFixedMultiMap(String)
        - -(collection)- -
        +IntToPackedArrayFixedMultiMap bits(BitCount bits, PackedPrimitiveArray.OverflowHandling)
        +boolean containsKey(int key)
        +LongArray get(int key)
        +LongArray getSigned(int key)
        +IntIterator keys()
        +IntToPackedArrayFixedMultiMap listTerminator(long listTerminator)
        +void putAll(int key, long[] values)
        +void putAll(int key, LongArray values)
    }
    
    PrimitiveMultiMap <|- - LongToByteFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToByteFixedMultiMap
    class LongToByteFixedMultiMap
    {
        - -(constructors)- -
        #LongToByteFixedMultiMap()
        +LongToByteFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +ByteArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, byte[] values)
        +void putAll(long key, ByteArray values)
    }
    
    PrimitiveMultiMap <|- - LongToIntFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToIntFixedMultiMap
    class LongToIntFixedMultiMap
    {
        - -(constructors)- -
        #LongToIntFixedMultiMap()
        +LongToIntFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +IntArray get(long key)
        +LongIterator keys()
        +void putAll(long key, IntArray values)
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, int[] values)
    }
    
    PrimitiveMultiMap <|- - LongToLongFixedMultiMap
    PrimitiveScalarMultiMap <|- - LongToLongFixedMultiMap
    class LongToLongFixedMultiMap
    {
        - -(constructors)- -
        #LongToLongFixedMultiMap()
        +LongToLongFixedMultiMap(String)
        - -(collection)- -
        +boolean containsKey(long key)
        +LongArray get(long key)
        +LongIterator keys()
        +void putAll(long key, List<? extends Quantizable> values)
        +void putAll(long key, LongArray values)
        +void putAll(long key, long[] values)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>