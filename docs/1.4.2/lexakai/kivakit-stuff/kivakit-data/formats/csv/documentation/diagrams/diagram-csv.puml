@startuml

    !include lexakai.theme
    
    title "CSV Data Format"
    
    abstract BaseIterator
    abstract BaseRepeater
    
    interface RepeaterMixin
    interface PropertyValues
    interface Closeable
    
    Name <|-- CsvColumn
    class CsvColumn<Type>
    {
        --(constructors)--
        #CsvColumn(String, StringConverter<Type>)
        --
        +CsvColumn<T> of(String name)
        +CsvColumn<T> of(String name, StringConverter<T>)
        +CsvSchema schema()
        --(collection)--
        +ObjectList<Type> asType(String text, BaseStringConverter<Type>)
        --(conversion)--
        +String asString(Type value, StringConverter<Type>)
        +String asString(Type value)
        +Type asType(String text, StringConverter<Type>)
        +Type asType(String text)
    }
    
    StringList <|-- CsvLine
    PropertyValues <|-- CsvLine
    RepeaterMixin <|-- CsvLine
    class CsvLine
    {
        --(constructors)--
        +CsvLine(CsvSchema, char)
        --
        +T get(CsvColumn<T>)
        +T get(CsvColumn<T>, StringConverter<T>)
        +int lineNumber()
        +CsvSchema schema()
        +void set(CsvColumn<T>, T value)
        +void set(CsvColumn<?>, String value)
        +String string(CsvColumn<?>)
        #char delimiter()
        --(collection)--
        +ObjectList<T> get(CsvColumn<T>, BaseStringConverter<T>)
        --(functional)--
        +T populatedObject(Class<T> type)
    }
    
    BaseIterator <|-- CsvReader
    RepeaterMixin <|-- CsvReader
    Closeable <|-- CsvReader
    CsvReader --> CsvLine : "reads"
    CsvReader o-- CsvSchema : "uses"
    class CsvReader
    {
        --(constructors)--
        +CsvReader(Resource, CsvSchema, char, ProgressReporter)
        --
        +void delimiter(char delimiter)
        +int lineNumber()
        +void quote(char quote)
        +CsvSchema schema()
        #void processLeadingSpaces(LookAheadReader in, StringBuffer)
        #void skipLine(LookAheadReader in)
        --(collection)--
        +Iterable<CsvLine> lines()
        --(iteration)--
        #String extractNextColumn(LookAheadReader in)
        --(read)--
        +CsvReader skipLines(int numberOfLinesToSkip)
        #void readColumn(LookAheadReader in, StringBuffer)
        #void readQuotedColumn(LookAheadReader in, StringBuffer)
    }
    
    BaseRepeater <|-- CsvSchema
    CsvSchema "1" o-- "*" CsvColumn
    class CsvSchema
    {
        --(constructors)--
        #CsvSchema(CsvColumn<?>)
        --
        +CsvSchema of(CsvColumn<?>... columns)
        --(collection)--
        +CsvSchema add(CsvColumn<?>)
        +void addAll(List<? extends CsvColumn<?>> columns)
        +CsvSchema addAll(CsvColumn<?>... columns)
        +boolean contains(CsvColumn<?>)
        --(naming)--
        +CsvColumn<?> columnForName(String name)
    }
    
    BaseRepeater <|-- CsvWriter
    Closeable <|-- CsvWriter
    CsvWriter --> CsvLine : "writes"
    CsvWriter o-- CsvSchema : "uses"
    class CsvWriter
    {
        --(constructors)--
        +CsvWriter(PrintWriter, ProgressReporter, CsvSchema)
        --
        +CsvSchema schema()
        --(write)--
        +void write(CsvLine)
        +void writeComment(String comment)
    }
    
    CsvReader <|-- UnquotedCsvReader
    class UnquotedCsvReader
    {
        --(constructors)--
        +UnquotedCsvReader(Resource, CsvSchema, char, ProgressReporter)
    }
    
@enduml

