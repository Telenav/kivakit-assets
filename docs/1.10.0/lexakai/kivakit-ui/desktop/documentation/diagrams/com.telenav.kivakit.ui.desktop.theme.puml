
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.ui.desktop.theme"
    
    class KivaKitColors
    {
    }
    
    class KivaKitStrokes
    {
    }
    
    class KivaKitStyles
    {
    }
    
    abstract class KivaKitTheme
    {
        --
        +JEditorPane applyTo(JEditorPane)
        +JComboBox<T> applyTo(JComboBox<T> dropdown)
        +JTableHeader applyTo(JTableHeader)
        +JTextField applyTo(JTextField)
        +JTable applyTo(JTable)
        +JCheckBox applyTo(JCheckBox)
        +JComboBox<T> applyTo(JComboBox<T> dropdown, int preferredWidth)
        +JButton applyTo(JButton)
        +JLabel applyToComponentLabel(JLabel)
        +JPanel applyToContainerPanel(JPanel)
        +Color colorBorder()
        +Color colorCaret()
        +Color colorPanel()
        +Color colorSeparator()
        +Color colorSubPanel()
        +Font fontNormal()
        +Font fontSmall()
        +KivaKitTheme get()
        +Margins margins()
        +void set(KivaKitTheme)
        +Style styleButton()
        +Style styleCaption()
        +Style styleComponentLabel()
        +Style styleDropdown()
        +Style styleLabel()
        +Style styleNote()
        +Style styleProgressBar()
        +Style styleSelection()
        +Style styleTab()
        +Style styleTabHover()
        +Style styleTable()
        +Style styleTableHeader()
        +Style styleTextArea()
        +Style styleTextField()
        +Style styleTitle()
        +Font tableFont()
        --(checks)--
        +boolean isDark()
        --(collection)--
        +JList<T> applyTo(JList<T>)
        +Style styleList()
        --(factory)--
        +JButton newButton(String text, ActionListener)
        +JButton newButton(String text)
        +JButton newButton(String text, Source<Boolean> enabled, ActionListener)
        +JCheckBox newCheckBox(String text)
        +JLabel newComponentLabel(String text)
        +KivaKitPanel newContainerPanel()
        +KivaKitPanel newContainerPanel(LayoutManager)
        +JComboBox<T> newDropDown(T[] values, Source<Boolean> enabled)
        +JComboBox<T> newDropDown(ComboBoxModel<T>)
        +JComboBox<T> newDropDown(ComboBoxModel<T>, Source<Boolean> enabled)
        +JComboBox<T> newDropDown(T[] values)
        +JSeparator newHorizontalSeparator()
        +JLabel newInformationLabel(String text)
        +JLabel newListCellRenderer(String text, boolean isSelected)
        +JLabel newNote(String text)
        +JProgressBar newProgressBar()
        +JScrollPane newScrollPane(JComponent child, AdjustmentListener)
        +JTextField newSearchField()
        +JTextField newSearchField(Source<Boolean> enabled)
        +KivaKitPanel newShadedPanel()
        +KivaKitPanel newShadedSubPanel()
        +JTabbedPane newTabbedPane()
        +JTextField newTextField(int characters)
        +JTextField newTextField()
        +JTextField newTextField(int characters, Source<Boolean> enabled)
        +JTextField newTextField(Source<Boolean> enabled)
        +JSeparator newVerticalSeparator()
        +JSplitPane newVerticalSplitPane(JPanel top, JPanel bottom)
        --(functional)--
        +KivaKitPanel applyToShadedPanel(KivaKitPanel)
        +KivaKitPanel applyToShadedSubPanel(KivaKitPanel)
        +Font fontFixedWidth()
        +Style styleSelectedTab()
        --(lifecycle)--
        +void initialize()
        --(messaging)--
        +void popupInformation(JFrame, String title, String message)
        +Style styleInformationLabel()
        +Style styleMessage(Class<? extends Message> type)
        --(search)--
        +JTextField applyToSearchField(JTextField)
    }
    
@enduml

