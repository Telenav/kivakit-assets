
@startuml

    !include lexakai.theme
    
    title "com.telenav.kivakit.microservice.internal.protocols.rest.plugins.jetty.openapi.reader"
    
    abstract BaseComponent
    
    class AnnotationReader
    {
        --(filesystem)--
        +void copyToSchema(Member, Schema<?>)
    }
    
    BaseComponent <|-- OpenApiAnnotationReader
    class OpenApiAnnotationReader
    {
        --(read)--
        +String readAnnotationString(Class<? extends MicroservletRequest> requestType, String method, Class<T> annotationClass, Function<T,String>)
        +StringList readAnnotationStringList(Class<? extends MicroservletRequest> requestType, String method, Class<T> annotationClass, Function<T,String[]>)
    }
    
    BaseComponent <|-- OpenApiPathReader
    class OpenApiPathReader
    {
        --(read)--
        +Paths read()
    }
    
    BaseComponent <|-- OpenApiReader
    class OpenApiReader
    {
        --(read)--
        +OpenAPI read()
    }
    
    BaseComponent <|-- OpenApiSchemaReader
    class OpenApiSchemaReader
    {
        --(constructors)--
        +OpenApiSchemaReader()
        --(read)--
        +OpenApiSchemaReader addModelToRead(Type<?> model)
        +Map<String,Schema> read()
        +Schema<?> readSchema(Type<?>)
        --(status)--
        +Schema<?> schemaError()
    }
    
    class PrimitiveReader
    {
        --(read)--
        +Schema<?> readPrimitive(Type<?>)
    }
    
    class ReferenceResolver
    {
        --
        +String reference(String typeName)
        +String reference(Type<?> typeParameter)
    }
    
    class SchemaCopier
    {
        --(filesystem)--
        +void copy(Schema from, Schema<?> to)
        +Schema<?> copy(Schema<?> that)
    }
    
@enduml

